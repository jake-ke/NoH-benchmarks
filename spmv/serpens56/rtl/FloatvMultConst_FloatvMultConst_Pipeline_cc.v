// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FloatvMultConst_FloatvMultConst_Pipeline_cc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_out_din,
        fifo_out_full_n,
        fifo_out_write,
        num_ite_Y,
        fifo_in_s_dout,
        fifo_in_s_empty_n,
        fifo_in_s_read,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [512:0] fifo_out_din;
input   fifo_out_full_n;
output   fifo_out_write;
input  [31:0] num_ite_Y;
input  [512:0] fifo_in_s_dout;
input   fifo_in_s_empty_n;
output   fifo_in_s_read;
input  [31:0] empty;

reg ap_idle;
reg fifo_out_write;
reg fifo_in_s_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg   [0:0] p_vld_reg_720;
reg   [0:0] p_vld_reg_720_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln211_fu_213_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_out_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] p_vld_fu_221_p1;
reg   [0:0] p_vld_reg_720_pp0_iter1_reg;
wire   [31:0] trunc_ln78_fu_229_p1;
reg   [31:0] trunc_ln78_reg_724;
reg   [31:0] trunc_ln1_reg_729;
reg   [31:0] trunc_ln78_2_reg_734;
reg   [31:0] trunc_ln78_3_reg_739;
reg   [31:0] trunc_ln78_4_reg_744;
reg   [31:0] trunc_ln78_5_reg_749;
reg   [31:0] trunc_ln78_6_reg_754;
reg   [31:0] trunc_ln78_7_reg_759;
reg   [31:0] trunc_ln78_8_reg_764;
reg   [31:0] trunc_ln78_9_reg_769;
reg   [31:0] trunc_ln78_s_reg_774;
reg   [31:0] trunc_ln78_1_reg_779;
reg   [31:0] trunc_ln78_10_reg_784;
reg   [31:0] trunc_ln78_11_reg_789;
reg   [31:0] trunc_ln78_12_reg_794;
reg   [31:0] trunc_ln78_13_reg_799;
wire   [31:0] elem_val_fu_401_p1;
wire   [31:0] elem_val_1_fu_404_p1;
wire   [31:0] bitcast_ln78_fu_407_p1;
wire   [31:0] bitcast_ln78_1_fu_410_p1;
wire   [31:0] bitcast_ln78_2_fu_413_p1;
wire   [31:0] bitcast_ln78_3_fu_416_p1;
wire   [31:0] bitcast_ln78_4_fu_419_p1;
wire   [31:0] bitcast_ln78_5_fu_422_p1;
wire   [31:0] bitcast_ln78_6_fu_425_p1;
wire   [31:0] bitcast_ln78_7_fu_428_p1;
wire   [31:0] bitcast_ln78_8_fu_431_p1;
wire   [31:0] bitcast_ln78_9_fu_434_p1;
wire   [31:0] bitcast_ln78_10_fu_437_p1;
wire   [31:0] bitcast_ln78_11_fu_440_p1;
wire   [31:0] bitcast_ln78_12_fu_443_p1;
wire   [31:0] bitcast_ln78_13_fu_446_p1;
reg   [31:0] i_fu_98;
wire   [31:0] i_2_fu_383_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_1;
wire   [0:0] fifo_in_s_read_nbread_fu_114_p2_0;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_127_p0;
reg   [31:0] grp_fu_127_p1;
reg   [31:0] grp_fu_131_p0;
reg   [31:0] grp_fu_131_p1;
reg   [31:0] grp_fu_135_p0;
reg   [31:0] grp_fu_135_p1;
reg   [31:0] grp_fu_139_p0;
reg   [31:0] grp_fu_139_p1;
reg   [31:0] grp_fu_143_p0;
reg   [31:0] grp_fu_143_p1;
reg   [31:0] grp_fu_147_p0;
reg   [31:0] grp_fu_147_p1;
reg   [31:0] grp_fu_151_p0;
reg   [31:0] grp_fu_151_p1;
reg   [31:0] grp_fu_155_p0;
reg   [31:0] grp_fu_155_p1;
reg   [31:0] grp_fu_159_p0;
reg   [31:0] grp_fu_159_p1;
reg   [31:0] grp_fu_163_p0;
reg   [31:0] grp_fu_163_p1;
reg   [31:0] grp_fu_167_p0;
reg   [31:0] grp_fu_167_p1;
reg   [31:0] grp_fu_171_p0;
reg   [31:0] grp_fu_171_p1;
reg   [31:0] grp_fu_175_p0;
reg   [31:0] grp_fu_175_p1;
reg   [31:0] grp_fu_179_p0;
reg   [31:0] grp_fu_179_p1;
reg   [31:0] grp_fu_183_p0;
reg   [31:0] grp_fu_183_p1;
reg   [31:0] grp_fu_187_p0;
reg   [31:0] grp_fu_187_p1;
reg   [31:0] grp_fu_127_p2;
reg   [31:0] grp_fu_131_p2;
reg   [31:0] grp_fu_135_p2;
reg   [31:0] grp_fu_139_p2;
reg   [31:0] grp_fu_143_p2;
reg   [31:0] grp_fu_147_p2;
reg   [31:0] grp_fu_151_p2;
reg   [31:0] grp_fu_155_p2;
reg   [31:0] grp_fu_159_p2;
reg   [31:0] grp_fu_163_p2;
reg   [31:0] grp_fu_167_p2;
reg   [31:0] grp_fu_171_p2;
reg   [31:0] grp_fu_175_p2;
reg   [31:0] grp_fu_179_p2;
reg   [31:0] grp_fu_183_p2;
reg   [31:0] grp_fu_187_p2;
wire   [31:0] bitcast_ln151_15_fu_621_p1;
wire   [31:0] bitcast_ln151_14_fu_617_p1;
wire   [31:0] bitcast_ln151_13_fu_613_p1;
wire   [31:0] bitcast_ln151_12_fu_609_p1;
wire   [31:0] bitcast_ln151_11_fu_605_p1;
wire   [31:0] bitcast_ln151_10_fu_601_p1;
wire   [31:0] bitcast_ln151_9_fu_597_p1;
wire   [31:0] bitcast_ln151_8_fu_593_p1;
wire   [31:0] bitcast_ln151_7_fu_589_p1;
wire   [31:0] bitcast_ln151_6_fu_585_p1;
wire   [31:0] bitcast_ln151_5_fu_581_p1;
wire   [31:0] bitcast_ln151_4_fu_577_p1;
wire   [31:0] bitcast_ln151_3_fu_573_p1;
wire   [31:0] bitcast_ln151_2_fu_569_p1;
wire   [31:0] bitcast_ln151_1_fu_565_p1;
wire   [31:0] bitcast_ln151_fu_561_p1;
wire   [511:0] or_ln151_s_fu_625_p17;
reg    grp_fu_127_ce;
wire   [31:0] pre_grp_fu_127_p2;
reg   [31:0] pre_grp_fu_127_p2_reg;
reg    grp_fu_131_ce;
wire   [31:0] pre_grp_fu_131_p2;
reg   [31:0] pre_grp_fu_131_p2_reg;
reg    grp_fu_135_ce;
wire   [31:0] pre_grp_fu_135_p2;
reg   [31:0] pre_grp_fu_135_p2_reg;
reg    grp_fu_139_ce;
wire   [31:0] pre_grp_fu_139_p2;
reg   [31:0] pre_grp_fu_139_p2_reg;
reg    grp_fu_143_ce;
wire   [31:0] pre_grp_fu_143_p2;
reg   [31:0] pre_grp_fu_143_p2_reg;
reg    grp_fu_147_ce;
wire   [31:0] pre_grp_fu_147_p2;
reg   [31:0] pre_grp_fu_147_p2_reg;
reg    grp_fu_151_ce;
wire   [31:0] pre_grp_fu_151_p2;
reg   [31:0] pre_grp_fu_151_p2_reg;
reg    grp_fu_155_ce;
wire   [31:0] pre_grp_fu_155_p2;
reg   [31:0] pre_grp_fu_155_p2_reg;
reg    grp_fu_159_ce;
wire   [31:0] pre_grp_fu_159_p2;
reg   [31:0] pre_grp_fu_159_p2_reg;
reg    grp_fu_163_ce;
wire   [31:0] pre_grp_fu_163_p2;
reg   [31:0] pre_grp_fu_163_p2_reg;
reg    grp_fu_167_ce;
wire   [31:0] pre_grp_fu_167_p2;
reg   [31:0] pre_grp_fu_167_p2_reg;
reg    grp_fu_171_ce;
wire   [31:0] pre_grp_fu_171_p2;
reg   [31:0] pre_grp_fu_171_p2_reg;
reg    grp_fu_175_ce;
wire   [31:0] pre_grp_fu_175_p2;
reg   [31:0] pre_grp_fu_175_p2_reg;
reg    grp_fu_179_ce;
wire   [31:0] pre_grp_fu_179_p2;
reg   [31:0] pre_grp_fu_179_p2_reg;
reg    grp_fu_183_ce;
wire   [31:0] pre_grp_fu_183_p2;
reg   [31:0] pre_grp_fu_183_p2_reg;
reg    grp_fu_187_ce;
wire   [31:0] pre_grp_fu_187_p2;
reg   [31:0] pre_grp_fu_187_p2_reg;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_612;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 i_fu_98 = 32'd0;
#0 ap_done_reg = 1'b0;
end

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_127_p0),
    .din1(grp_fu_127_p1),
    .ce(grp_fu_127_ce),
    .dout(pre_grp_fu_127_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_131_p0),
    .din1(grp_fu_131_p1),
    .ce(grp_fu_131_ce),
    .dout(pre_grp_fu_131_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_135_p0),
    .din1(grp_fu_135_p1),
    .ce(grp_fu_135_ce),
    .dout(pre_grp_fu_135_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_139_p0),
    .din1(grp_fu_139_p1),
    .ce(grp_fu_139_ce),
    .dout(pre_grp_fu_139_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_143_p0),
    .din1(grp_fu_143_p1),
    .ce(grp_fu_143_ce),
    .dout(pre_grp_fu_143_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_147_p0),
    .din1(grp_fu_147_p1),
    .ce(grp_fu_147_ce),
    .dout(pre_grp_fu_147_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_151_p0),
    .din1(grp_fu_151_p1),
    .ce(grp_fu_151_ce),
    .dout(pre_grp_fu_151_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_155_p0),
    .din1(grp_fu_155_p1),
    .ce(grp_fu_155_ce),
    .dout(pre_grp_fu_155_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_159_p0),
    .din1(grp_fu_159_p1),
    .ce(grp_fu_159_ce),
    .dout(pre_grp_fu_159_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_163_p0),
    .din1(grp_fu_163_p1),
    .ce(grp_fu_163_ce),
    .dout(pre_grp_fu_163_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_167_p0),
    .din1(grp_fu_167_p1),
    .ce(grp_fu_167_ce),
    .dout(pre_grp_fu_167_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_171_p0),
    .din1(grp_fu_171_p1),
    .ce(grp_fu_171_ce),
    .dout(pre_grp_fu_171_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .din1(grp_fu_175_p1),
    .ce(grp_fu_175_ce),
    .dout(pre_grp_fu_175_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_179_p0),
    .din1(grp_fu_179_p1),
    .ce(grp_fu_179_ce),
    .dout(pre_grp_fu_179_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_183_p0),
    .din1(grp_fu_183_p1),
    .ce(grp_fu_183_ce),
    .dout(pre_grp_fu_183_p2)
);

FloatvMultConst_fmul_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_primitive_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_187_p0),
    .din1(grp_fu_187_p1),
    .ce(grp_fu_187_ce),
    .dout(pre_grp_fu_187_p2)
);

FloatvMultConst_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_127_ce <= 1'b1;
    end else begin
        grp_fu_127_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_131_ce <= 1'b1;
    end else begin
        grp_fu_131_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_135_ce <= 1'b1;
    end else begin
        grp_fu_135_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_139_ce <= 1'b1;
    end else begin
        grp_fu_139_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_143_ce <= 1'b1;
    end else begin
        grp_fu_143_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_147_ce <= 1'b1;
    end else begin
        grp_fu_147_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_151_ce <= 1'b1;
    end else begin
        grp_fu_151_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_155_ce <= 1'b1;
    end else begin
        grp_fu_155_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_159_ce <= 1'b1;
    end else begin
        grp_fu_159_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_163_ce <= 1'b1;
    end else begin
        grp_fu_163_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_167_ce <= 1'b1;
    end else begin
        grp_fu_167_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_171_ce <= 1'b1;
    end else begin
        grp_fu_171_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_175_ce <= 1'b1;
    end else begin
        grp_fu_175_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_179_ce <= 1'b1;
    end else begin
        grp_fu_179_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_183_ce <= 1'b1;
    end else begin
        grp_fu_183_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_187_ce <= 1'b1;
    end else begin
        grp_fu_187_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_612)) begin
            i_fu_98 <= i_2_fu_383_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_98 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        p_vld_reg_720 <= fifo_in_s_read_nbread_fu_114_p2_0;
        p_vld_reg_720_pp0_iter1_reg <= p_vld_reg_720;
        trunc_ln1_reg_729 <= {{fifo_in_s_dout[63:32]}};
        trunc_ln78_10_reg_784 <= {{fifo_in_s_dout[415:384]}};
        trunc_ln78_11_reg_789 <= {{fifo_in_s_dout[447:416]}};
        trunc_ln78_12_reg_794 <= {{fifo_in_s_dout[479:448]}};
        trunc_ln78_13_reg_799 <= {{fifo_in_s_dout[511:480]}};
        trunc_ln78_1_reg_779 <= {{fifo_in_s_dout[383:352]}};
        trunc_ln78_2_reg_734 <= {{fifo_in_s_dout[95:64]}};
        trunc_ln78_3_reg_739 <= {{fifo_in_s_dout[127:96]}};
        trunc_ln78_4_reg_744 <= {{fifo_in_s_dout[159:128]}};
        trunc_ln78_5_reg_749 <= {{fifo_in_s_dout[191:160]}};
        trunc_ln78_6_reg_754 <= {{fifo_in_s_dout[223:192]}};
        trunc_ln78_7_reg_759 <= {{fifo_in_s_dout[255:224]}};
        trunc_ln78_8_reg_764 <= {{fifo_in_s_dout[287:256]}};
        trunc_ln78_9_reg_769 <= {{fifo_in_s_dout[319:288]}};
        trunc_ln78_reg_724 <= trunc_ln78_fu_229_p1;
        trunc_ln78_s_reg_774 <= {{fifo_in_s_dout[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_127_p0 <= elem_val_fu_401_p1;
        grp_fu_127_p1 <= empty;
        grp_fu_131_p0 <= elem_val_1_fu_404_p1;
        grp_fu_131_p1 <= empty;
        grp_fu_135_p0 <= bitcast_ln78_fu_407_p1;
        grp_fu_135_p1 <= empty;
        grp_fu_139_p0 <= bitcast_ln78_1_fu_410_p1;
        grp_fu_139_p1 <= empty;
        grp_fu_143_p0 <= bitcast_ln78_2_fu_413_p1;
        grp_fu_143_p1 <= empty;
        grp_fu_147_p0 <= bitcast_ln78_3_fu_416_p1;
        grp_fu_147_p1 <= empty;
        grp_fu_151_p0 <= bitcast_ln78_4_fu_419_p1;
        grp_fu_151_p1 <= empty;
        grp_fu_155_p0 <= bitcast_ln78_5_fu_422_p1;
        grp_fu_155_p1 <= empty;
        grp_fu_159_p0 <= bitcast_ln78_6_fu_425_p1;
        grp_fu_159_p1 <= empty;
        grp_fu_163_p0 <= bitcast_ln78_7_fu_428_p1;
        grp_fu_163_p1 <= empty;
        grp_fu_167_p0 <= bitcast_ln78_8_fu_431_p1;
        grp_fu_167_p1 <= empty;
        grp_fu_171_p0 <= bitcast_ln78_9_fu_434_p1;
        grp_fu_171_p1 <= empty;
        grp_fu_175_p0 <= bitcast_ln78_10_fu_437_p1;
        grp_fu_175_p1 <= empty;
        grp_fu_179_p0 <= bitcast_ln78_11_fu_440_p1;
        grp_fu_179_p1 <= empty;
        grp_fu_183_p0 <= bitcast_ln78_12_fu_443_p1;
        grp_fu_183_p1 <= empty;
        grp_fu_187_p0 <= bitcast_ln78_13_fu_446_p1;
        grp_fu_187_p1 <= empty;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        p_vld_reg_720_pp0_iter2_reg <= p_vld_reg_720_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_127_ce == 1'b1)) begin
        pre_grp_fu_127_p2_reg <= pre_grp_fu_127_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_131_ce == 1'b1)) begin
        pre_grp_fu_131_p2_reg <= pre_grp_fu_131_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_135_ce == 1'b1)) begin
        pre_grp_fu_135_p2_reg <= pre_grp_fu_135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_139_ce == 1'b1)) begin
        pre_grp_fu_139_p2_reg <= pre_grp_fu_139_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_143_ce == 1'b1)) begin
        pre_grp_fu_143_p2_reg <= pre_grp_fu_143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_147_ce == 1'b1)) begin
        pre_grp_fu_147_p2_reg <= pre_grp_fu_147_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_151_ce == 1'b1)) begin
        pre_grp_fu_151_p2_reg <= pre_grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_155_ce == 1'b1)) begin
        pre_grp_fu_155_p2_reg <= pre_grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_159_ce == 1'b1)) begin
        pre_grp_fu_159_p2_reg <= pre_grp_fu_159_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_163_ce == 1'b1)) begin
        pre_grp_fu_163_p2_reg <= pre_grp_fu_163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_167_ce == 1'b1)) begin
        pre_grp_fu_167_p2_reg <= pre_grp_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_171_ce == 1'b1)) begin
        pre_grp_fu_171_p2_reg <= pre_grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_175_ce == 1'b1)) begin
        pre_grp_fu_175_p2_reg <= pre_grp_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_179_ce == 1'b1)) begin
        pre_grp_fu_179_p2_reg <= pre_grp_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_183_ce == 1'b1)) begin
        pre_grp_fu_183_p2_reg <= pre_grp_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_187_ce == 1'b1)) begin
        pre_grp_fu_187_p2_reg <= pre_grp_fu_187_p2;
    end
end

always @ (*) begin
    if (((icmp_ln211_fu_213_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_98;
    end
end

always @ (*) begin
    if (((fifo_in_s_empty_n == 1'b1) & (icmp_ln211_fu_213_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_in_s_read = 1'b1;
    end else begin
        fifo_in_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (p_vld_reg_720_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fifo_out_blk_n = fifo_out_full_n;
    end else begin
        fifo_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (p_vld_reg_720_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fifo_out_write = 1'b1;
    end else begin
        fifo_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((grp_fu_127_ce == 1'b1)) begin
        grp_fu_127_p2 = pre_grp_fu_127_p2;
    end else begin
        grp_fu_127_p2 = pre_grp_fu_127_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_131_ce == 1'b1)) begin
        grp_fu_131_p2 = pre_grp_fu_131_p2;
    end else begin
        grp_fu_131_p2 = pre_grp_fu_131_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_135_ce == 1'b1)) begin
        grp_fu_135_p2 = pre_grp_fu_135_p2;
    end else begin
        grp_fu_135_p2 = pre_grp_fu_135_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_139_ce == 1'b1)) begin
        grp_fu_139_p2 = pre_grp_fu_139_p2;
    end else begin
        grp_fu_139_p2 = pre_grp_fu_139_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_143_ce == 1'b1)) begin
        grp_fu_143_p2 = pre_grp_fu_143_p2;
    end else begin
        grp_fu_143_p2 = pre_grp_fu_143_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_147_ce == 1'b1)) begin
        grp_fu_147_p2 = pre_grp_fu_147_p2;
    end else begin
        grp_fu_147_p2 = pre_grp_fu_147_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_151_ce == 1'b1)) begin
        grp_fu_151_p2 = pre_grp_fu_151_p2;
    end else begin
        grp_fu_151_p2 = pre_grp_fu_151_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_155_ce == 1'b1)) begin
        grp_fu_155_p2 = pre_grp_fu_155_p2;
    end else begin
        grp_fu_155_p2 = pre_grp_fu_155_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_159_ce == 1'b1)) begin
        grp_fu_159_p2 = pre_grp_fu_159_p2;
    end else begin
        grp_fu_159_p2 = pre_grp_fu_159_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_163_ce == 1'b1)) begin
        grp_fu_163_p2 = pre_grp_fu_163_p2;
    end else begin
        grp_fu_163_p2 = pre_grp_fu_163_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_167_ce == 1'b1)) begin
        grp_fu_167_p2 = pre_grp_fu_167_p2;
    end else begin
        grp_fu_167_p2 = pre_grp_fu_167_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_171_ce == 1'b1)) begin
        grp_fu_171_p2 = pre_grp_fu_171_p2;
    end else begin
        grp_fu_171_p2 = pre_grp_fu_171_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_175_ce == 1'b1)) begin
        grp_fu_175_p2 = pre_grp_fu_175_p2;
    end else begin
        grp_fu_175_p2 = pre_grp_fu_175_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_179_ce == 1'b1)) begin
        grp_fu_179_p2 = pre_grp_fu_179_p2;
    end else begin
        grp_fu_179_p2 = pre_grp_fu_179_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_183_ce == 1'b1)) begin
        grp_fu_183_p2 = pre_grp_fu_183_p2;
    end else begin
        grp_fu_183_p2 = pre_grp_fu_183_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_187_ce == 1'b1)) begin
        grp_fu_187_p2 = pre_grp_fu_187_p2;
    end else begin
        grp_fu_187_p2 = pre_grp_fu_187_p2_reg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((p_vld_reg_720_pp0_iter2_reg == 1'd1) & (fifo_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_612 = ((p_vld_fu_221_p1 == 1'd1) & (icmp_ln211_fu_213_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln151_10_fu_601_p1 = grp_fu_167_p2;

assign bitcast_ln151_11_fu_605_p1 = grp_fu_171_p2;

assign bitcast_ln151_12_fu_609_p1 = grp_fu_175_p2;

assign bitcast_ln151_13_fu_613_p1 = grp_fu_179_p2;

assign bitcast_ln151_14_fu_617_p1 = grp_fu_183_p2;

assign bitcast_ln151_15_fu_621_p1 = grp_fu_187_p2;

assign bitcast_ln151_1_fu_565_p1 = grp_fu_131_p2;

assign bitcast_ln151_2_fu_569_p1 = grp_fu_135_p2;

assign bitcast_ln151_3_fu_573_p1 = grp_fu_139_p2;

assign bitcast_ln151_4_fu_577_p1 = grp_fu_143_p2;

assign bitcast_ln151_5_fu_581_p1 = grp_fu_147_p2;

assign bitcast_ln151_6_fu_585_p1 = grp_fu_151_p2;

assign bitcast_ln151_7_fu_589_p1 = grp_fu_155_p2;

assign bitcast_ln151_8_fu_593_p1 = grp_fu_159_p2;

assign bitcast_ln151_9_fu_597_p1 = grp_fu_163_p2;

assign bitcast_ln151_fu_561_p1 = grp_fu_127_p2;

assign bitcast_ln78_10_fu_437_p1 = trunc_ln78_10_reg_784;

assign bitcast_ln78_11_fu_440_p1 = trunc_ln78_11_reg_789;

assign bitcast_ln78_12_fu_443_p1 = trunc_ln78_12_reg_794;

assign bitcast_ln78_13_fu_446_p1 = trunc_ln78_13_reg_799;

assign bitcast_ln78_1_fu_410_p1 = trunc_ln78_3_reg_739;

assign bitcast_ln78_2_fu_413_p1 = trunc_ln78_4_reg_744;

assign bitcast_ln78_3_fu_416_p1 = trunc_ln78_5_reg_749;

assign bitcast_ln78_4_fu_419_p1 = trunc_ln78_6_reg_754;

assign bitcast_ln78_5_fu_422_p1 = trunc_ln78_7_reg_759;

assign bitcast_ln78_6_fu_425_p1 = trunc_ln78_8_reg_764;

assign bitcast_ln78_7_fu_428_p1 = trunc_ln78_9_reg_769;

assign bitcast_ln78_8_fu_431_p1 = trunc_ln78_s_reg_774;

assign bitcast_ln78_9_fu_434_p1 = trunc_ln78_1_reg_779;

assign bitcast_ln78_fu_407_p1 = trunc_ln78_2_reg_734;

assign elem_val_1_fu_404_p1 = trunc_ln1_reg_729;

assign elem_val_fu_401_p1 = trunc_ln78_reg_724;

assign fifo_in_s_read_nbread_fu_114_p2_0 = fifo_in_s_empty_n;

assign fifo_out_din = or_ln151_s_fu_625_p17;

assign i_2_fu_383_p2 = (ap_sig_allocacmp_i_1 + 32'd1);

assign icmp_ln211_fu_213_p2 = (($signed(ap_sig_allocacmp_i_1) < $signed(num_ite_Y)) ? 1'b1 : 1'b0);

assign or_ln151_s_fu_625_p17 = {{{{{{{{{{{{{{{{bitcast_ln151_15_fu_621_p1}, {bitcast_ln151_14_fu_617_p1}}, {bitcast_ln151_13_fu_613_p1}}, {bitcast_ln151_12_fu_609_p1}}, {bitcast_ln151_11_fu_605_p1}}, {bitcast_ln151_10_fu_601_p1}}, {bitcast_ln151_9_fu_597_p1}}, {bitcast_ln151_8_fu_593_p1}}, {bitcast_ln151_7_fu_589_p1}}, {bitcast_ln151_6_fu_585_p1}}, {bitcast_ln151_5_fu_581_p1}}, {bitcast_ln151_4_fu_577_p1}}, {bitcast_ln151_3_fu_573_p1}}, {bitcast_ln151_2_fu_569_p1}}, {bitcast_ln151_1_fu_565_p1}}, {bitcast_ln151_fu_561_p1}};

assign p_vld_fu_221_p1 = fifo_in_s_read_nbread_fu_114_p2_0;

assign trunc_ln78_fu_229_p1 = fifo_in_s_dout[31:0];

endmodule //FloatvMultConst_FloatvMultConst_Pipeline_cc
