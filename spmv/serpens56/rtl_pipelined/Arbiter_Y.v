`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
(* CORE_GENERATION_INFO="Arbiter_Y_Arbiter_Y,hls_ip_2023_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvh1582-vsva3697-2MP-e-S,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.883000,HLS_SYN_LAT=909,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=474,HLS_SYN_LUT=1083,HLS_VERSION=2023_2_2}" *)
module Arbiter_Y (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P_N,
        M,
        fifo_in_0_dout,
        fifo_in_0_empty_n,
        fifo_in_0_read,
        fifo_in_1_dout,
        fifo_in_1_empty_n,
        fifo_in_1_read,
        fifo_in_2_dout,
        fifo_in_2_empty_n,
        fifo_in_2_read,
        fifo_in_3_dout,
        fifo_in_3_empty_n,
        fifo_in_3_read,
        fifo_in_4_dout,
        fifo_in_4_empty_n,
        fifo_in_4_read,
        fifo_in_5_dout,
        fifo_in_5_empty_n,
        fifo_in_5_read,
        fifo_in_6_dout,
        fifo_in_6_empty_n,
        fifo_in_6_read,
        fifo_in_peek_0_dout,
        fifo_in_peek_0_empty_n,
        fifo_in_peek_0_read,
        fifo_in_peek_1_dout,
        fifo_in_peek_1_empty_n,
        fifo_in_peek_1_read,
        fifo_in_peek_2_dout,
        fifo_in_peek_2_empty_n,
        fifo_in_peek_2_read,
        fifo_in_peek_3_dout,
        fifo_in_peek_3_empty_n,
        fifo_in_peek_3_read,
        fifo_in_peek_4_dout,
        fifo_in_peek_4_empty_n,
        fifo_in_peek_4_read,
        fifo_in_peek_5_dout,
        fifo_in_peek_5_empty_n,
        fifo_in_peek_5_read,
        fifo_in_peek_6_dout,
        fifo_in_peek_6_empty_n,
        fifo_in_peek_6_read,
        fifo_out_din,
        fifo_out_full_n,
        fifo_out_write
);
parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] P_N;
input  [31:0] M;
input  [64:0] fifo_in_0_dout;
input   fifo_in_0_empty_n;
output   fifo_in_0_read;
input  [64:0] fifo_in_1_dout;
input   fifo_in_1_empty_n;
output   fifo_in_1_read;
input  [64:0] fifo_in_2_dout;
input   fifo_in_2_empty_n;
output   fifo_in_2_read;
input  [64:0] fifo_in_3_dout;
input   fifo_in_3_empty_n;
output   fifo_in_3_read;
input  [64:0] fifo_in_4_dout;
input   fifo_in_4_empty_n;
output   fifo_in_4_read;
input  [64:0] fifo_in_5_dout;
input   fifo_in_5_empty_n;
output   fifo_in_5_read;
input  [64:0] fifo_in_6_dout;
input   fifo_in_6_empty_n;
output   fifo_in_6_read;
input  [64:0] fifo_in_peek_0_dout;
input   fifo_in_peek_0_empty_n;
output   fifo_in_peek_0_read;
input  [64:0] fifo_in_peek_1_dout;
input   fifo_in_peek_1_empty_n;
output   fifo_in_peek_1_read;
input  [64:0] fifo_in_peek_2_dout;
input   fifo_in_peek_2_empty_n;
output   fifo_in_peek_2_read;
input  [64:0] fifo_in_peek_3_dout;
input   fifo_in_peek_3_empty_n;
output   fifo_in_peek_3_read;
input  [64:0] fifo_in_peek_4_dout;
input   fifo_in_peek_4_empty_n;
output   fifo_in_peek_4_read;
input  [64:0] fifo_in_peek_5_dout;
input   fifo_in_peek_5_empty_n;
output   fifo_in_peek_5_read;
input  [64:0] fifo_in_peek_6_dout;
input   fifo_in_peek_6_empty_n;
output   fifo_in_peek_6_read;
output  [64:0] fifo_out_din;
input   fifo_out_full_n;
output   fifo_out_write;
reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_in_0_read;
reg fifo_in_1_read;
reg fifo_in_2_read;
reg fifo_in_3_read;
reg fifo_in_4_read;
reg fifo_in_5_read;
reg fifo_in_6_read;
reg fifo_out_write;
 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_reg_394;
reg   [27:0] num_out_reg_400;
wire   [64:0] grp_fu_250_p2;
reg   [64:0] mul_ln236_reg_405;
wire    ap_CS_fsm_state3;
reg  signed [25:0] tmp_2_reg_410;
wire   [28:0] select_ln236_1_fu_344_p3;
reg   [28:0] select_ln236_1_reg_416;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire  signed [28:0] num_pe_output_fu_371_p2;
reg   [28:0] num_pe_output_reg_427;
wire   [31:0] grp_fu_245_p2;
reg   [31:0] num_ite_Y_reg_437;
wire    ap_CS_fsm_state7;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_ap_done;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_ap_idle;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_ap_ready;
wire   [64:0] grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_out_din;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_out_write;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_0_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_1_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_2_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_3_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_4_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_5_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_6_read;
reg    grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start_reg;
wire    ap_CS_fsm_state8;
wire  signed [31:0] grp_fu_245_p1;
wire   [33:0] grp_fu_250_p1;
wire  signed [31:0] add_ln236_fu_257_p2;
wire   [31:0] add_ln237_fu_284_p2;
wire   [64:0] sub_ln236_fu_310_p2;
wire   [25:0] tmp_1_fu_315_p4;
wire   [25:0] select_ln236_2_fu_328_p3;
wire  signed [28:0] sext_ln236_3_fu_334_p1;
wire   [28:0] sub_ln236_1_fu_338_p2;
wire  signed [28:0] sext_ln236_2_fu_325_p1;
wire   [0:0] icmp_ln235_fu_351_p2;
wire   [28:0] shl_ln236_fu_366_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start_reg = 1'b0;
end
Arbiter_Y_Arbiter_Y_Pipeline_aby grp_Arbiter_Y_Pipeline_aby_fu_222(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start),
    .ap_done(grp_Arbiter_Y_Pipeline_aby_fu_222_ap_done),
    .ap_idle(grp_Arbiter_Y_Pipeline_aby_fu_222_ap_idle),
    .ap_ready(grp_Arbiter_Y_Pipeline_aby_fu_222_ap_ready),
    .num_ite_Y(num_ite_Y_reg_437),
    .fifo_out_din(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_out_din),
    .fifo_out_full_n(fifo_out_full_n),
    .fifo_out_write(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_out_write),
    .fifo_in_0_dout(fifo_in_0_dout),
    .fifo_in_0_empty_n(fifo_in_0_empty_n),
    .fifo_in_0_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_0_read),
    .fifo_in_1_dout(fifo_in_1_dout),
    .fifo_in_1_empty_n(fifo_in_1_empty_n),
    .fifo_in_1_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_1_read),
    .fifo_in_2_dout(fifo_in_2_dout),
    .fifo_in_2_empty_n(fifo_in_2_empty_n),
    .fifo_in_2_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_2_read),
    .fifo_in_3_dout(fifo_in_3_dout),
    .fifo_in_3_empty_n(fifo_in_3_empty_n),
    .fifo_in_3_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_3_read),
    .fifo_in_4_dout(fifo_in_4_dout),
    .fifo_in_4_empty_n(fifo_in_4_empty_n),
    .fifo_in_4_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_4_read),
    .fifo_in_5_dout(fifo_in_5_dout),
    .fifo_in_5_empty_n(fifo_in_5_empty_n),
    .fifo_in_5_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_5_read),
    .fifo_in_6_dout(fifo_in_6_dout),
    .fifo_in_6_empty_n(fifo_in_6_empty_n),
    .fifo_in_6_read(grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_6_read),
    .sext_ln236(num_pe_output_reg_427),
    .sext_ln237(num_out_reg_400)
);
Arbiter_Y_mul_29s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_29s_32s_32_3_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(num_pe_output_fu_371_p2),
    .din1(grp_fu_245_p1),
    .ce(1'b1),
    .dout(grp_fu_245_p2)
);
Arbiter_Y_mul_32s_34ns_65_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_3_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln236_fu_257_p2),
    .din1(grp_fu_250_p1),
    .ce(1'b1),
    .dout(grp_fu_250_p2)
);
always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start_reg <= 1'b1;
        end else if ((grp_Arbiter_Y_Pipeline_aby_fu_222_ap_ready == 1'b1)) begin
            grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln236_reg_405 <= grp_fu_250_p2;
        tmp_2_reg_410 <= {{grp_fu_250_p2[64:39]}};
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        num_ite_Y_reg_437 <= grp_fu_245_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        num_out_reg_400 <= {{add_ln237_fu_284_p2[31:4]}};
        tmp_reg_394 <= add_ln236_fu_257_p2[32'd31];
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        num_pe_output_reg_427 <= num_pe_output_fu_371_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln236_1_reg_416 <= select_ln236_1_fu_344_p3;
    end
end
always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
assign ap_ST_fsm_state2_blk = 1'b0;
assign ap_ST_fsm_state3_blk = 1'b0;
assign ap_ST_fsm_state4_blk = 1'b0;
assign ap_ST_fsm_state5_blk = 1'b0;
assign ap_ST_fsm_state6_blk = 1'b0;
assign ap_ST_fsm_state7_blk = 1'b0;
always @ (*) begin
    if ((grp_Arbiter_Y_Pipeline_aby_fu_222_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_Arbiter_Y_Pipeline_aby_fu_222_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_Arbiter_Y_Pipeline_aby_fu_222_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_0_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_0_read;
    end else begin
        fifo_in_0_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_1_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_1_read;
    end else begin
        fifo_in_1_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_2_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_2_read;
    end else begin
        fifo_in_2_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_3_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_3_read;
    end else begin
        fifo_in_3_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_4_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_4_read;
    end else begin
        fifo_in_4_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_5_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_5_read;
    end else begin
        fifo_in_5_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_6_read = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_in_6_read;
    end else begin
        fifo_in_6_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_out_write = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_out_write;
    end else begin
        fifo_out_write = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_Arbiter_Y_Pipeline_aby_fu_222_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln236_fu_257_p2 = (M + 32'd111);
assign add_ln237_fu_284_p2 = (M + 32'd15);
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];
assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];
assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];
assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];
assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];
always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign fifo_in_peek_0_read = 1'b0;
assign fifo_in_peek_1_read = 1'b0;
assign fifo_in_peek_2_read = 1'b0;
assign fifo_in_peek_3_read = 1'b0;
assign fifo_in_peek_4_read = 1'b0;
assign fifo_in_peek_5_read = 1'b0;
assign fifo_in_peek_6_read = 1'b0;
assign fifo_out_din = grp_Arbiter_Y_Pipeline_aby_fu_222_fifo_out_din;
assign grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start = grp_Arbiter_Y_Pipeline_aby_fu_222_ap_start_reg;
assign grp_fu_245_p1 = ((icmp_ln235_fu_351_p2[0:0] == 1'b1) ? 32'd1 : P_N);
assign grp_fu_250_p1 = 65'd4908534053;
assign icmp_ln235_fu_351_p2 = ((P_N == 32'd0) ? 1'b1 : 1'b0);
assign num_pe_output_fu_371_p2 = (shl_ln236_fu_366_p2 - select_ln236_1_reg_416);
assign select_ln236_1_fu_344_p3 = ((tmp_reg_394[0:0] == 1'b1) ? sub_ln236_1_fu_338_p2 : sext_ln236_2_fu_325_p1);
assign select_ln236_2_fu_328_p3 = ((tmp_reg_394[0:0] == 1'b1) ? tmp_1_fu_315_p4 : tmp_2_reg_410);
assign sext_ln236_2_fu_325_p1 = tmp_2_reg_410;
assign sext_ln236_3_fu_334_p1 = $signed(select_ln236_2_fu_328_p3);
assign shl_ln236_fu_366_p2 = select_ln236_1_reg_416 << 29'd3;
assign sub_ln236_1_fu_338_p2 = ($signed(29'd0) - $signed(sext_ln236_3_fu_334_p1));
assign sub_ln236_fu_310_p2 = (65'd0 - mul_ln236_reg_405);
assign tmp_1_fu_315_p4 = {{sub_ln236_fu_310_p2[64:39]}};
endmodule