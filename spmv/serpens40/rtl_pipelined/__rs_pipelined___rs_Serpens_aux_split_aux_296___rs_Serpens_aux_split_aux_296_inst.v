// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pipelined___rs_Serpens_aux_split_aux_296___rs_Serpens_aux_split_aux_296_inst #(
    parameter C_S_AXI_CONTROL_DATA_WIDTH  = 32,
    parameter C_S_AXI_CONTROL_ADDR_WIDTH  = 10,
    parameter C_S_AXI_DATA_WIDTH          = 32,
    parameter C_S_AXI_CONTROL_WSTRB_WIDTH = 4,
    parameter C_S_AXI_WSTRB_WIDTH         = 4
) (
    output wire        __tapa_fsm_unit_ap_clk,
    output wire        __tapa_fsm_unit_ap_rst_n,
    input wire  [31:0] __tapa_fsm_unit_write_Y_0___M__q0,
    input wire  [31:0] __tapa_fsm_unit_write_Y_0___P_N__q0,
    input wire  [63:0] __tapa_fsm_unit_write_Y_0___vec_Y_out__q0,
    output wire        __tapa_fsm_unit_write_Y_0__ap_done,
    output wire        __tapa_fsm_unit_write_Y_0__ap_idle,
    output wire        __tapa_fsm_unit_write_Y_0__ap_ready,
    input wire         __tapa_fsm_unit_write_Y_0__ap_start,
    input wire         ap_clk,
    input wire         ap_rst_n,
    output wire [31:0] write_Y_0_M,
    output wire [31:0] write_Y_0_P_N,
    output wire [63:0] write_Y_0_Y_out_read_addr_offset,
    output wire [63:0] write_Y_0_Y_out_write_addr_offset,
    output wire        write_Y_0_ap_clk,
    input wire         write_Y_0_ap_done,
    input wire         write_Y_0_ap_idle,
    input wire         write_Y_0_ap_ready,
    output wire        write_Y_0_ap_rst_n,
    output wire        write_Y_0_ap_start
);

wire        __rs_pipelined_ap_rst_n;



__rs_Serpens_aux_split_aux_296 #(
    .C_S_AXI_CONTROL_ADDR_WIDTH  (C_S_AXI_CONTROL_ADDR_WIDTH),
    .C_S_AXI_CONTROL_DATA_WIDTH  (C_S_AXI_CONTROL_DATA_WIDTH),
    .C_S_AXI_CONTROL_WSTRB_WIDTH (C_S_AXI_CONTROL_WSTRB_WIDTH),
    .C_S_AXI_DATA_WIDTH          (C_S_AXI_DATA_WIDTH),
    .C_S_AXI_WSTRB_WIDTH         (C_S_AXI_WSTRB_WIDTH)
) _ (
    .__tapa_fsm_unit_ap_clk                    (__tapa_fsm_unit_ap_clk),
    .__tapa_fsm_unit_ap_rst_n                  (__tapa_fsm_unit_ap_rst_n),
    .__tapa_fsm_unit_write_Y_0___M__q0         (__tapa_fsm_unit_write_Y_0___M__q0),
    .__tapa_fsm_unit_write_Y_0___P_N__q0       (__tapa_fsm_unit_write_Y_0___P_N__q0),
    .__tapa_fsm_unit_write_Y_0___vec_Y_out__q0 (__tapa_fsm_unit_write_Y_0___vec_Y_out__q0),
    .__tapa_fsm_unit_write_Y_0__ap_done        (__tapa_fsm_unit_write_Y_0__ap_done),
    .__tapa_fsm_unit_write_Y_0__ap_idle        (__tapa_fsm_unit_write_Y_0__ap_idle),
    .__tapa_fsm_unit_write_Y_0__ap_ready       (__tapa_fsm_unit_write_Y_0__ap_ready),
    .__tapa_fsm_unit_write_Y_0__ap_start       (__tapa_fsm_unit_write_Y_0__ap_start),
    .ap_clk                                    (ap_clk),
    .ap_rst_n                                  (__rs_pipelined_ap_rst_n),
    .write_Y_0_M                               (write_Y_0_M),
    .write_Y_0_P_N                             (write_Y_0_P_N),
    .write_Y_0_Y_out_read_addr_offset          (write_Y_0_Y_out_read_addr_offset),
    .write_Y_0_Y_out_write_addr_offset         (write_Y_0_Y_out_write_addr_offset),
    .write_Y_0_ap_clk                          (write_Y_0_ap_clk),
    .write_Y_0_ap_done                         (write_Y_0_ap_done),
    .write_Y_0_ap_idle                         (write_Y_0_ap_idle),
    .write_Y_0_ap_ready                        (write_Y_0_ap_ready),
    .write_Y_0_ap_rst_n                        (write_Y_0_ap_rst_n),
    .write_Y_0_ap_start                        (write_Y_0_ap_start)
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_ff_pipeline_2 #(
    .BODY_LEVEL      (2),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) ff_0 /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  ({ ap_rst_n }),
    .if_dout ({ __rs_pipelined_ap_rst_n })
);

endmodule  // __rs_pipelined___rs_Serpens_aux_split_aux_296___rs_Serpens_aux_split_aux_296_inst