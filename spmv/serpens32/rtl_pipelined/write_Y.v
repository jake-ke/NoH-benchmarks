`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
(* CORE_GENERATION_INFO="write_Y_write_Y,hls_ip_2023_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvh1582-vsva3697-2MP-e-S,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.178000,HLS_SYN_LAT=4000057,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=533,HLS_SYN_LUT=1205,HLS_VERSION=2023_2_2}" *)
module write_Y (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P_N,
        M,
        fifo_Y_s_dout,
        fifo_Y_s_empty_n,
        fifo_Y_s_read,
        fifo_Y_peek_dout,
        fifo_Y_peek_empty_n,
        fifo_Y_peek_read,
        Y_out_read_addr_s_din,
        Y_out_read_addr_s_full_n,
        Y_out_read_addr_s_write,
        Y_out_read_addr_offset,
        Y_out_read_data_s_dout,
        Y_out_read_data_s_empty_n,
        Y_out_read_data_s_read,
        Y_out_read_data_peek_dout,
        Y_out_read_data_peek_empty_n,
        Y_out_read_data_peek_read,
        Y_out_write_addr_s_din,
        Y_out_write_addr_s_full_n,
        Y_out_write_addr_s_write,
        Y_out_write_addr_offset,
        Y_out_write_data_din,
        Y_out_write_data_full_n,
        Y_out_write_data_write,
        Y_out_write_resp_s_dout,
        Y_out_write_resp_s_empty_n,
        Y_out_write_resp_s_read,
        Y_out_write_resp_peek_dout,
        Y_out_write_resp_peek_empty_n,
        Y_out_write_resp_peek_read
);
parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] P_N;
input  [31:0] M;
input  [512:0] fifo_Y_s_dout;
input   fifo_Y_s_empty_n;
output   fifo_Y_s_read;
input  [512:0] fifo_Y_peek_dout;
input   fifo_Y_peek_empty_n;
output   fifo_Y_peek_read;
output  [63:0] Y_out_read_addr_s_din;
input   Y_out_read_addr_s_full_n;
output   Y_out_read_addr_s_write;
input  [63:0] Y_out_read_addr_offset;
input  [256:0] Y_out_read_data_s_dout;
input   Y_out_read_data_s_empty_n;
output   Y_out_read_data_s_read;
input  [256:0] Y_out_read_data_peek_dout;
input   Y_out_read_data_peek_empty_n;
output   Y_out_read_data_peek_read;
output  [63:0] Y_out_write_addr_s_din;
input   Y_out_write_addr_s_full_n;
output   Y_out_write_addr_s_write;
input  [63:0] Y_out_write_addr_offset;
output  [256:0] Y_out_write_data_din;
input   Y_out_write_data_full_n;
output   Y_out_write_data_write;
input  [8:0] Y_out_write_resp_s_dout;
input   Y_out_write_resp_s_empty_n;
output   Y_out_write_resp_s_read;
input  [8:0] Y_out_write_resp_peek_dout;
input   Y_out_write_resp_peek_empty_n;
output   Y_out_write_resp_peek_read;
reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_Y_s_read;
reg Y_out_write_addr_s_write;
reg Y_out_write_data_write;
reg Y_out_write_resp_s_read;
 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] rp_time_fu_269_p3;
reg   [31:0] rp_time_reg_411;
wire   [28:0] mul_fu_293_p3;
reg   [28:0] mul_reg_416;
wire    grp_write_Y_Pipeline_wr_C_fu_234_ap_start;
wire    grp_write_Y_Pipeline_wr_C_fu_234_ap_done;
wire    grp_write_Y_Pipeline_wr_C_fu_234_ap_idle;
wire    grp_write_Y_Pipeline_wr_C_fu_234_ap_ready;
wire    grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_resp_s_read;
wire   [63:0] grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_addr_s_din;
wire    grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_addr_s_write;
wire   [256:0] grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_data_din;
wire    grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_data_write;
wire    grp_write_Y_Pipeline_wr_C_fu_234_fifo_Y_s_read;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out1_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out1_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out2_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out2_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out3_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out3_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out4_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out4_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out5_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out5_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out6_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out6_o_ap_vld;
wire   [31:0] grp_write_Y_Pipeline_wr_C_fu_234_p_out7_o;
wire    grp_write_Y_Pipeline_wr_C_fu_234_p_out7_o_ap_vld;
wire   [0:0] grp_write_Y_Pipeline_wr_C_fu_234_wrote_half_1_out;
wire    grp_write_Y_Pipeline_wr_C_fu_234_wrote_half_1_out_ap_vld;
reg   [0:0] wrote_half_reg_222;
wire    ap_CS_fsm_state5;
reg    grp_write_Y_Pipeline_wr_C_fu_234_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [31:0] empty_25_fu_124;
reg   [31:0] empty_24_fu_120;
reg   [31:0] empty_23_fu_116;
reg   [31:0] empty_22_fu_112;
reg   [31:0] empty_21_fu_108;
reg   [31:0] empty_20_fu_104;
reg   [31:0] empty_19_fu_100;
reg   [31:0] empty_fu_96;
reg   [30:0] rp_fu_92;
wire   [30:0] add_ln246_fu_321_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln246_fu_331_p2;
wire   [0:0] icmp_ln240_fu_263_p2;
wire   [31:0] add_ln241_fu_277_p2;
wire   [27:0] tmp_4_fu_283_p4;
wire   [31:0] zext_ln246_fu_327_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_write_Y_Pipeline_wr_C_fu_234_ap_start_reg = 1'b0;
#0 rp_fu_92 = 31'd0;
end
write_Y_write_Y_Pipeline_wr_C grp_write_Y_Pipeline_wr_C_fu_234(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_write_Y_Pipeline_wr_C_fu_234_ap_start),
    .ap_done(grp_write_Y_Pipeline_wr_C_fu_234_ap_done),
    .ap_idle(grp_write_Y_Pipeline_wr_C_fu_234_ap_idle),
    .ap_ready(grp_write_Y_Pipeline_wr_C_fu_234_ap_ready),
    .wrote_half(wrote_half_reg_222),
    .mul_cast(mul_reg_416),
    .Y_out_write_resp_s_dout(Y_out_write_resp_s_dout),
    .Y_out_write_resp_s_empty_n(Y_out_write_resp_s_empty_n),
    .Y_out_write_resp_s_read(grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_resp_s_read),
    .Y_out_write_addr_s_din(grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_addr_s_din),
    .Y_out_write_addr_s_full_n(Y_out_write_addr_s_full_n),
    .Y_out_write_addr_s_write(grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_addr_s_write),
    .Y_out_write_data_din(grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_data_din),
    .Y_out_write_data_full_n(Y_out_write_data_full_n),
    .Y_out_write_data_write(grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_data_write),
    .fifo_Y_s_dout(fifo_Y_s_dout),
    .fifo_Y_s_empty_n(fifo_Y_s_empty_n),
    .fifo_Y_s_read(grp_write_Y_Pipeline_wr_C_fu_234_fifo_Y_s_read),
    .Y_out_write_addr_offset_load(Y_out_write_addr_offset),
    .p_out_i(empty_25_fu_124),
    .p_out_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out_o),
    .p_out_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out_o_ap_vld),
    .p_out1_i(empty_24_fu_120),
    .p_out1_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out1_o),
    .p_out1_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out1_o_ap_vld),
    .p_out2_i(empty_23_fu_116),
    .p_out2_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out2_o),
    .p_out2_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out2_o_ap_vld),
    .p_out3_i(empty_22_fu_112),
    .p_out3_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out3_o),
    .p_out3_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out3_o_ap_vld),
    .p_out4_i(empty_21_fu_108),
    .p_out4_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out4_o),
    .p_out4_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out4_o_ap_vld),
    .p_out5_i(empty_20_fu_104),
    .p_out5_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out5_o),
    .p_out5_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out5_o_ap_vld),
    .p_out6_i(empty_19_fu_100),
    .p_out6_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out6_o),
    .p_out6_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out6_o_ap_vld),
    .p_out7_i(empty_fu_96),
    .p_out7_o(grp_write_Y_Pipeline_wr_C_fu_234_p_out7_o),
    .p_out7_o_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_p_out7_o_ap_vld),
    .wrote_half_1_out(grp_write_Y_Pipeline_wr_C_fu_234_wrote_half_1_out),
    .wrote_half_1_out_ap_vld(grp_write_Y_Pipeline_wr_C_fu_234_wrote_half_1_out_ap_vld)
);
always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_write_Y_Pipeline_wr_C_fu_234_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_write_Y_Pipeline_wr_C_fu_234_ap_start_reg <= 1'b1;
        end else if ((grp_write_Y_Pipeline_wr_C_fu_234_ap_ready == 1'b1)) begin
            grp_write_Y_Pipeline_wr_C_fu_234_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        rp_fu_92 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_331_p2 == 1'd1))) begin
        rp_fu_92 <= add_ln246_fu_321_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wrote_half_reg_222 <= grp_write_Y_Pipeline_wr_C_fu_234_wrote_half_1_out;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        wrote_half_reg_222 <= 1'd0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_write_Y_Pipeline_wr_C_fu_234_p_out6_o_ap_vld == 1'b1))) begin
        empty_19_fu_100 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out6_o;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_write_Y_Pipeline_wr_C_fu_234_p_out5_o_ap_vld == 1'b1))) begin
        empty_20_fu_104 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out5_o;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_write_Y_Pipeline_wr_C_fu_234_p_out4_o_ap_vld == 1'b1))) begin
        empty_21_fu_108 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out4_o;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_write_Y_Pipeline_wr_C_fu_234_p_out3_o_ap_vld == 1'b1))) begin
        empty_22_fu_112 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out3_o;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_write_Y_Pipeline_wr_C_fu_234_p_out2_o_ap_vld == 1'b1))) begin
        empty_23_fu_116 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out2_o;
    end
end
always @ (posedge ap_clk) begin
    if (((grp_write_Y_Pipeline_wr_C_fu_234_p_out1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        empty_24_fu_120 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out1_o;
    end
end
always @ (posedge ap_clk) begin
    if (((grp_write_Y_Pipeline_wr_C_fu_234_p_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        empty_25_fu_124 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out_o;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_write_Y_Pipeline_wr_C_fu_234_p_out7_o_ap_vld == 1'b1))) begin
        empty_fu_96 <= grp_write_Y_Pipeline_wr_C_fu_234_p_out7_o;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mul_reg_416[28 : 1] <= mul_fu_293_p3[28 : 1];
        rp_time_reg_411 <= rp_time_fu_269_p3;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Y_out_write_addr_s_write = grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_addr_s_write;
    end else begin
        Y_out_write_addr_s_write = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Y_out_write_data_write = grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_data_write;
    end else begin
        Y_out_write_data_write = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Y_out_write_resp_s_read = grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_resp_s_read;
    end else begin
        Y_out_write_resp_s_read = 1'b0;
    end
end
always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
assign ap_ST_fsm_state2_blk = 1'b0;
assign ap_ST_fsm_state3_blk = 1'b0;
always @ (*) begin
    if ((grp_write_Y_Pipeline_wr_C_fu_234_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end
assign ap_ST_fsm_state5_blk = 1'b0;
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_331_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_331_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fifo_Y_s_read = grp_write_Y_Pipeline_wr_C_fu_234_fifo_Y_s_read;
    end else begin
        fifo_Y_s_read = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_331_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_write_Y_Pipeline_wr_C_fu_234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign Y_out_read_addr_s_din = 64'd0;
assign Y_out_read_addr_s_write = 1'b0;
assign Y_out_read_data_peek_read = 1'b0;
assign Y_out_read_data_s_read = 1'b0;
assign Y_out_write_addr_s_din = grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_addr_s_din;
assign Y_out_write_data_din = grp_write_Y_Pipeline_wr_C_fu_234_Y_out_write_data_din;
assign Y_out_write_resp_peek_read = 1'b0;
assign add_ln241_fu_277_p2 = (M + 32'd15);
assign add_ln246_fu_321_p2 = (rp_fu_92 + 31'd1);
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];
assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];
assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];
assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];
always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign fifo_Y_peek_read = 1'b0;
assign grp_write_Y_Pipeline_wr_C_fu_234_ap_start = grp_write_Y_Pipeline_wr_C_fu_234_ap_start_reg;
assign icmp_ln240_fu_263_p2 = ((P_N == 32'd0) ? 1'b1 : 1'b0);
assign icmp_ln246_fu_331_p2 = (($signed(zext_ln246_fu_327_p1) < $signed(rp_time_reg_411)) ? 1'b1 : 1'b0);
assign mul_fu_293_p3 = {{tmp_4_fu_283_p4}, {1'd0}};
assign rp_time_fu_269_p3 = ((icmp_ln240_fu_263_p2[0:0] == 1'b1) ? 32'd1 : P_N);
assign tmp_4_fu_283_p4 = {{add_ln241_fu_277_p2[31:4]}};
assign zext_ln246_fu_327_p1 = rp_fu_92;
always @ (posedge ap_clk) begin
    mul_reg_416[0] <= 1'b0;
end
endmodule