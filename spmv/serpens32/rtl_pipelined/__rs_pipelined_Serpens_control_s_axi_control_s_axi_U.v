// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pipelined_Serpens_control_s_axi_control_s_axi_U #(
    parameter C_S_AXI_ADDR_WIDTH          = 9,
    parameter C_S_AXI_DATA_WIDTH          = 32,
    parameter ADDR_AP_CTRL                = 9'h000,
    parameter ADDR_GIE                    = 9'h004,
    parameter ADDR_IER                    = 9'h008,
    parameter ADDR_ISR                    = 9'h00c,
    parameter ADDR_EDGE_LIST_PTR_DATA_0   = 9'h010,
    parameter ADDR_EDGE_LIST_PTR_DATA_1   = 9'h014,
    parameter ADDR_EDGE_LIST_PTR_CTRL     = 9'h018,
    parameter ADDR_EDGE_LIST_CH_0_DATA_0  = 9'h01c,
    parameter ADDR_EDGE_LIST_CH_0_DATA_1  = 9'h020,
    parameter ADDR_EDGE_LIST_CH_0_CTRL    = 9'h024,
    parameter ADDR_EDGE_LIST_CH_1_DATA_0  = 9'h028,
    parameter ADDR_EDGE_LIST_CH_1_DATA_1  = 9'h02c,
    parameter ADDR_EDGE_LIST_CH_1_CTRL    = 9'h030,
    parameter ADDR_EDGE_LIST_CH_2_DATA_0  = 9'h034,
    parameter ADDR_EDGE_LIST_CH_2_DATA_1  = 9'h038,
    parameter ADDR_EDGE_LIST_CH_2_CTRL    = 9'h03c,
    parameter ADDR_EDGE_LIST_CH_3_DATA_0  = 9'h040,
    parameter ADDR_EDGE_LIST_CH_3_DATA_1  = 9'h044,
    parameter ADDR_EDGE_LIST_CH_3_CTRL    = 9'h048,
    parameter ADDR_EDGE_LIST_CH_4_DATA_0  = 9'h04c,
    parameter ADDR_EDGE_LIST_CH_4_DATA_1  = 9'h050,
    parameter ADDR_EDGE_LIST_CH_4_CTRL    = 9'h054,
    parameter ADDR_EDGE_LIST_CH_5_DATA_0  = 9'h058,
    parameter ADDR_EDGE_LIST_CH_5_DATA_1  = 9'h05c,
    parameter ADDR_EDGE_LIST_CH_5_CTRL    = 9'h060,
    parameter ADDR_EDGE_LIST_CH_6_DATA_0  = 9'h064,
    parameter ADDR_EDGE_LIST_CH_6_DATA_1  = 9'h068,
    parameter ADDR_EDGE_LIST_CH_6_CTRL    = 9'h06c,
    parameter ADDR_EDGE_LIST_CH_7_DATA_0  = 9'h070,
    parameter ADDR_EDGE_LIST_CH_7_DATA_1  = 9'h074,
    parameter ADDR_EDGE_LIST_CH_7_CTRL    = 9'h078,
    parameter ADDR_EDGE_LIST_CH_8_DATA_0  = 9'h07c,
    parameter ADDR_EDGE_LIST_CH_8_DATA_1  = 9'h080,
    parameter ADDR_EDGE_LIST_CH_8_CTRL    = 9'h084,
    parameter ADDR_EDGE_LIST_CH_9_DATA_0  = 9'h088,
    parameter ADDR_EDGE_LIST_CH_9_DATA_1  = 9'h08c,
    parameter ADDR_EDGE_LIST_CH_9_CTRL    = 9'h090,
    parameter ADDR_EDGE_LIST_CH_10_DATA_0 = 9'h094,
    parameter ADDR_EDGE_LIST_CH_10_DATA_1 = 9'h098,
    parameter ADDR_EDGE_LIST_CH_10_CTRL   = 9'h09c,
    parameter ADDR_EDGE_LIST_CH_11_DATA_0 = 9'h0a0,
    parameter ADDR_EDGE_LIST_CH_11_DATA_1 = 9'h0a4,
    parameter ADDR_EDGE_LIST_CH_11_CTRL   = 9'h0a8,
    parameter ADDR_EDGE_LIST_CH_12_DATA_0 = 9'h0ac,
    parameter ADDR_EDGE_LIST_CH_12_DATA_1 = 9'h0b0,
    parameter ADDR_EDGE_LIST_CH_12_CTRL   = 9'h0b4,
    parameter ADDR_EDGE_LIST_CH_13_DATA_0 = 9'h0b8,
    parameter ADDR_EDGE_LIST_CH_13_DATA_1 = 9'h0bc,
    parameter ADDR_EDGE_LIST_CH_13_CTRL   = 9'h0c0,
    parameter ADDR_EDGE_LIST_CH_14_DATA_0 = 9'h0c4,
    parameter ADDR_EDGE_LIST_CH_14_DATA_1 = 9'h0c8,
    parameter ADDR_EDGE_LIST_CH_14_CTRL   = 9'h0cc,
    parameter ADDR_EDGE_LIST_CH_15_DATA_0 = 9'h0d0,
    parameter ADDR_EDGE_LIST_CH_15_DATA_1 = 9'h0d4,
    parameter ADDR_EDGE_LIST_CH_15_CTRL   = 9'h0d8,
    parameter ADDR_EDGE_LIST_CH_16_DATA_0 = 9'h0dc,
    parameter ADDR_EDGE_LIST_CH_16_DATA_1 = 9'h0e0,
    parameter ADDR_EDGE_LIST_CH_16_CTRL   = 9'h0e4,
    parameter ADDR_EDGE_LIST_CH_17_DATA_0 = 9'h0e8,
    parameter ADDR_EDGE_LIST_CH_17_DATA_1 = 9'h0ec,
    parameter ADDR_EDGE_LIST_CH_17_CTRL   = 9'h0f0,
    parameter ADDR_EDGE_LIST_CH_18_DATA_0 = 9'h0f4,
    parameter ADDR_EDGE_LIST_CH_18_DATA_1 = 9'h0f8,
    parameter ADDR_EDGE_LIST_CH_18_CTRL   = 9'h0fc,
    parameter ADDR_EDGE_LIST_CH_19_DATA_0 = 9'h100,
    parameter ADDR_EDGE_LIST_CH_19_DATA_1 = 9'h104,
    parameter ADDR_EDGE_LIST_CH_19_CTRL   = 9'h108,
    parameter ADDR_EDGE_LIST_CH_20_DATA_0 = 9'h10c,
    parameter ADDR_EDGE_LIST_CH_20_DATA_1 = 9'h110,
    parameter ADDR_EDGE_LIST_CH_20_CTRL   = 9'h114,
    parameter ADDR_EDGE_LIST_CH_21_DATA_0 = 9'h118,
    parameter ADDR_EDGE_LIST_CH_21_DATA_1 = 9'h11c,
    parameter ADDR_EDGE_LIST_CH_21_CTRL   = 9'h120,
    parameter ADDR_EDGE_LIST_CH_22_DATA_0 = 9'h124,
    parameter ADDR_EDGE_LIST_CH_22_DATA_1 = 9'h128,
    parameter ADDR_EDGE_LIST_CH_22_CTRL   = 9'h12c,
    parameter ADDR_EDGE_LIST_CH_23_DATA_0 = 9'h130,
    parameter ADDR_EDGE_LIST_CH_23_DATA_1 = 9'h134,
    parameter ADDR_EDGE_LIST_CH_23_CTRL   = 9'h138,
    parameter ADDR_EDGE_LIST_CH_24_DATA_0 = 9'h13c,
    parameter ADDR_EDGE_LIST_CH_24_DATA_1 = 9'h140,
    parameter ADDR_EDGE_LIST_CH_24_CTRL   = 9'h144,
    parameter ADDR_EDGE_LIST_CH_25_DATA_0 = 9'h148,
    parameter ADDR_EDGE_LIST_CH_25_DATA_1 = 9'h14c,
    parameter ADDR_EDGE_LIST_CH_25_CTRL   = 9'h150,
    parameter ADDR_EDGE_LIST_CH_26_DATA_0 = 9'h154,
    parameter ADDR_EDGE_LIST_CH_26_DATA_1 = 9'h158,
    parameter ADDR_EDGE_LIST_CH_26_CTRL   = 9'h15c,
    parameter ADDR_EDGE_LIST_CH_27_DATA_0 = 9'h160,
    parameter ADDR_EDGE_LIST_CH_27_DATA_1 = 9'h164,
    parameter ADDR_EDGE_LIST_CH_27_CTRL   = 9'h168,
    parameter ADDR_EDGE_LIST_CH_28_DATA_0 = 9'h16c,
    parameter ADDR_EDGE_LIST_CH_28_DATA_1 = 9'h170,
    parameter ADDR_EDGE_LIST_CH_28_CTRL   = 9'h174,
    parameter ADDR_EDGE_LIST_CH_29_DATA_0 = 9'h178,
    parameter ADDR_EDGE_LIST_CH_29_DATA_1 = 9'h17c,
    parameter ADDR_EDGE_LIST_CH_29_CTRL   = 9'h180,
    parameter ADDR_EDGE_LIST_CH_30_DATA_0 = 9'h184,
    parameter ADDR_EDGE_LIST_CH_30_DATA_1 = 9'h188,
    parameter ADDR_EDGE_LIST_CH_30_CTRL   = 9'h18c,
    parameter ADDR_EDGE_LIST_CH_31_DATA_0 = 9'h190,
    parameter ADDR_EDGE_LIST_CH_31_DATA_1 = 9'h194,
    parameter ADDR_EDGE_LIST_CH_31_CTRL   = 9'h198,
    parameter ADDR_VEC_X_DATA_0           = 9'h19c,
    parameter ADDR_VEC_X_DATA_1           = 9'h1a0,
    parameter ADDR_VEC_X_CTRL             = 9'h1a4,
    parameter ADDR_VEC_Y_DATA_0           = 9'h1a8,
    parameter ADDR_VEC_Y_DATA_1           = 9'h1ac,
    parameter ADDR_VEC_Y_CTRL             = 9'h1b0,
    parameter ADDR_VEC_Y_OUT_DATA_0       = 9'h1b4,
    parameter ADDR_VEC_Y_OUT_DATA_1       = 9'h1b8,
    parameter ADDR_VEC_Y_OUT_CTRL         = 9'h1bc,
    parameter ADDR_NUM_ITE_DATA_0         = 9'h1c0,
    parameter ADDR_NUM_ITE_CTRL           = 9'h1c4,
    parameter ADDR_NUM_A_LEN_DATA_0       = 9'h1c8,
    parameter ADDR_NUM_A_LEN_CTRL         = 9'h1cc,
    parameter ADDR_M_DATA_0               = 9'h1d0,
    parameter ADDR_M_CTRL                 = 9'h1d4,
    parameter ADDR_K_DATA_0               = 9'h1d8,
    parameter ADDR_K_CTRL                 = 9'h1dc,
    parameter ADDR_P_N_DATA_0             = 9'h1e0,
    parameter ADDR_P_N_CTRL               = 9'h1e4,
    parameter ADDR_ALPHA_U_DATA_0         = 9'h1e8,
    parameter ADDR_ALPHA_U_CTRL           = 9'h1ec,
    parameter ADDR_BETA_U_DATA_0          = 9'h1f0,
    parameter ADDR_BETA_U_CTRL            = 9'h1f4,
    parameter WRIDLE                      = 2'd0,
    parameter WRDATA                      = 2'd1,
    parameter WRRESP                      = 2'd2,
    parameter WRRESET                     = 2'd3,
    parameter RDIDLE                      = 2'd0,
    parameter RDDATA                      = 2'd1,
    parameter RDRESET                     = 2'd2,
    parameter ADDR_BITS                   = 9
) (
    input wire                                   ACLK,
    input wire                                   ACLK_EN,
    input wire  [    (C_S_AXI_ADDR_WIDTH - 1):0] ARADDR,
    input wire                                   ARESET,
    output wire                                  ARREADY,
    input wire                                   ARVALID,
    input wire  [    (C_S_AXI_ADDR_WIDTH - 1):0] AWADDR,
    output wire                                  AWREADY,
    input wire                                   AWVALID,
    input wire                                   BREADY,
    output wire [                           1:0] BRESP,
    output wire                                  BVALID,
    output wire [                          31:0] K,
    output wire [                          31:0] M,
    output wire [                          31:0] NUM_A_LEN,
    output wire [                          31:0] NUM_ITE,
    output wire [                          31:0] P_N,
    output wire [    (C_S_AXI_DATA_WIDTH - 1):0] RDATA,
    input wire                                   RREADY,
    output wire [                           1:0] RRESP,
    output wire                                  RVALID,
    input wire  [    (C_S_AXI_DATA_WIDTH - 1):0] WDATA,
    output wire                                  WREADY,
    input wire  [(C_S_AXI_DATA_WIDTH / 8 - 1):0] WSTRB,
    input wire                                   WVALID,
    output wire [                          31:0] alpha_u,
    input wire                                   ap_done,
    input wire                                   ap_idle,
    input wire                                   ap_ready,
    output wire                                  ap_start,
    output wire [                          31:0] beta_u,
    output wire [                          63:0] edge_list_ch_0,
    output wire [                          63:0] edge_list_ch_1,
    output wire [                          63:0] edge_list_ch_10,
    output wire [                          63:0] edge_list_ch_11,
    output wire [                          63:0] edge_list_ch_12,
    output wire [                          63:0] edge_list_ch_13,
    output wire [                          63:0] edge_list_ch_14,
    output wire [                          63:0] edge_list_ch_15,
    output wire [                          63:0] edge_list_ch_16,
    output wire [                          63:0] edge_list_ch_17,
    output wire [                          63:0] edge_list_ch_18,
    output wire [                          63:0] edge_list_ch_19,
    output wire [                          63:0] edge_list_ch_2,
    output wire [                          63:0] edge_list_ch_20,
    output wire [                          63:0] edge_list_ch_21,
    output wire [                          63:0] edge_list_ch_22,
    output wire [                          63:0] edge_list_ch_23,
    output wire [                          63:0] edge_list_ch_24,
    output wire [                          63:0] edge_list_ch_25,
    output wire [                          63:0] edge_list_ch_26,
    output wire [                          63:0] edge_list_ch_27,
    output wire [                          63:0] edge_list_ch_28,
    output wire [                          63:0] edge_list_ch_29,
    output wire [                          63:0] edge_list_ch_3,
    output wire [                          63:0] edge_list_ch_30,
    output wire [                          63:0] edge_list_ch_31,
    output wire [                          63:0] edge_list_ch_4,
    output wire [                          63:0] edge_list_ch_5,
    output wire [                          63:0] edge_list_ch_6,
    output wire [                          63:0] edge_list_ch_7,
    output wire [                          63:0] edge_list_ch_8,
    output wire [                          63:0] edge_list_ch_9,
    output wire [                          63:0] edge_list_ptr,
    output wire                                  interrupt,
    output wire [                          63:0] vec_X,
    output wire [                          63:0] vec_Y,
    output wire [                          63:0] vec_Y_out
);

wire [    (C_S_AXI_ADDR_WIDTH - 1):0] __rs_pipelined_ARADDR;
wire                                  __rs_pipelined_ARESET;
wire                                  __rs_pipelined_ARREADY;
wire                                  __rs_pipelined_ARVALID;
wire [    (C_S_AXI_ADDR_WIDTH - 1):0] __rs_pipelined_AWADDR;
wire                                  __rs_pipelined_AWREADY;
wire                                  __rs_pipelined_AWVALID;
wire [    (C_S_AXI_DATA_WIDTH - 1):0] __rs_pipelined_WDATA;
wire                                  __rs_pipelined_WREADY;
wire [(C_S_AXI_DATA_WIDTH / 8 - 1):0] __rs_pipelined_WSTRB;
wire                                  __rs_pipelined_WVALID;



Serpens_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH (C_S_AXI_ADDR_WIDTH),
    .C_S_AXI_DATA_WIDTH (C_S_AXI_DATA_WIDTH)
) _ /**   control_s_axi_U   **/ (
    .ACLK            (ACLK),
    .ACLK_EN         ( 1'b1),
    .ARADDR          (__rs_pipelined_ARADDR),
    .ARESET          (__rs_pipelined_ARESET),
    .ARREADY         (__rs_pipelined_ARREADY),
    .ARVALID         (__rs_pipelined_ARVALID),
    .AWADDR          (__rs_pipelined_AWADDR),
    .AWREADY         (__rs_pipelined_AWREADY),
    .AWVALID         (__rs_pipelined_AWVALID),
    .BREADY          (BREADY),
    .BRESP           (BRESP),
    .BVALID          (BVALID),
    .K               (K),
    .M               (M),
    .NUM_A_LEN       (NUM_A_LEN),
    .NUM_ITE         (NUM_ITE),
    .P_N             (P_N),
    .RDATA           (RDATA),
    .RREADY          (RREADY),
    .RRESP           (RRESP),
    .RVALID          (RVALID),
    .WDATA           (__rs_pipelined_WDATA),
    .WREADY          (__rs_pipelined_WREADY),
    .WSTRB           (__rs_pipelined_WSTRB),
    .WVALID          (__rs_pipelined_WVALID),
    .alpha_u         (alpha_u),
    .ap_done         (ap_done),
    .ap_idle         (ap_idle),
    .ap_ready        (ap_ready),
    .ap_start        (ap_start),
    .beta_u          (beta_u),
    .edge_list_ch_0  (edge_list_ch_0),
    .edge_list_ch_1  (edge_list_ch_1),
    .edge_list_ch_10 (edge_list_ch_10),
    .edge_list_ch_11 (edge_list_ch_11),
    .edge_list_ch_12 (edge_list_ch_12),
    .edge_list_ch_13 (edge_list_ch_13),
    .edge_list_ch_14 (edge_list_ch_14),
    .edge_list_ch_15 (edge_list_ch_15),
    .edge_list_ch_16 (edge_list_ch_16),
    .edge_list_ch_17 (edge_list_ch_17),
    .edge_list_ch_18 (edge_list_ch_18),
    .edge_list_ch_19 (edge_list_ch_19),
    .edge_list_ch_2  (edge_list_ch_2),
    .edge_list_ch_20 (edge_list_ch_20),
    .edge_list_ch_21 (edge_list_ch_21),
    .edge_list_ch_22 (edge_list_ch_22),
    .edge_list_ch_23 (edge_list_ch_23),
    .edge_list_ch_24 (edge_list_ch_24),
    .edge_list_ch_25 (edge_list_ch_25),
    .edge_list_ch_26 (edge_list_ch_26),
    .edge_list_ch_27 (edge_list_ch_27),
    .edge_list_ch_28 (edge_list_ch_28),
    .edge_list_ch_29 (edge_list_ch_29),
    .edge_list_ch_3  (edge_list_ch_3),
    .edge_list_ch_30 (edge_list_ch_30),
    .edge_list_ch_31 (edge_list_ch_31),
    .edge_list_ch_4  (edge_list_ch_4),
    .edge_list_ch_5  (edge_list_ch_5),
    .edge_list_ch_6  (edge_list_ch_6),
    .edge_list_ch_7  (edge_list_ch_7),
    .edge_list_ch_8  (edge_list_ch_8),
    .edge_list_ch_9  (edge_list_ch_9),
    .edge_list_ptr   (edge_list_ptr),
    .interrupt       (interrupt),
    .vec_X           (vec_X),
    .vec_Y           (vec_Y),
    .vec_Y_out       (vec_Y_out)
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_ff_pipeline_2 #(
    .BODY_LEVEL      (2),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) ff_1 /**   Generated by RapidStream   **/ (
    .clk     (ACLK),
    .if_din  ({ ARESET }),
    .if_dout ({ __rs_pipelined_ARESET })
);

(* RS_ROUTE="SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X1Y0_TO_SLOT_X1Y0,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_hs_pipeline_4 #(
    .BODY_LEVEL                      (4),
    .DATA_WIDTH                      (( ( ( ( C_S_AXI_DATA_WIDTH - 1 ) - ( 0 ) + 1 ) ) + ( ( ( C_S_AXI_DATA_WIDTH / 8 - 1 ) - ( 0 ) + 1 ) ) + 0 )),
    .DEPTH                           (8),
    .EXTRA_PIPELINE_BEFORE_TAIL      (0),
    .PIPELINE_READY_IN_HEAD          (1),
    .PIPELINE_VALID_AND_DATA_IN_HEAD (1),
    .__BODY_0_REGION                 ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_1_REGION                 ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_2_REGION                 ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_3_REGION                 ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION                   ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__TAIL_REGION                   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) hs_0 /**   Generated by RapidStream   **/ (
    .clk        (ACLK),
    .if_din     ({ WDATA , WSTRB }),
    .if_dout    ({ __rs_pipelined_WDATA , __rs_pipelined_WSTRB }),
    .if_empty_n (__rs_pipelined_WVALID),
    .if_full_n  (WREADY),
    .if_read    (__rs_pipelined_WREADY),
    .if_write   (WVALID),
    .reset      (1'b0)
);

(* RS_ROUTE="SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_hs_pipeline_4 #(
    .BODY_LEVEL                      (4),
    .DATA_WIDTH                      (( ( ( ( C_S_AXI_ADDR_WIDTH - 1 ) - ( 0 ) + 1 ) ) + 0 )),
    .DEPTH                           (8),
    .EXTRA_PIPELINE_BEFORE_TAIL      (0),
    .PIPELINE_READY_IN_HEAD          (1),
    .PIPELINE_VALID_AND_DATA_IN_HEAD (1),
    .__BODY_0_REGION                 ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_1_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_2_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_3_REGION                 ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION                   ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__TAIL_REGION                   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) hs_2 /**   Generated by RapidStream   **/ (
    .clk        (ACLK),
    .if_din     ({ AWADDR }),
    .if_dout    ({ __rs_pipelined_AWADDR }),
    .if_empty_n (__rs_pipelined_AWVALID),
    .if_full_n  (AWREADY),
    .if_read    (__rs_pipelined_AWREADY),
    .if_write   (AWVALID),
    .reset      (1'b0)
);

(* RS_ROUTE="SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_hs_pipeline_4 #(
    .BODY_LEVEL                      (4),
    .DATA_WIDTH                      (( ( ( ( C_S_AXI_ADDR_WIDTH - 1 ) - ( 0 ) + 1 ) ) + 0 )),
    .DEPTH                           (8),
    .EXTRA_PIPELINE_BEFORE_TAIL      (0),
    .PIPELINE_READY_IN_HEAD          (1),
    .PIPELINE_VALID_AND_DATA_IN_HEAD (1),
    .__BODY_0_REGION                 ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_1_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_2_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_3_REGION                 ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION                   ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__TAIL_REGION                   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) hs_3 /**   Generated by RapidStream   **/ (
    .clk        (ACLK),
    .if_din     ({ ARADDR }),
    .if_dout    ({ __rs_pipelined_ARADDR }),
    .if_empty_n (__rs_pipelined_ARVALID),
    .if_full_n  (ARREADY),
    .if_read    (__rs_pipelined_ARREADY),
    .if_write   (ARVALID),
    .reset      (1'b0)
);

endmodule  // __rs_pipelined_Serpens_control_s_axi_control_s_axi_U