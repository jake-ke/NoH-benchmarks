// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pipelined_async_mmap_edge_list_ch_47__m_axi #(
    parameter BufferSize         = 32,
    parameter BufferSizeLog      = 5,
    parameter AddrWidth          = 64,
    parameter AxiSideAddrWidth   = 64,
    parameter DataWidth          = 512,
    parameter DataWidthBytesLog  = 6,
    parameter WaitTimeWidth      = 4,
    parameter BurstLenWidth      = 8,
    parameter EnableReadChannel  = 1,
    parameter EnableWriteChannel = 1,
    parameter MaxWaitTime        = 3,
    parameter MaxBurstLen        = 15
) (
    input wire                             clk,
    output wire [(AxiSideAddrWidth - 1):0] m_axi_ARADDR,
    output wire [                     1:0] m_axi_ARBURST,
    output wire [                     3:0] m_axi_ARCACHE,
    output wire [                     0:0] m_axi_ARID,
    output wire [                     7:0] m_axi_ARLEN,
    output wire [                     0:0] m_axi_ARLOCK,
    output wire [                     2:0] m_axi_ARPROT,
    output wire [                     3:0] m_axi_ARQOS,
    input wire                             m_axi_ARREADY,
    output wire [                     2:0] m_axi_ARSIZE,
    output wire                            m_axi_ARVALID,
    output wire [(AxiSideAddrWidth - 1):0] m_axi_AWADDR,
    output wire [                     1:0] m_axi_AWBURST,
    output wire [                     3:0] m_axi_AWCACHE,
    output wire [                     0:0] m_axi_AWID,
    output wire [                     7:0] m_axi_AWLEN,
    output wire [                     0:0] m_axi_AWLOCK,
    output wire [                     2:0] m_axi_AWPROT,
    output wire [                     3:0] m_axi_AWQOS,
    input wire                             m_axi_AWREADY,
    output wire [                     2:0] m_axi_AWSIZE,
    output wire                            m_axi_AWVALID,
    input wire  [                     0:0] m_axi_BID,
    output wire                            m_axi_BREADY,
    input wire  [                     1:0] m_axi_BRESP,
    input wire                             m_axi_BVALID,
    input wire  [       (DataWidth - 1):0] m_axi_RDATA,
    input wire  [                     0:0] m_axi_RID,
    input wire                             m_axi_RLAST,
    output wire                            m_axi_RREADY,
    input wire  [                     1:0] m_axi_RRESP,
    input wire                             m_axi_RVALID,
    output wire [       (DataWidth - 1):0] m_axi_WDATA,
    output wire                            m_axi_WLAST,
    input wire                             m_axi_WREADY,
    output wire [   (DataWidth / 8 - 1):0] m_axi_WSTRB,
    output wire                            m_axi_WVALID,
    input wire  [       (AddrWidth - 1):0] read_addr_din,
    output wire                            read_addr_full_n,
    input wire                             read_addr_write,
    output wire [       (DataWidth - 1):0] read_data_dout,
    output wire                            read_data_empty_n,
    input wire                             read_data_read,
    input wire                             rst,
    input wire  [       (AddrWidth - 1):0] write_addr_din,
    output wire                            write_addr_full_n,
    input wire                             write_addr_write,
    input wire  [       (DataWidth - 1):0] write_data_din,
    output wire                            write_data_full_n,
    input wire                             write_data_write,
    output wire [                     7:0] write_resp_dout,
    output wire                            write_resp_empty_n,
    input wire                             write_resp_read
);

wire                     __rs_pipelined_rst;
wire [(AddrWidth - 1):0] __rs_pipelined_write_addr_din;
wire                     __rs_pipelined_write_addr_full_n;
wire                     __rs_pipelined_write_addr_write;
wire [(DataWidth - 1):0] __rs_pipelined_write_data_din;
wire                     __rs_pipelined_write_data_full_n;
wire                     __rs_pipelined_write_data_write;



async_mmap #(
    .AddrWidth         (AddrWidth),
    .BurstLenWidth     (BurstLenWidth),
    .DataWidth         (DataWidth),
    .DataWidthBytesLog (DataWidthBytesLog),
    .MaxBurstLen       (MaxBurstLen),
    .MaxWaitTime       (MaxWaitTime),
    .WaitTimeWidth     (WaitTimeWidth)
) _ /**   edge_list_ch_47__m_axi   **/ (
    .clk                (clk),
    .m_axi_ARADDR       (m_axi_ARADDR),
    .m_axi_ARBURST      (m_axi_ARBURST),
    .m_axi_ARCACHE      (m_axi_ARCACHE),
    .m_axi_ARID         (m_axi_ARID),
    .m_axi_ARLEN        (m_axi_ARLEN),
    .m_axi_ARLOCK       (m_axi_ARLOCK),
    .m_axi_ARPROT       (m_axi_ARPROT),
    .m_axi_ARQOS        (m_axi_ARQOS),
    .m_axi_ARREADY      (m_axi_ARREADY),
    .m_axi_ARSIZE       (m_axi_ARSIZE),
    .m_axi_ARVALID      (m_axi_ARVALID),
    .m_axi_AWADDR       (m_axi_AWADDR),
    .m_axi_AWBURST      (m_axi_AWBURST),
    .m_axi_AWCACHE      (m_axi_AWCACHE),
    .m_axi_AWID         (m_axi_AWID),
    .m_axi_AWLEN        (m_axi_AWLEN),
    .m_axi_AWLOCK       (m_axi_AWLOCK),
    .m_axi_AWPROT       (m_axi_AWPROT),
    .m_axi_AWQOS        (m_axi_AWQOS),
    .m_axi_AWREADY      (m_axi_AWREADY),
    .m_axi_AWSIZE       (m_axi_AWSIZE),
    .m_axi_AWVALID      (m_axi_AWVALID),
    .m_axi_BID          (m_axi_BID),
    .m_axi_BREADY       (m_axi_BREADY),
    .m_axi_BRESP        (m_axi_BRESP),
    .m_axi_BVALID       (m_axi_BVALID),
    .m_axi_RDATA        (m_axi_RDATA),
    .m_axi_RID          (m_axi_RID),
    .m_axi_RLAST        (m_axi_RLAST),
    .m_axi_RREADY       (m_axi_RREADY),
    .m_axi_RRESP        (m_axi_RRESP),
    .m_axi_RVALID       (m_axi_RVALID),
    .m_axi_WDATA        (m_axi_WDATA),
    .m_axi_WLAST        (m_axi_WLAST),
    .m_axi_WREADY       (m_axi_WREADY),
    .m_axi_WSTRB        (m_axi_WSTRB),
    .m_axi_WVALID       (m_axi_WVALID),
    .read_addr_din      (read_addr_din),
    .read_addr_full_n   (read_addr_full_n),
    .read_addr_write    (read_addr_write),
    .read_data_dout     (read_data_dout),
    .read_data_empty_n  (read_data_empty_n),
    .read_data_read     (read_data_read),
    .rst                (__rs_pipelined_rst),
    .write_addr_din     (__rs_pipelined_write_addr_din),
    .write_addr_full_n  (__rs_pipelined_write_addr_full_n),
    .write_addr_write   (__rs_pipelined_write_addr_write),
    .write_data_din     (__rs_pipelined_write_data_din),
    .write_data_full_n  (__rs_pipelined_write_data_full_n),
    .write_data_write   (__rs_pipelined_write_data_write),
    .write_resp_dout    (write_resp_dout),
    .write_resp_empty_n (write_resp_empty_n),
    .write_resp_read    (write_resp_read)
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_ff_pipeline_2 #(
    .BODY_LEVEL      (2),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) ff_1 /**   Generated by RapidStream   **/ (
    .clk     (clk),
    .if_din  ({ rst }),
    .if_dout ({ __rs_pipelined_rst })
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_hs_pipeline_2 #(
    .BODY_LEVEL                      (2),
    .DATA_WIDTH                      (( ( ( ( AddrWidth - 1 ) - ( 0 ) + 1 ) ) + 0 )),
    .DEPTH                           (8),
    .EXTRA_PIPELINE_BEFORE_TAIL      (0),
    .PIPELINE_READY_IN_HEAD          (1),
    .PIPELINE_VALID_AND_DATA_IN_HEAD (1),
    .__BODY_0_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION                 ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION                   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION                   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) hs_0 /**   Generated by RapidStream   **/ (
    .clk        (clk),
    .if_din     ({ write_addr_din }),
    .if_dout    ({ __rs_pipelined_write_addr_din }),
    .if_empty_n (__rs_pipelined_write_addr_write),
    .if_full_n  (write_addr_full_n),
    .if_read    (__rs_pipelined_write_addr_full_n),
    .if_write   (write_addr_write),
    .reset      (1'b0)
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1" *)
__rs_hs_pipeline_2 #(
    .BODY_LEVEL                      (2),
    .DATA_WIDTH                      (( ( ( ( DataWidth - 1 ) - ( 0 ) + 1 ) ) + 0 )),
    .DEPTH                           (8),
    .EXTRA_PIPELINE_BEFORE_TAIL      (0),
    .PIPELINE_READY_IN_HEAD          (1),
    .PIPELINE_VALID_AND_DATA_IN_HEAD (1),
    .__BODY_0_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION                 ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__HEAD_REGION                   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION                   ("SLOT_X1Y1_TO_SLOT_X1Y1")
) hs_2 /**   Generated by RapidStream   **/ (
    .clk        (clk),
    .if_din     ({ write_data_din }),
    .if_dout    ({ __rs_pipelined_write_data_din }),
    .if_empty_n (__rs_pipelined_write_data_write),
    .if_full_n  (write_data_full_n),
    .if_read    (__rs_pipelined_write_data_full_n),
    .if_write   (write_data_write),
    .reset      (1'b0)
);

endmodule  // __rs_pipelined_async_mmap_edge_list_ch_47__m_axi