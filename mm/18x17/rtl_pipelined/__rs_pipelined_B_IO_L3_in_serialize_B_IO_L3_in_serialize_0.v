// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pipelined_B_IO_L3_in_serialize_B_IO_L3_in_serialize_0 #(
    parameter ap_ST_fsm_state1       = 3'd1,
    parameter ap_ST_fsm_state2       = 3'd2,
    parameter ap_ST_fsm_state3       = 3'd4,
    parameter C_M_AXI_B_ID_WIDTH     = 1,
    parameter C_M_AXI_B_ADDR_WIDTH   = 64,
    parameter C_M_AXI_B_DATA_WIDTH   = 512,
    parameter C_M_AXI_B_AWUSER_WIDTH = 1,
    parameter C_M_AXI_B_ARUSER_WIDTH = 1,
    parameter C_M_AXI_B_WUSER_WIDTH  = 1,
    parameter C_M_AXI_B_RUSER_WIDTH  = 1,
    parameter C_M_AXI_B_BUSER_WIDTH  = 1,
    parameter C_M_AXI_B_USER_VALUE   = 0,
    parameter C_M_AXI_B_PROT_VALUE   = 0,
    parameter C_M_AXI_B_CACHE_VALUE  = 3,
    parameter C_M_AXI_DATA_WIDTH     = 32,
    parameter C_M_AXI_B_WSTRB_WIDTH  = 64,
    parameter C_M_AXI_WSTRB_WIDTH    = 4
) (
    input wire  [                          63:0] B_offset,
    input wire                                   ap_clk,
    output wire                                  ap_done,
    output wire                                  ap_idle,
    output wire                                  ap_ready,
    input wire                                   ap_rst_n,
    input wire                                   ap_start,
    output wire [                         512:0] fifo_B_local_out_din,
    input wire                                   fifo_B_local_out_full_n,
    output wire                                  fifo_B_local_out_write,
    output wire [  (C_M_AXI_B_ADDR_WIDTH - 1):0] m_axi_B_ARADDR,
    output wire [                           1:0] m_axi_B_ARBURST,
    output wire [                           3:0] m_axi_B_ARCACHE,
    output wire [    (C_M_AXI_B_ID_WIDTH - 1):0] m_axi_B_ARID,
    output wire [                           7:0] m_axi_B_ARLEN,
    output wire [                           1:0] m_axi_B_ARLOCK,
    output wire [                           2:0] m_axi_B_ARPROT,
    output wire [                           3:0] m_axi_B_ARQOS,
    input wire                                   m_axi_B_ARREADY,
    output wire [                           3:0] m_axi_B_ARREGION,
    output wire [                           2:0] m_axi_B_ARSIZE,
    output wire [(C_M_AXI_B_ARUSER_WIDTH - 1):0] m_axi_B_ARUSER,
    output wire                                  m_axi_B_ARVALID,
    output wire [  (C_M_AXI_B_ADDR_WIDTH - 1):0] m_axi_B_AWADDR,
    output wire [                           1:0] m_axi_B_AWBURST,
    output wire [                           3:0] m_axi_B_AWCACHE,
    output wire [    (C_M_AXI_B_ID_WIDTH - 1):0] m_axi_B_AWID,
    output wire [                           7:0] m_axi_B_AWLEN,
    output wire [                           1:0] m_axi_B_AWLOCK,
    output wire [                           2:0] m_axi_B_AWPROT,
    output wire [                           3:0] m_axi_B_AWQOS,
    input wire                                   m_axi_B_AWREADY,
    output wire [                           3:0] m_axi_B_AWREGION,
    output wire [                           2:0] m_axi_B_AWSIZE,
    output wire [(C_M_AXI_B_AWUSER_WIDTH - 1):0] m_axi_B_AWUSER,
    output wire                                  m_axi_B_AWVALID,
    input wire  [    (C_M_AXI_B_ID_WIDTH - 1):0] m_axi_B_BID,
    output wire                                  m_axi_B_BREADY,
    input wire  [                           1:0] m_axi_B_BRESP,
    input wire  [ (C_M_AXI_B_BUSER_WIDTH - 1):0] m_axi_B_BUSER,
    input wire                                   m_axi_B_BVALID,
    input wire  [  (C_M_AXI_B_DATA_WIDTH - 1):0] m_axi_B_RDATA,
    input wire  [    (C_M_AXI_B_ID_WIDTH - 1):0] m_axi_B_RID,
    input wire                                   m_axi_B_RLAST,
    output wire                                  m_axi_B_RREADY,
    input wire  [                           1:0] m_axi_B_RRESP,
    input wire  [ (C_M_AXI_B_RUSER_WIDTH - 1):0] m_axi_B_RUSER,
    input wire                                   m_axi_B_RVALID,
    output wire [  (C_M_AXI_B_DATA_WIDTH - 1):0] m_axi_B_WDATA,
    output wire [    (C_M_AXI_B_ID_WIDTH - 1):0] m_axi_B_WID,
    output wire                                  m_axi_B_WLAST,
    input wire                                   m_axi_B_WREADY,
    output wire [ (C_M_AXI_B_WSTRB_WIDTH - 1):0] m_axi_B_WSTRB,
    output wire [ (C_M_AXI_B_WUSER_WIDTH - 1):0] m_axi_B_WUSER,
    output wire                                  m_axi_B_WVALID
);

wire [63:0] __rs_pipelined_B_offset;
wire        __rs_pipelined_ap_done;
wire        __rs_pipelined_ap_idle;
wire        __rs_pipelined_ap_ready;
wire        __rs_pipelined_ap_start;



B_IO_L3_in_serialize _ /**   B_IO_L3_in_serialize_0   **/ (
    .B_offset                (__rs_pipelined_B_offset),
    .ap_clk                  (ap_clk),
    .ap_done                 (__rs_pipelined_ap_done),
    .ap_idle                 (__rs_pipelined_ap_idle),
    .ap_ready                (__rs_pipelined_ap_ready),
    .ap_rst_n                (ap_rst_n),
    .ap_start                (__rs_pipelined_ap_start),
    .fifo_B_local_out_din    (fifo_B_local_out_din),
    .fifo_B_local_out_full_n (fifo_B_local_out_full_n),
    .fifo_B_local_out_write  (fifo_B_local_out_write),
    .m_axi_B_ARADDR          (m_axi_B_ARADDR),
    .m_axi_B_ARBURST         (m_axi_B_ARBURST),
    .m_axi_B_ARCACHE         (m_axi_B_ARCACHE),
    .m_axi_B_ARID            (m_axi_B_ARID),
    .m_axi_B_ARLEN           (m_axi_B_ARLEN),
    .m_axi_B_ARLOCK          (m_axi_B_ARLOCK),
    .m_axi_B_ARPROT          (m_axi_B_ARPROT),
    .m_axi_B_ARQOS           (m_axi_B_ARQOS),
    .m_axi_B_ARREADY         (m_axi_B_ARREADY),
    .m_axi_B_ARREGION        (m_axi_B_ARREGION),
    .m_axi_B_ARSIZE          (m_axi_B_ARSIZE),
    .m_axi_B_ARUSER          (m_axi_B_ARUSER),
    .m_axi_B_ARVALID         (m_axi_B_ARVALID),
    .m_axi_B_AWADDR          (m_axi_B_AWADDR),
    .m_axi_B_AWBURST         (m_axi_B_AWBURST),
    .m_axi_B_AWCACHE         (m_axi_B_AWCACHE),
    .m_axi_B_AWID            (m_axi_B_AWID),
    .m_axi_B_AWLEN           (m_axi_B_AWLEN),
    .m_axi_B_AWLOCK          (m_axi_B_AWLOCK),
    .m_axi_B_AWPROT          (m_axi_B_AWPROT),
    .m_axi_B_AWQOS           (m_axi_B_AWQOS),
    .m_axi_B_AWREADY         (m_axi_B_AWREADY),
    .m_axi_B_AWREGION        (m_axi_B_AWREGION),
    .m_axi_B_AWSIZE          (m_axi_B_AWSIZE),
    .m_axi_B_AWUSER          (m_axi_B_AWUSER),
    .m_axi_B_AWVALID         (m_axi_B_AWVALID),
    .m_axi_B_BID             (m_axi_B_BID),
    .m_axi_B_BREADY          (m_axi_B_BREADY),
    .m_axi_B_BRESP           (m_axi_B_BRESP),
    .m_axi_B_BUSER           (m_axi_B_BUSER),
    .m_axi_B_BVALID          (m_axi_B_BVALID),
    .m_axi_B_RDATA           (m_axi_B_RDATA),
    .m_axi_B_RID             (m_axi_B_RID),
    .m_axi_B_RLAST           (m_axi_B_RLAST),
    .m_axi_B_RREADY          (m_axi_B_RREADY),
    .m_axi_B_RRESP           (m_axi_B_RRESP),
    .m_axi_B_RUSER           (m_axi_B_RUSER),
    .m_axi_B_RVALID          (m_axi_B_RVALID),
    .m_axi_B_WDATA           (m_axi_B_WDATA),
    .m_axi_B_WID             (m_axi_B_WID),
    .m_axi_B_WLAST           (m_axi_B_WLAST),
    .m_axi_B_WREADY          (m_axi_B_WREADY),
    .m_axi_B_WSTRB           (m_axi_B_WSTRB),
    .m_axi_B_WUSER           (m_axi_B_WUSER),
    .m_axi_B_WVALID          (m_axi_B_WVALID)
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1,SLOT_X1Y0_TO_SLOT_X1Y0,SLOT_X0Y0_TO_SLOT_X0Y0" *)
__rs_ap_ctrl_start_ready_pipeline_6 #(
    .BODY_LEVEL      (6),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_2_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_3_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_4_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_5_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X0Y0_TO_SLOT_X0Y0")
) ap_0_ap_start /**   Generated by RapidStream   **/ (
    .clk        (ap_clk),
    .if_empty_n (__rs_pipelined_ap_start),
    .if_full_n  (ap_ready),
    .if_read    (__rs_pipelined_ap_ready),
    .if_write   (ap_start),
    .reset      (1'b0)
);

(* RS_ROUTE="SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X1Y1_TO_SLOT_X1Y1,SLOT_X1Y0_TO_SLOT_X1Y0,SLOT_X0Y0_TO_SLOT_X0Y0" *)
__rs_ff_pipeline_6 #(
    .BODY_LEVEL      (6),
    .DATA_WIDTH      (64),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_1_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_2_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_3_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_4_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_5_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X0Y0_TO_SLOT_X0Y0")
) ff_0_ff_in /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  ({ B_offset }),
    .if_dout ({ __rs_pipelined_B_offset })
);

(* RS_ROUTE="SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X1Y0_TO_SLOT_X1Y0,SLOT_X1Y1_TO_SLOT_X1Y1,SLOT_X0Y1_TO_SLOT_X0Y1" *)
__rs_ff_pipeline_6 #(
    .BODY_LEVEL      (6),
    .DATA_WIDTH      (2),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_1_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_2_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_3_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_4_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_5_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__HEAD_REGION   ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__TAIL_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) ff_0_ff_out /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  ({ __rs_pipelined_ap_done , __rs_pipelined_ap_idle }),
    .if_dout ({ ap_done , ap_idle })
);

endmodule  // __rs_pipelined_B_IO_L3_in_serialize_B_IO_L3_in_serialize_0