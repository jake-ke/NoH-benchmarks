// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pt_B_IO_L3_in_serialize_0_1 #(
    parameter ap_ST_fsm_state1       = 3'd1,
    parameter ap_ST_fsm_state2       = 3'd2,
    parameter ap_ST_fsm_state3       = 3'd4,
    parameter C_M_AXI_B_ID_WIDTH     = 1,
    parameter C_M_AXI_B_ADDR_WIDTH   = 64,
    parameter C_M_AXI_B_DATA_WIDTH   = 512,
    parameter C_M_AXI_B_AWUSER_WIDTH = 1,
    parameter C_M_AXI_B_ARUSER_WIDTH = 1,
    parameter C_M_AXI_B_WUSER_WIDTH  = 1,
    parameter C_M_AXI_B_RUSER_WIDTH  = 1,
    parameter C_M_AXI_B_BUSER_WIDTH  = 1,
    parameter C_M_AXI_B_USER_VALUE   = 0,
    parameter C_M_AXI_B_PROT_VALUE   = 0,
    parameter C_M_AXI_B_CACHE_VALUE  = 3,
    parameter C_M_AXI_DATA_WIDTH     = 32,
    parameter C_M_AXI_B_WSTRB_WIDTH  = 64,
    parameter C_M_AXI_WSTRB_WIDTH    = 4
) (
    input wire  [  (C_M_AXI_B_ADDR_WIDTH - 1):0] __rs_pt_m_axi_B_AWADDR,
    input wire  [                           1:0] __rs_pt_m_axi_B_AWBURST,
    input wire  [                           3:0] __rs_pt_m_axi_B_AWCACHE,
    input wire  [    (C_M_AXI_B_ID_WIDTH - 1):0] __rs_pt_m_axi_B_AWID,
    input wire  [                           7:0] __rs_pt_m_axi_B_AWLEN,
    input wire  [                           1:0] __rs_pt_m_axi_B_AWLOCK,
    input wire  [                           2:0] __rs_pt_m_axi_B_AWPROT,
    input wire  [                           3:0] __rs_pt_m_axi_B_AWQOS,
    output wire                                  __rs_pt_m_axi_B_AWREADY,
    input wire  [                           3:0] __rs_pt_m_axi_B_AWREGION,
    input wire  [                           2:0] __rs_pt_m_axi_B_AWSIZE,
    input wire  [(C_M_AXI_B_AWUSER_WIDTH - 1):0] __rs_pt_m_axi_B_AWUSER,
    input wire                                   __rs_pt_m_axi_B_AWVALID,
    input wire                                   ap_clk,
    input wire                                   ap_rst_n,
    output wire [  (C_M_AXI_B_ADDR_WIDTH - 1):0] m_axi_B_AWADDR,
    output wire [                           1:0] m_axi_B_AWBURST,
    output wire [                           3:0] m_axi_B_AWCACHE,
    output wire [    (C_M_AXI_B_ID_WIDTH - 1):0] m_axi_B_AWID,
    output wire [                           7:0] m_axi_B_AWLEN,
    output wire [                           1:0] m_axi_B_AWLOCK,
    output wire [                           2:0] m_axi_B_AWPROT,
    output wire [                           3:0] m_axi_B_AWQOS,
    input wire                                   m_axi_B_AWREADY,
    output wire [                           3:0] m_axi_B_AWREGION,
    output wire [                           2:0] m_axi_B_AWSIZE,
    output wire [(C_M_AXI_B_AWUSER_WIDTH - 1):0] m_axi_B_AWUSER,
    output wire                                  m_axi_B_AWVALID
);




__rs_pass_through #(
    .WIDTH (( ( C_M_AXI_B_ADDR_WIDTH - 1 ) - ( 0 ) + 1 ))
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWADDR_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWADDR),
    .dout (m_axi_B_AWADDR)
);


__rs_pass_through #(
    .WIDTH (2)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWBURST_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWBURST),
    .dout (m_axi_B_AWBURST)
);


__rs_pass_through #(
    .WIDTH (4)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWCACHE_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWCACHE),
    .dout (m_axi_B_AWCACHE)
);


__rs_pass_through #(
    .WIDTH (( ( C_M_AXI_B_ID_WIDTH - 1 ) - ( 0 ) + 1 ))
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWID_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWID),
    .dout (m_axi_B_AWID)
);


__rs_pass_through #(
    .WIDTH (8)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWLEN_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWLEN),
    .dout (m_axi_B_AWLEN)
);


__rs_pass_through #(
    .WIDTH (2)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWLOCK_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWLOCK),
    .dout (m_axi_B_AWLOCK)
);


__rs_pass_through #(
    .WIDTH (3)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWPROT_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWPROT),
    .dout (m_axi_B_AWPROT)
);


__rs_pass_through #(
    .WIDTH (4)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWQOS_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWQOS),
    .dout (m_axi_B_AWQOS)
);


__rs_pass_through #(
    .WIDTH (1)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWREADY_inst /**   Generated by RapidStream   **/ (
    .din  (m_axi_B_AWREADY),
    .dout (__rs_pt_m_axi_B_AWREADY)
);


__rs_pass_through #(
    .WIDTH (4)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWREGION_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWREGION),
    .dout (m_axi_B_AWREGION)
);


__rs_pass_through #(
    .WIDTH (3)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWSIZE_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWSIZE),
    .dout (m_axi_B_AWSIZE)
);


__rs_pass_through #(
    .WIDTH (( ( C_M_AXI_B_AWUSER_WIDTH - 1 ) - ( 0 ) + 1 ))
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWUSER_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWUSER),
    .dout (m_axi_B_AWUSER)
);


__rs_pass_through #(
    .WIDTH (1)
) __rs_pt_B_IO_L3_in_serialize_m_axi_B_AWVALID_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_B_AWVALID),
    .dout (m_axi_B_AWVALID)
);

endmodule  // __rs_pt_B_IO_L3_in_serialize_0_1