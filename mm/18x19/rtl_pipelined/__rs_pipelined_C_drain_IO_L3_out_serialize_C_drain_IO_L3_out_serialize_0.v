// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pipelined_C_drain_IO_L3_out_serialize_C_drain_IO_L3_out_serialize_0 #(
    parameter ap_ST_fsm_state1       = 3'd1,
    parameter ap_ST_fsm_state2       = 3'd2,
    parameter ap_ST_fsm_state3       = 3'd4,
    parameter C_M_AXI_C_ID_WIDTH     = 1,
    parameter C_M_AXI_C_ADDR_WIDTH   = 64,
    parameter C_M_AXI_C_DATA_WIDTH   = 512,
    parameter C_M_AXI_C_AWUSER_WIDTH = 1,
    parameter C_M_AXI_C_ARUSER_WIDTH = 1,
    parameter C_M_AXI_C_WUSER_WIDTH  = 1,
    parameter C_M_AXI_C_RUSER_WIDTH  = 1,
    parameter C_M_AXI_C_BUSER_WIDTH  = 1,
    parameter C_M_AXI_C_USER_VALUE   = 0,
    parameter C_M_AXI_C_PROT_VALUE   = 0,
    parameter C_M_AXI_C_CACHE_VALUE  = 3,
    parameter C_M_AXI_DATA_WIDTH     = 32,
    parameter C_M_AXI_C_WSTRB_WIDTH  = 64,
    parameter C_M_AXI_WSTRB_WIDTH    = 4
) (
    input wire  [                          63:0] C_offset,
    input wire                                   ap_clk,
    output wire                                  ap_done,
    output wire                                  ap_idle,
    output wire                                  ap_ready,
    input wire                                   ap_rst_n,
    input wire                                   ap_start,
    input wire  [                         128:0] fifo_C_drain_local_in_peek_dout,
    input wire                                   fifo_C_drain_local_in_peek_empty_n,
    output wire                                  fifo_C_drain_local_in_peek_read,
    input wire  [                         128:0] fifo_C_drain_local_in_s_dout,
    input wire                                   fifo_C_drain_local_in_s_empty_n,
    output wire                                  fifo_C_drain_local_in_s_read,
    output wire [  (C_M_AXI_C_ADDR_WIDTH - 1):0] m_axi_C_ARADDR,
    output wire [                           1:0] m_axi_C_ARBURST,
    output wire [                           3:0] m_axi_C_ARCACHE,
    output wire [    (C_M_AXI_C_ID_WIDTH - 1):0] m_axi_C_ARID,
    output wire [                           7:0] m_axi_C_ARLEN,
    output wire [                           1:0] m_axi_C_ARLOCK,
    output wire [                           2:0] m_axi_C_ARPROT,
    output wire [                           3:0] m_axi_C_ARQOS,
    input wire                                   m_axi_C_ARREADY,
    output wire [                           3:0] m_axi_C_ARREGION,
    output wire [                           2:0] m_axi_C_ARSIZE,
    output wire [(C_M_AXI_C_ARUSER_WIDTH - 1):0] m_axi_C_ARUSER,
    output wire                                  m_axi_C_ARVALID,
    output wire [  (C_M_AXI_C_ADDR_WIDTH - 1):0] m_axi_C_AWADDR,
    output wire [                           1:0] m_axi_C_AWBURST,
    output wire [                           3:0] m_axi_C_AWCACHE,
    output wire [    (C_M_AXI_C_ID_WIDTH - 1):0] m_axi_C_AWID,
    output wire [                           7:0] m_axi_C_AWLEN,
    output wire [                           1:0] m_axi_C_AWLOCK,
    output wire [                           2:0] m_axi_C_AWPROT,
    output wire [                           3:0] m_axi_C_AWQOS,
    input wire                                   m_axi_C_AWREADY,
    output wire [                           3:0] m_axi_C_AWREGION,
    output wire [                           2:0] m_axi_C_AWSIZE,
    output wire [(C_M_AXI_C_AWUSER_WIDTH - 1):0] m_axi_C_AWUSER,
    output wire                                  m_axi_C_AWVALID,
    input wire  [    (C_M_AXI_C_ID_WIDTH - 1):0] m_axi_C_BID,
    output wire                                  m_axi_C_BREADY,
    input wire  [                           1:0] m_axi_C_BRESP,
    input wire  [ (C_M_AXI_C_BUSER_WIDTH - 1):0] m_axi_C_BUSER,
    input wire                                   m_axi_C_BVALID,
    input wire  [  (C_M_AXI_C_DATA_WIDTH - 1):0] m_axi_C_RDATA,
    input wire  [    (C_M_AXI_C_ID_WIDTH - 1):0] m_axi_C_RID,
    input wire                                   m_axi_C_RLAST,
    output wire                                  m_axi_C_RREADY,
    input wire  [                           1:0] m_axi_C_RRESP,
    input wire  [ (C_M_AXI_C_RUSER_WIDTH - 1):0] m_axi_C_RUSER,
    input wire                                   m_axi_C_RVALID,
    output wire [  (C_M_AXI_C_DATA_WIDTH - 1):0] m_axi_C_WDATA,
    output wire [    (C_M_AXI_C_ID_WIDTH - 1):0] m_axi_C_WID,
    output wire                                  m_axi_C_WLAST,
    input wire                                   m_axi_C_WREADY,
    output wire [ (C_M_AXI_C_WSTRB_WIDTH - 1):0] m_axi_C_WSTRB,
    output wire [ (C_M_AXI_C_WUSER_WIDTH - 1):0] m_axi_C_WUSER,
    output wire                                  m_axi_C_WVALID
);

wire [63:0] __rs_pipelined_C_offset;
wire        __rs_pipelined_ap_done;
wire        __rs_pipelined_ap_idle;
wire        __rs_pipelined_ap_ready;
wire        __rs_pipelined_ap_start;



C_drain_IO_L3_out_serialize _ /**   C_drain_IO_L3_out_serialize_0   **/ (
    .C_offset                           (__rs_pipelined_C_offset),
    .ap_clk                             (ap_clk),
    .ap_done                            (__rs_pipelined_ap_done),
    .ap_idle                            (__rs_pipelined_ap_idle),
    .ap_ready                           (__rs_pipelined_ap_ready),
    .ap_rst_n                           (ap_rst_n),
    .ap_start                           (__rs_pipelined_ap_start),
    .fifo_C_drain_local_in_peek_dout    (fifo_C_drain_local_in_peek_dout),
    .fifo_C_drain_local_in_peek_empty_n (fifo_C_drain_local_in_peek_empty_n),
    .fifo_C_drain_local_in_peek_read    (fifo_C_drain_local_in_peek_read),
    .fifo_C_drain_local_in_s_dout       (fifo_C_drain_local_in_s_dout),
    .fifo_C_drain_local_in_s_empty_n    (fifo_C_drain_local_in_s_empty_n),
    .fifo_C_drain_local_in_s_read       (fifo_C_drain_local_in_s_read),
    .m_axi_C_ARADDR                     (m_axi_C_ARADDR),
    .m_axi_C_ARBURST                    (m_axi_C_ARBURST),
    .m_axi_C_ARCACHE                    (m_axi_C_ARCACHE),
    .m_axi_C_ARID                       (m_axi_C_ARID),
    .m_axi_C_ARLEN                      (m_axi_C_ARLEN),
    .m_axi_C_ARLOCK                     (m_axi_C_ARLOCK),
    .m_axi_C_ARPROT                     (m_axi_C_ARPROT),
    .m_axi_C_ARQOS                      (m_axi_C_ARQOS),
    .m_axi_C_ARREADY                    (m_axi_C_ARREADY),
    .m_axi_C_ARREGION                   (m_axi_C_ARREGION),
    .m_axi_C_ARSIZE                     (m_axi_C_ARSIZE),
    .m_axi_C_ARUSER                     (m_axi_C_ARUSER),
    .m_axi_C_ARVALID                    (m_axi_C_ARVALID),
    .m_axi_C_AWADDR                     (m_axi_C_AWADDR),
    .m_axi_C_AWBURST                    (m_axi_C_AWBURST),
    .m_axi_C_AWCACHE                    (m_axi_C_AWCACHE),
    .m_axi_C_AWID                       (m_axi_C_AWID),
    .m_axi_C_AWLEN                      (m_axi_C_AWLEN),
    .m_axi_C_AWLOCK                     (m_axi_C_AWLOCK),
    .m_axi_C_AWPROT                     (m_axi_C_AWPROT),
    .m_axi_C_AWQOS                      (m_axi_C_AWQOS),
    .m_axi_C_AWREADY                    (m_axi_C_AWREADY),
    .m_axi_C_AWREGION                   (m_axi_C_AWREGION),
    .m_axi_C_AWSIZE                     (m_axi_C_AWSIZE),
    .m_axi_C_AWUSER                     (m_axi_C_AWUSER),
    .m_axi_C_AWVALID                    (m_axi_C_AWVALID),
    .m_axi_C_BID                        (m_axi_C_BID),
    .m_axi_C_BREADY                     (m_axi_C_BREADY),
    .m_axi_C_BRESP                      (m_axi_C_BRESP),
    .m_axi_C_BUSER                      (m_axi_C_BUSER),
    .m_axi_C_BVALID                     (m_axi_C_BVALID),
    .m_axi_C_RDATA                      (m_axi_C_RDATA),
    .m_axi_C_RID                        (m_axi_C_RID),
    .m_axi_C_RLAST                      (m_axi_C_RLAST),
    .m_axi_C_RREADY                     (m_axi_C_RREADY),
    .m_axi_C_RRESP                      (m_axi_C_RRESP),
    .m_axi_C_RUSER                      (m_axi_C_RUSER),
    .m_axi_C_RVALID                     (m_axi_C_RVALID),
    .m_axi_C_WDATA                      (m_axi_C_WDATA),
    .m_axi_C_WID                        (m_axi_C_WID),
    .m_axi_C_WLAST                      (m_axi_C_WLAST),
    .m_axi_C_WREADY                     (m_axi_C_WREADY),
    .m_axi_C_WSTRB                      (m_axi_C_WSTRB),
    .m_axi_C_WUSER                      (m_axi_C_WUSER),
    .m_axi_C_WVALID                     (m_axi_C_WVALID)
);

(* RS_ROUTE="SLOT_X1Y2_TO_SLOT_X1Y2,SLOT_X0Y2_TO_SLOT_X0Y2,SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X1Y0_TO_SLOT_X1Y0" *)
__rs_ap_ctrl_start_ready_pipeline_8 #(
    .BODY_LEVEL      (8),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__BODY_1_REGION ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_2_REGION ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_3_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_4_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_5_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_6_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_7_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__HEAD_REGION   ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__TAIL_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0")
) ap_0_ap_start /**   Generated by RapidStream   **/ (
    .clk        (ap_clk),
    .if_empty_n (__rs_pipelined_ap_start),
    .if_full_n  (ap_ready),
    .if_read    (__rs_pipelined_ap_ready),
    .if_write   (ap_start),
    .reset      (1'b0)
);

(* RS_ROUTE="SLOT_X1Y2_TO_SLOT_X1Y2,SLOT_X0Y2_TO_SLOT_X0Y2,SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X1Y0_TO_SLOT_X1Y0" *)
__rs_ff_pipeline_8 #(
    .BODY_LEVEL      (8),
    .DATA_WIDTH      (64),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__BODY_1_REGION ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_2_REGION ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_3_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_4_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_5_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_6_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_7_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__HEAD_REGION   ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__TAIL_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0")
) ff_0_ff_in /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  ({ C_offset }),
    .if_dout ({ __rs_pipelined_C_offset })
);

(* RS_ROUTE="SLOT_X1Y0_TO_SLOT_X1Y0,SLOT_X0Y0_TO_SLOT_X0Y0,SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X0Y2_TO_SLOT_X0Y2,SLOT_X1Y2_TO_SLOT_X1Y2" *)
__rs_ff_pipeline_8 #(
    .BODY_LEVEL      (8),
    .DATA_WIDTH      (2),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_1_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_2_REGION ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__BODY_3_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_4_REGION ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_5_REGION ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_6_REGION ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_7_REGION ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__HEAD_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__TAIL_REGION   ("SLOT_X1Y2_TO_SLOT_X1Y2")
) ff_0_ff_out /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  ({ __rs_pipelined_ap_done , __rs_pipelined_ap_idle }),
    .if_dout ({ ap_done , ap_idle })
);

endmodule  // __rs_pipelined_C_drain_IO_L3_out_serialize_C_drain_IO_L3_out_serialize_0