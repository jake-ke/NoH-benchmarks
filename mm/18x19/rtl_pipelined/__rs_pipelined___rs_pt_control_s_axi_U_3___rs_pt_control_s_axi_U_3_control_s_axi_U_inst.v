// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pipelined___rs_pt_control_s_axi_U_3___rs_pt_control_s_axi_U_3_control_s_axi_U_inst #(
    parameter C_S_AXI_ADDR_WIDTH = 6,
    parameter C_S_AXI_DATA_WIDTH = 32,
    parameter ADDR_AP_CTRL       = 6'h00,
    parameter ADDR_GIE           = 6'h04,
    parameter ADDR_IER           = 6'h08,
    parameter ADDR_ISR           = 6'h0c,
    parameter ADDR_A_DATA_0      = 6'h10,
    parameter ADDR_A_DATA_1      = 6'h14,
    parameter ADDR_A_CTRL        = 6'h18,
    parameter ADDR_B_DATA_0      = 6'h1c,
    parameter ADDR_B_DATA_1      = 6'h20,
    parameter ADDR_B_CTRL        = 6'h24,
    parameter ADDR_C_DATA_0      = 6'h28,
    parameter ADDR_C_DATA_1      = 6'h2c,
    parameter ADDR_C_CTRL        = 6'h30,
    parameter WRIDLE             = 2'd0,
    parameter WRDATA             = 2'd1,
    parameter WRRESP             = 2'd2,
    parameter WRRESET            = 2'd3,
    parameter RDIDLE             = 2'd0,
    parameter RDDATA             = 2'd1,
    parameter RDRESET            = 2'd2,
    parameter ADDR_BITS          = 6
) (
    input wire                               ACLK,
    input wire                               ARESET,
    output wire [(C_S_AXI_DATA_WIDTH - 1):0] RDATA,
    input wire                               RREADY,
    output wire [                       1:0] RRESP,
    output wire                              RVALID,
    input wire  [(C_S_AXI_DATA_WIDTH - 1):0] __rs_pt_RDATA,
    output wire                              __rs_pt_RREADY,
    input wire  [                       1:0] __rs_pt_RRESP,
    input wire                               __rs_pt_RVALID
);

wire [(C_S_AXI_DATA_WIDTH - 1):0] __rs_pipelined___rs_pt_RDATA;
wire                              __rs_pipelined___rs_pt_RREADY;
wire [                       1:0] __rs_pipelined___rs_pt_RRESP;
wire                              __rs_pipelined___rs_pt_RVALID;



__rs_pt_control_s_axi_U_3 #(
    .C_S_AXI_ADDR_WIDTH (C_S_AXI_ADDR_WIDTH),
    .C_S_AXI_DATA_WIDTH (C_S_AXI_DATA_WIDTH)
) _ /**   Generated by RapidStream   **/ (
    .ACLK           (ACLK),
    .ARESET         (ARESET),
    .RDATA          (RDATA),
    .RREADY         (RREADY),
    .RRESP          (RRESP),
    .RVALID         (RVALID),
    .__rs_pt_RDATA  (__rs_pipelined___rs_pt_RDATA),
    .__rs_pt_RREADY (__rs_pipelined___rs_pt_RREADY),
    .__rs_pt_RRESP  (__rs_pipelined___rs_pt_RRESP),
    .__rs_pt_RVALID (__rs_pipelined___rs_pt_RVALID)
);

(* RS_ROUTE="SLOT_X1Y2_TO_SLOT_X1Y2,SLOT_X0Y2_TO_SLOT_X0Y2,SLOT_X0Y1_TO_SLOT_X0Y1,SLOT_X0Y0_TO_SLOT_X0Y0" *)
__rs_hs_pipeline_6 #(
    .BODY_LEVEL                      (6),
    .DATA_WIDTH                      (( ( ( ( C_S_AXI_DATA_WIDTH - 1 ) - ( 0 ) + 1 ) ) + ( 2 ) + 0 )),
    .DEPTH                           (8),
    .EXTRA_PIPELINE_BEFORE_TAIL      (0),
    .PIPELINE_READY_IN_HEAD          (1),
    .PIPELINE_VALID_AND_DATA_IN_HEAD (1),
    .__BODY_0_REGION                 ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__BODY_1_REGION                 ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_2_REGION                 ("SLOT_X0Y2_TO_SLOT_X0Y2"),
    .__BODY_3_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_4_REGION                 ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__BODY_5_REGION                 ("SLOT_X0Y0_TO_SLOT_X0Y0"),
    .__HEAD_REGION                   ("SLOT_X1Y2_TO_SLOT_X1Y2"),
    .__TAIL_REGION                   ("SLOT_X0Y0_TO_SLOT_X0Y0")
) hs_0 /**   Generated by RapidStream   **/ (
    .clk        (ACLK),
    .if_din     ({ __rs_pt_RDATA , __rs_pt_RRESP }),
    .if_dout    ({ __rs_pipelined___rs_pt_RDATA , __rs_pipelined___rs_pt_RRESP }),
    .if_empty_n (__rs_pipelined___rs_pt_RVALID),
    .if_full_n  (__rs_pt_RREADY),
    .if_read    (__rs_pipelined___rs_pt_RREADY),
    .if_write   (__rs_pt_RVALID),
    .reset      (1'b0)
);

endmodule  // __rs_pipelined___rs_pt_control_s_axi_U_3___rs_pt_control_s_axi_U_3_control_s_axi_U_inst