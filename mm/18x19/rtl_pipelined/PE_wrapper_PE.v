`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module PE_wrapper_PE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_in_s_dout,
        fifo_A_in_s_empty_n,
        fifo_A_in_s_read,
        fifo_B_in_s_dout,
        fifo_B_in_s_empty_n,
        fifo_B_in_s_read,
        fifo_B_out_din,
        fifo_B_out_full_n,
        fifo_B_out_write,
        fifo_A_out_din,
        fifo_A_out_full_n,
        fifo_A_out_write,
        fifo_C_drain_out_din,
        fifo_C_drain_out_full_n,
        fifo_C_drain_out_write
);
parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [512:0] fifo_A_in_s_dout;
input   fifo_A_in_s_empty_n;
output   fifo_A_in_s_read;
input  [512:0] fifo_B_in_s_dout;
input   fifo_B_in_s_empty_n;
output   fifo_B_in_s_read;
output  [512:0] fifo_B_out_din;
input   fifo_B_out_full_n;
output   fifo_B_out_write;
output  [512:0] fifo_A_out_din;
input   fifo_A_out_full_n;
output   fifo_A_out_write;
output  [16:0] fifo_C_drain_out_din;
input   fifo_C_drain_out_full_n;
output   fifo_C_drain_out_write;
reg ap_idle;
reg fifo_A_in_s_read;
reg fifo_B_in_s_read;
reg fifo_B_out_write;
reg fifo_A_out_write;
reg fifo_C_drain_out_write;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] cmp_i_i244_reg_1796;
reg   [0:0] cmp_i_i244_reg_1796_pp0_iter6_reg;
reg    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln266_fu_353_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_A_in_s_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_A_out_blk_n;
reg    fifo_B_in_s_blk_n;
reg    fifo_B_out_blk_n;
reg    fifo_C_drain_out_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln268_fu_359_p2;
reg   [0:0] icmp_ln268_reg_1783;
wire   [0:0] cmp_i_i192_fu_489_p2;
reg   [0:0] cmp_i_i192_reg_1791;
reg   [0:0] cmp_i_i192_reg_1791_pp0_iter2_reg;
wire   [0:0] cmp_i_i244_fu_495_p2;
reg   [0:0] cmp_i_i244_reg_1796_pp0_iter2_reg;
reg   [0:0] cmp_i_i244_reg_1796_pp0_iter3_reg;
reg   [0:0] cmp_i_i244_reg_1796_pp0_iter4_reg;
reg   [0:0] cmp_i_i244_reg_1796_pp0_iter5_reg;
wire   [5:0] empty_fu_513_p2;
reg   [5:0] empty_reg_1800;
wire  signed [15:0] f0_1_fu_521_p1;
reg  signed [15:0] f0_1_reg_1805;
reg  signed [15:0] f3_1_reg_1821;
reg  signed [15:0] f5_1_reg_1832;
reg  signed [15:0] f7_1_reg_1843;
reg  signed [15:0] f9_1_reg_1854;
reg  signed [15:0] f11_1_reg_1865;
reg  signed [15:0] f13_1_reg_1876;
reg  signed [15:0] f15_1_reg_1887;
reg  signed [15:0] f17_1_reg_1898;
reg  signed [15:0] f19_1_reg_1909;
reg  signed [15:0] f21_1_reg_1920;
reg  signed [15:0] f23_1_reg_1931;
reg  signed [15:0] f25_1_reg_1942;
reg  signed [15:0] f27_1_reg_1953;
reg  signed [15:0] f29_1_reg_1964;
reg  signed [15:0] f30_1_reg_1970;
wire  signed [15:0] f0_fu_837_p1;
reg  signed [15:0] f0_reg_1981;
reg  signed [15:0] f3_reg_1997;
reg  signed [15:0] f5_reg_2008;
reg  signed [15:0] f7_reg_2019;
reg  signed [15:0] f9_reg_2030;
reg  signed [15:0] f11_reg_2041;
reg  signed [15:0] f13_reg_2052;
reg  signed [15:0] f15_reg_2063;
reg  signed [15:0] f17_reg_2074;
reg  signed [15:0] f19_reg_2085;
reg  signed [15:0] f21_reg_2096;
reg  signed [15:0] f23_reg_2107;
reg  signed [15:0] f25_reg_2118;
reg  signed [15:0] f27_reg_2129;
reg  signed [15:0] f29_reg_2140;
reg  signed [15:0] f30_reg_2146;
reg   [5:0] local_C_addr_reg_2157;
reg   [5:0] local_C_addr_reg_2157_pp0_iter3_reg;
reg   [5:0] local_C_addr_reg_2157_pp0_iter4_reg;
reg   [5:0] local_C_addr_reg_2157_pp0_iter5_reg;
reg   [5:0] local_C_addr_reg_2157_pp0_iter6_reg;
wire   [15:0] mul_ln297_fu_1361_p2;
reg   [15:0] mul_ln297_reg_2164;
wire   [15:0] mul_ln297_3_fu_1371_p2;
reg   [15:0] mul_ln297_3_reg_2169;
wire   [15:0] mul_ln297_5_fu_1381_p2;
reg   [15:0] mul_ln297_5_reg_2174;
wire   [15:0] mul_ln297_7_fu_1391_p2;
reg   [15:0] mul_ln297_7_reg_2179;
wire   [15:0] mul_ln297_9_fu_1401_p2;
reg   [15:0] mul_ln297_9_reg_2184;
wire   [15:0] mul_ln297_11_fu_1411_p2;
reg   [15:0] mul_ln297_11_reg_2189;
wire   [15:0] mul_ln297_13_fu_1421_p2;
reg   [15:0] mul_ln297_13_reg_2194;
wire   [15:0] mul_ln297_17_fu_1437_p2;
reg   [15:0] mul_ln297_17_reg_2199;
wire   [15:0] mul_ln297_19_fu_1447_p2;
reg   [15:0] mul_ln297_19_reg_2204;
wire   [15:0] mul_ln297_21_fu_1457_p2;
reg   [15:0] mul_ln297_21_reg_2209;
wire   [15:0] mul_ln297_23_fu_1467_p2;
reg   [15:0] mul_ln297_23_reg_2214;
wire   [15:0] mul_ln297_25_fu_1477_p2;
reg   [15:0] mul_ln297_25_reg_2219;
wire   [15:0] mul_ln297_27_fu_1487_p2;
reg   [15:0] mul_ln297_27_reg_2224;
wire   [15:0] mul_ln297_29_fu_1497_p2;
reg   [15:0] mul_ln297_29_reg_2229;
wire   [15:0] mul_ln297_30_fu_1507_p2;
reg   [15:0] mul_ln297_30_reg_2234;
wire   [15:0] grp_fu_1715_p3;
reg  signed [15:0] add_ln297_reg_2244;
wire   [15:0] grp_fu_1708_p3;
reg  signed [15:0] add_ln297_1_reg_2249;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_5_fu_1518_p2;
reg   [15:0] add_ln297_5_reg_2254;
wire   [15:0] grp_fu_1662_p3;
reg  signed [15:0] add_ln297_7_reg_2259;
wire   [15:0] grp_fu_1669_p3;
reg  signed [15:0] add_ln297_8_reg_2264;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_12_fu_1522_p2;
reg   [15:0] add_ln297_12_reg_2269;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_17_fu_1526_p2;
reg   [15:0] add_ln297_17_reg_2274;
reg   [15:0] add_ln297_17_reg_2274_pp0_iter5_reg;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_20_fu_1530_p2;
reg   [15:0] add_ln297_20_reg_2279;
reg   [15:0] add_ln297_20_reg_2279_pp0_iter5_reg;
wire   [15:0] grp_fu_1633_p3;
reg  signed [15:0] add_ln297_22_reg_2284;
reg  signed [15:0] add_ln297_22_reg_2284_pp0_iter5_reg;
wire   [15:0] grp_fu_1640_p3;
reg  signed [15:0] add_ln297_23_reg_2289;
reg  signed [15:0] add_ln297_23_reg_2289_pp0_iter5_reg;
wire   [15:0] grp_fu_1647_p3;
reg  signed [15:0] add_ln297_25_reg_2294;
wire   [15:0] grp_fu_1654_p3;
wire   [15:0] add_ln297_6_fu_1538_p2;
reg   [15:0] add_ln297_6_reg_2304;
reg   [15:0] add_ln297_6_reg_2304_pp0_iter6_reg;
wire   [15:0] add_ln297_13_fu_1547_p2;
reg   [15:0] add_ln297_13_reg_2309;
reg   [15:0] add_ln297_13_reg_2309_pp0_iter6_reg;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_28_fu_1552_p2;
reg   [15:0] add_ln297_28_reg_2314;
wire   [15:0] add_ln297_30_fu_1569_p2;
reg   [15:0] add_ln297_30_reg_2319;
wire   [5:0] local_C_address0;
reg    local_C_ce0;
wire   [15:0] local_C_q0;
reg    local_C_ce1;
reg    local_C_we1;
wire   [63:0] p_cast27_fu_1347_p1;
reg   [3:0] c7_fu_202;
wire   [3:0] add_ln270_fu_1305_p2;
wire    ap_loop_init;
reg   [3:0] c6_fu_206;
wire   [3:0] select_ln268_1_fu_481_p3;
reg   [7:0] indvar_flatten_fu_210;
wire   [7:0] select_ln268_2_fu_371_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] c5_fu_214;
wire   [1:0] select_ln266_1_fu_451_p3;
reg   [7:0] indvar_flatten12_fu_218;
wire   [7:0] add_ln266_fu_347_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten12_load;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] add_ln297_31_fu_1579_p2;
wire   [7:0] add_ln268_1_fu_365_p2;
wire   [0:0] icmp_ln270_fu_439_p2;
wire   [0:0] xor_ln266_fu_434_p2;
wire   [1:0] c5_2_fu_421_p2;
wire   [3:0] select_ln266_fu_427_p3;
wire   [0:0] and_ln266_fu_445_p2;
wire   [0:0] or_ln268_fu_464_p2;
wire   [3:0] select_ln268_fu_469_p3;
wire   [3:0] add_ln268_fu_458_p2;
wire   [2:0] trunc_ln268_fu_477_p1;
wire   [5:0] tmp_fu_505_p3;
wire   [5:0] select_ln268_1_cast_fu_501_p1;
wire   [511:0] trunc_ln151_fu_1279_p1;
wire   [511:0] trunc_ln151_1_fu_1292_p1;
wire  signed [15:0] add_ln297_5_fu_1518_p0;
wire   [15:0] grp_fu_1700_p3;
wire  signed [15:0] add_ln297_5_fu_1518_p1;
wire   [15:0] grp_fu_1692_p3;
wire  signed [15:0] add_ln297_12_fu_1522_p0;
wire   [15:0] grp_fu_1684_p3;
wire  signed [15:0] add_ln297_12_fu_1522_p1;
wire   [15:0] grp_fu_1676_p3;
wire  signed [15:0] add_ln297_17_fu_1526_p0;
wire   [15:0] grp_fu_1609_p3;
wire  signed [15:0] add_ln297_17_fu_1526_p1;
wire   [15:0] grp_fu_1601_p3;
wire  signed [15:0] add_ln297_20_fu_1530_p0;
wire   [15:0] grp_fu_1625_p3;
wire  signed [15:0] add_ln297_20_fu_1530_p1;
wire   [15:0] grp_fu_1617_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_2_fu_1534_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_9_fu_1543_p2;
wire  signed [15:0] add_ln297_28_fu_1552_p0;
wire   [15:0] grp_fu_1722_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln297_24_fu_1560_p2;
wire   [15:0] add_ln297_29_fu_1564_p2;
wire   [15:0] add_ln297_21_fu_1556_p2;
wire   [15:0] add_ln297_14_fu_1575_p2;
wire  signed [15:0] grp_fu_1601_p0;
wire  signed [15:0] grp_fu_1601_p1;
wire  signed [15:0] grp_fu_1609_p0;
wire  signed [15:0] grp_fu_1609_p1;
wire  signed [15:0] grp_fu_1617_p0;
wire  signed [15:0] grp_fu_1617_p1;
wire  signed [15:0] grp_fu_1625_p0;
wire  signed [15:0] grp_fu_1625_p1;
wire  signed [15:0] grp_fu_1633_p0;
wire  signed [15:0] grp_fu_1633_p1;
wire  signed [15:0] grp_fu_1640_p0;
wire  signed [15:0] grp_fu_1640_p1;
wire  signed [15:0] grp_fu_1647_p0;
wire  signed [15:0] grp_fu_1647_p1;
wire  signed [15:0] grp_fu_1654_p0;
wire  signed [15:0] grp_fu_1654_p1;
wire   [15:0] grp_fu_1654_p2;
wire  signed [15:0] grp_fu_1662_p0;
wire  signed [15:0] grp_fu_1662_p1;
wire  signed [15:0] grp_fu_1669_p0;
wire  signed [15:0] grp_fu_1669_p1;
wire  signed [15:0] grp_fu_1676_p0;
wire  signed [15:0] grp_fu_1676_p1;
wire  signed [15:0] grp_fu_1684_p0;
wire  signed [15:0] grp_fu_1684_p1;
wire  signed [15:0] grp_fu_1692_p0;
wire  signed [15:0] grp_fu_1692_p1;
wire  signed [15:0] grp_fu_1700_p0;
wire  signed [15:0] grp_fu_1700_p1;
wire  signed [15:0] grp_fu_1708_p0;
wire  signed [15:0] grp_fu_1708_p1;
wire  signed [15:0] grp_fu_1715_p0;
wire  signed [15:0] grp_fu_1715_p1;
reg    grp_fu_1601_ce;
reg    grp_fu_1609_ce;
reg    grp_fu_1617_ce;
reg    grp_fu_1625_ce;
reg    grp_fu_1633_ce;
reg    grp_fu_1640_ce;
reg    grp_fu_1647_ce;
reg    grp_fu_1654_ce;
reg    grp_fu_1662_ce;
reg    grp_fu_1669_ce;
reg    grp_fu_1676_ce;
reg    grp_fu_1684_ce;
reg    grp_fu_1692_ce;
reg    grp_fu_1700_ce;
reg    grp_fu_1708_ce;
reg    grp_fu_1715_ce;
reg    grp_fu_1722_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 c7_fu_202 = 4'd0;
#0 c6_fu_206 = 4'd0;
#0 indvar_flatten_fu_210 = 8'd0;
#0 c5_fu_214 = 2'd0;
#0 indvar_flatten12_fu_218 = 8'd0;
#0 ap_done_reg = 1'b0;
end
PE_wrapper_PE_local_C_RAM_2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_address0),
    .ce0(local_C_ce0),
    .q0(local_C_q0),
    .address1(local_C_addr_reg_2157_pp0_iter6_reg),
    .ce1(local_C_ce1),
    .we1(local_C_we1),
    .d1(add_ln297_31_fu_1579_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U1(
    .din0(f0_reg_1981),
    .din1(f0_1_reg_1805),
    .dout(mul_ln297_fu_1361_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U2(
    .din0(f3_reg_1997),
    .din1(f3_1_reg_1821),
    .dout(mul_ln297_3_fu_1371_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U3(
    .din0(f5_reg_2008),
    .din1(f5_1_reg_1832),
    .dout(mul_ln297_5_fu_1381_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U4(
    .din0(f7_reg_2019),
    .din1(f7_1_reg_1843),
    .dout(mul_ln297_7_fu_1391_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U5(
    .din0(f9_reg_2030),
    .din1(f9_1_reg_1854),
    .dout(mul_ln297_9_fu_1401_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U6(
    .din0(f11_reg_2041),
    .din1(f11_1_reg_1865),
    .dout(mul_ln297_11_fu_1411_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U7(
    .din0(f13_reg_2052),
    .din1(f13_1_reg_1876),
    .dout(mul_ln297_13_fu_1421_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U8(
    .din0(f17_reg_2074),
    .din1(f17_1_reg_1898),
    .dout(mul_ln297_17_fu_1437_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U9(
    .din0(f19_reg_2085),
    .din1(f19_1_reg_1909),
    .dout(mul_ln297_19_fu_1447_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U10(
    .din0(f21_reg_2096),
    .din1(f21_1_reg_1920),
    .dout(mul_ln297_21_fu_1457_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U11(
    .din0(f23_reg_2107),
    .din1(f23_1_reg_1931),
    .dout(mul_ln297_23_fu_1467_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U12(
    .din0(f25_reg_2118),
    .din1(f25_1_reg_1942),
    .dout(mul_ln297_25_fu_1477_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U13(
    .din0(f27_reg_2129),
    .din1(f27_1_reg_1953),
    .dout(mul_ln297_27_fu_1487_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U14(
    .din0(f29_reg_2140),
    .din1(f29_1_reg_1964),
    .dout(mul_ln297_29_fu_1497_p2)
);
PE_wrapper_mul_16s_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_16s_16s_16_1_1_U15(
    .din0(f30_reg_2146),
    .din1(f30_1_reg_1970),
    .dout(mul_ln297_30_fu_1507_p2)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1601_p0),
    .din1(grp_fu_1601_p1),
    .din2(mul_ln297_reg_2164),
    .ce(grp_fu_1601_ce),
    .dout(grp_fu_1601_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1609_p0),
    .din1(grp_fu_1609_p1),
    .din2(mul_ln297_3_reg_2169),
    .ce(grp_fu_1609_ce),
    .dout(grp_fu_1609_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1617_p0),
    .din1(grp_fu_1617_p1),
    .din2(mul_ln297_5_reg_2174),
    .ce(grp_fu_1617_ce),
    .dout(grp_fu_1617_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1625_p0),
    .din1(grp_fu_1625_p1),
    .din2(mul_ln297_7_reg_2179),
    .ce(grp_fu_1625_ce),
    .dout(grp_fu_1625_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1633_p0),
    .din1(grp_fu_1633_p1),
    .din2(mul_ln297_9_reg_2184),
    .ce(grp_fu_1633_ce),
    .dout(grp_fu_1633_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1640_p0),
    .din1(grp_fu_1640_p1),
    .din2(mul_ln297_11_reg_2189),
    .ce(grp_fu_1640_ce),
    .dout(grp_fu_1640_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1647_p0),
    .din1(grp_fu_1647_p1),
    .din2(mul_ln297_13_reg_2194),
    .ce(grp_fu_1647_ce),
    .dout(grp_fu_1647_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1654_p0),
    .din1(grp_fu_1654_p1),
    .din2(grp_fu_1654_p2),
    .ce(grp_fu_1654_ce),
    .dout(grp_fu_1654_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1662_p0),
    .din1(grp_fu_1662_p1),
    .din2(mul_ln297_17_reg_2199),
    .ce(grp_fu_1662_ce),
    .dout(grp_fu_1662_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1669_p0),
    .din1(grp_fu_1669_p1),
    .din2(mul_ln297_19_reg_2204),
    .ce(grp_fu_1669_ce),
    .dout(grp_fu_1669_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1676_p0),
    .din1(grp_fu_1676_p1),
    .din2(mul_ln297_21_reg_2209),
    .ce(grp_fu_1676_ce),
    .dout(grp_fu_1676_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1684_p0),
    .din1(grp_fu_1684_p1),
    .din2(mul_ln297_23_reg_2214),
    .ce(grp_fu_1684_ce),
    .dout(grp_fu_1684_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1692_p0),
    .din1(grp_fu_1692_p1),
    .din2(mul_ln297_25_reg_2219),
    .ce(grp_fu_1692_ce),
    .dout(grp_fu_1692_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1700_p0),
    .din1(grp_fu_1700_p1),
    .din2(mul_ln297_27_reg_2224),
    .ce(grp_fu_1700_ce),
    .dout(grp_fu_1700_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1708_p0),
    .din1(grp_fu_1708_p1),
    .din2(mul_ln297_29_reg_2229),
    .ce(grp_fu_1708_ce),
    .dout(grp_fu_1708_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1715_p0),
    .din1(grp_fu_1715_p1),
    .din2(mul_ln297_30_reg_2234),
    .ce(grp_fu_1715_ce),
    .dout(grp_fu_1715_p3)
);
PE_wrapper_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(f15_reg_2063),
    .din1(f15_1_reg_1887),
    .din2(grp_fu_1654_p3),
    .ce(grp_fu_1722_ce),
    .dout(grp_fu_1722_p3)
);
PE_wrapper_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_fu_214 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c5_fu_214 <= select_ln266_1_fu_451_p3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c6_fu_206 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c6_fu_206 <= select_ln268_1_fu_481_p3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c7_fu_202 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c7_fu_202 <= add_ln270_fu_1305_p2;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln266_fu_353_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten12_fu_218 <= add_ln266_fu_347_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten12_fu_218 <= 8'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln266_fu_353_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_210 <= select_ln268_2_fu_371_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_210 <= 8'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln297_12_reg_2269 <= add_ln297_12_fu_1522_p2;
        add_ln297_13_reg_2309 <= add_ln297_13_fu_1547_p2;
        add_ln297_13_reg_2309_pp0_iter6_reg <= add_ln297_13_reg_2309;
        add_ln297_17_reg_2274 <= add_ln297_17_fu_1526_p2;
        add_ln297_17_reg_2274_pp0_iter5_reg <= add_ln297_17_reg_2274;
        add_ln297_20_reg_2279 <= add_ln297_20_fu_1530_p2;
        add_ln297_20_reg_2279_pp0_iter5_reg <= add_ln297_20_reg_2279;
        add_ln297_22_reg_2284_pp0_iter5_reg <= add_ln297_22_reg_2284;
        add_ln297_23_reg_2289_pp0_iter5_reg <= add_ln297_23_reg_2289;
        add_ln297_28_reg_2314 <= add_ln297_28_fu_1552_p2;
        add_ln297_30_reg_2319 <= add_ln297_30_fu_1569_p2;
        add_ln297_5_reg_2254 <= add_ln297_5_fu_1518_p2;
        add_ln297_6_reg_2304 <= add_ln297_6_fu_1538_p2;
        add_ln297_6_reg_2304_pp0_iter6_reg <= add_ln297_6_reg_2304;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        cmp_i_i192_reg_1791_pp0_iter2_reg <= cmp_i_i192_reg_1791;
        cmp_i_i244_reg_1796_pp0_iter2_reg <= cmp_i_i244_reg_1796;
        cmp_i_i244_reg_1796_pp0_iter3_reg <= cmp_i_i244_reg_1796_pp0_iter2_reg;
        cmp_i_i244_reg_1796_pp0_iter4_reg <= cmp_i_i244_reg_1796_pp0_iter3_reg;
        cmp_i_i244_reg_1796_pp0_iter5_reg <= cmp_i_i244_reg_1796_pp0_iter4_reg;
        cmp_i_i244_reg_1796_pp0_iter6_reg <= cmp_i_i244_reg_1796_pp0_iter5_reg;
        local_C_addr_reg_2157 <= p_cast27_fu_1347_p1;
        local_C_addr_reg_2157_pp0_iter3_reg <= local_C_addr_reg_2157;
        local_C_addr_reg_2157_pp0_iter4_reg <= local_C_addr_reg_2157_pp0_iter3_reg;
        local_C_addr_reg_2157_pp0_iter5_reg <= local_C_addr_reg_2157_pp0_iter4_reg;
        local_C_addr_reg_2157_pp0_iter6_reg <= local_C_addr_reg_2157_pp0_iter5_reg;
        mul_ln297_11_reg_2189 <= mul_ln297_11_fu_1411_p2;
        mul_ln297_13_reg_2194 <= mul_ln297_13_fu_1421_p2;
        mul_ln297_17_reg_2199 <= mul_ln297_17_fu_1437_p2;
        mul_ln297_19_reg_2204 <= mul_ln297_19_fu_1447_p2;
        mul_ln297_21_reg_2209 <= mul_ln297_21_fu_1457_p2;
        mul_ln297_23_reg_2214 <= mul_ln297_23_fu_1467_p2;
        mul_ln297_25_reg_2219 <= mul_ln297_25_fu_1477_p2;
        mul_ln297_27_reg_2224 <= mul_ln297_27_fu_1487_p2;
        mul_ln297_29_reg_2229 <= mul_ln297_29_fu_1497_p2;
        mul_ln297_30_reg_2234 <= mul_ln297_30_fu_1507_p2;
        mul_ln297_3_reg_2169 <= mul_ln297_3_fu_1371_p2;
        mul_ln297_5_reg_2174 <= mul_ln297_5_fu_1381_p2;
        mul_ln297_7_reg_2179 <= mul_ln297_7_fu_1391_p2;
        mul_ln297_9_reg_2184 <= mul_ln297_9_fu_1401_p2;
        mul_ln297_reg_2164 <= mul_ln297_fu_1361_p2;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add_ln297_1_reg_2249 <= grp_fu_1708_p3;
        add_ln297_22_reg_2284 <= grp_fu_1633_p3;
        add_ln297_23_reg_2289 <= grp_fu_1640_p3;
        add_ln297_25_reg_2294 <= grp_fu_1647_p3;
        add_ln297_7_reg_2259 <= grp_fu_1662_p3;
        add_ln297_8_reg_2264 <= grp_fu_1669_p3;
        add_ln297_reg_2244 <= grp_fu_1715_p3;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp_i_i192_reg_1791 <= cmp_i_i192_fu_489_p2;
        cmp_i_i244_reg_1796 <= cmp_i_i244_fu_495_p2;
        empty_reg_1800 <= empty_fu_513_p2;
        f0_1_reg_1805 <= f0_1_fu_521_p1;
        f0_reg_1981 <= f0_fu_837_p1;
        f11_1_reg_1865 <= {{fifo_A_in_s_dout[191:176]}};
        f11_reg_2041 <= {{fifo_B_in_s_dout[191:176]}};
        f13_1_reg_1876 <= {{fifo_A_in_s_dout[223:208]}};
        f13_reg_2052 <= {{fifo_B_in_s_dout[223:208]}};
        f15_1_reg_1887 <= {{fifo_A_in_s_dout[255:240]}};
        f15_reg_2063 <= {{fifo_B_in_s_dout[255:240]}};
        f17_1_reg_1898 <= {{fifo_A_in_s_dout[287:272]}};
        f17_reg_2074 <= {{fifo_B_in_s_dout[287:272]}};
        f19_1_reg_1909 <= {{fifo_A_in_s_dout[319:304]}};
        f19_reg_2085 <= {{fifo_B_in_s_dout[319:304]}};
        f21_1_reg_1920 <= {{fifo_A_in_s_dout[351:336]}};
        f21_reg_2096 <= {{fifo_B_in_s_dout[351:336]}};
        f23_1_reg_1931 <= {{fifo_A_in_s_dout[383:368]}};
        f23_reg_2107 <= {{fifo_B_in_s_dout[383:368]}};
        f25_1_reg_1942 <= {{fifo_A_in_s_dout[415:400]}};
        f25_reg_2118 <= {{fifo_B_in_s_dout[415:400]}};
        f27_1_reg_1953 <= {{fifo_A_in_s_dout[447:432]}};
        f27_reg_2129 <= {{fifo_B_in_s_dout[447:432]}};
        f29_1_reg_1964 <= {{fifo_A_in_s_dout[479:464]}};
        f29_reg_2140 <= {{fifo_B_in_s_dout[479:464]}};
        f30_1_reg_1970 <= {{fifo_A_in_s_dout[495:480]}};
        f30_reg_2146 <= {{fifo_B_in_s_dout[495:480]}};
        f3_1_reg_1821 <= {{fifo_A_in_s_dout[63:48]}};
        f3_reg_1997 <= {{fifo_B_in_s_dout[63:48]}};
        f5_1_reg_1832 <= {{fifo_A_in_s_dout[95:80]}};
        f5_reg_2008 <= {{fifo_B_in_s_dout[95:80]}};
        f7_1_reg_1843 <= {{fifo_A_in_s_dout[127:112]}};
        f7_reg_2019 <= {{fifo_B_in_s_dout[127:112]}};
        f9_1_reg_1854 <= {{fifo_A_in_s_dout[159:144]}};
        f9_reg_2030 <= {{fifo_B_in_s_dout[159:144]}};
        icmp_ln268_reg_1783 <= icmp_ln268_fu_359_p2;
    end
end
always @ (*) begin
    if (((icmp_ln266_fu_353_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten12_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten12_load = indvar_flatten12_fu_218;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_210;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_in_s_blk_n = fifo_A_in_s_empty_n;
    end else begin
        fifo_A_in_s_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_in_s_read = 1'b1;
    end else begin
        fifo_A_in_s_read = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_out_blk_n = fifo_A_out_full_n;
    end else begin
        fifo_A_out_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_out_write = 1'b1;
    end else begin
        fifo_A_out_write = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_in_s_blk_n = fifo_B_in_s_empty_n;
    end else begin
        fifo_B_in_s_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_in_s_read = 1'b1;
    end else begin
        fifo_B_in_s_read = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_out_blk_n = fifo_B_out_full_n;
    end else begin
        fifo_B_out_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_out_write = 1'b1;
    end else begin
        fifo_B_out_write = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (cmp_i_i244_reg_1796_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        fifo_C_drain_out_blk_n = fifo_C_drain_out_full_n;
    end else begin
        fifo_C_drain_out_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i244_reg_1796_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        fifo_C_drain_out_write = 1'b1;
    end else begin
        fifo_C_drain_out_write = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1601_ce = 1'b1;
    end else begin
        grp_fu_1601_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1609_ce = 1'b1;
    end else begin
        grp_fu_1609_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1617_ce = 1'b1;
    end else begin
        grp_fu_1617_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1625_ce = 1'b1;
    end else begin
        grp_fu_1625_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1633_ce = 1'b1;
    end else begin
        grp_fu_1633_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1640_ce = 1'b1;
    end else begin
        grp_fu_1640_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1647_ce = 1'b1;
    end else begin
        grp_fu_1647_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1654_ce = 1'b1;
    end else begin
        grp_fu_1654_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1662_ce = 1'b1;
    end else begin
        grp_fu_1662_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1669_ce = 1'b1;
    end else begin
        grp_fu_1669_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1676_ce = 1'b1;
    end else begin
        grp_fu_1676_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1684_ce = 1'b1;
    end else begin
        grp_fu_1684_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1692_ce = 1'b1;
    end else begin
        grp_fu_1692_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1700_ce = 1'b1;
    end else begin
        grp_fu_1700_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1708_ce = 1'b1;
    end else begin
        grp_fu_1708_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1715_ce = 1'b1;
    end else begin
        grp_fu_1715_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1722_ce = 1'b1;
    end else begin
        grp_fu_1722_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        local_C_ce1 = 1'b1;
    end else begin
        local_C_ce1 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        local_C_we1 = 1'b1;
    end else begin
        local_C_we1 = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln266_fu_347_p2 = (ap_sig_allocacmp_indvar_flatten12_load + 8'd1);
assign add_ln268_1_fu_365_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);
assign add_ln268_fu_458_p2 = (select_ln266_fu_427_p3 + 4'd1);
assign add_ln270_fu_1305_p2 = (select_ln268_fu_469_p3 + 4'd1);
assign add_ln297_12_fu_1522_p0 = grp_fu_1684_p3;
assign add_ln297_12_fu_1522_p1 = grp_fu_1676_p3;
assign add_ln297_12_fu_1522_p2 = ($signed(add_ln297_12_fu_1522_p0) + $signed(add_ln297_12_fu_1522_p1));
assign add_ln297_13_fu_1547_p2 = (add_ln297_12_reg_2269 + add_ln297_9_fu_1543_p2);
assign add_ln297_14_fu_1575_p2 = (add_ln297_13_reg_2309_pp0_iter6_reg + add_ln297_6_reg_2304_pp0_iter6_reg);
assign add_ln297_17_fu_1526_p0 = grp_fu_1609_p3;
assign add_ln297_17_fu_1526_p1 = grp_fu_1601_p3;
assign add_ln297_17_fu_1526_p2 = ($signed(add_ln297_17_fu_1526_p0) + $signed(add_ln297_17_fu_1526_p1));
assign add_ln297_20_fu_1530_p0 = grp_fu_1625_p3;
assign add_ln297_20_fu_1530_p1 = grp_fu_1617_p3;
assign add_ln297_20_fu_1530_p2 = ($signed(add_ln297_20_fu_1530_p0) + $signed(add_ln297_20_fu_1530_p1));
assign add_ln297_21_fu_1556_p2 = (add_ln297_20_reg_2279_pp0_iter5_reg + add_ln297_17_reg_2274_pp0_iter5_reg);
assign add_ln297_24_fu_1560_p2 = ($signed(add_ln297_23_reg_2289_pp0_iter5_reg) + $signed(add_ln297_22_reg_2284_pp0_iter5_reg));
assign add_ln297_28_fu_1552_p0 = grp_fu_1722_p3;
assign add_ln297_28_fu_1552_p2 = ($signed(add_ln297_28_fu_1552_p0) + $signed(add_ln297_25_reg_2294));
assign add_ln297_29_fu_1564_p2 = (add_ln297_28_reg_2314 + add_ln297_24_fu_1560_p2);
assign add_ln297_2_fu_1534_p2 = ($signed(add_ln297_1_reg_2249) + $signed(add_ln297_reg_2244));
assign add_ln297_30_fu_1569_p2 = (add_ln297_29_fu_1564_p2 + add_ln297_21_fu_1556_p2);
assign add_ln297_31_fu_1579_p2 = (add_ln297_30_reg_2319 + add_ln297_14_fu_1575_p2);
assign add_ln297_5_fu_1518_p0 = grp_fu_1700_p3;
assign add_ln297_5_fu_1518_p1 = grp_fu_1692_p3;
assign add_ln297_5_fu_1518_p2 = ($signed(add_ln297_5_fu_1518_p0) + $signed(add_ln297_5_fu_1518_p1));
assign add_ln297_6_fu_1538_p2 = (add_ln297_5_reg_2254 + add_ln297_2_fu_1534_p2);
assign add_ln297_9_fu_1543_p2 = ($signed(add_ln297_8_reg_2264) + $signed(add_ln297_7_reg_2259));
assign and_ln266_fu_445_p2 = (xor_ln266_fu_434_p2 & icmp_ln270_fu_439_p2);
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage0_iter7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end
always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage0_iter7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end
always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage0_iter7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end
always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((fifo_A_out_full_n == 1'b0) | (fifo_B_out_full_n == 1'b0) | (fifo_B_in_s_empty_n == 1'b0) | (fifo_A_in_s_empty_n == 1'b0));
end
always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = ((cmp_i_i244_reg_1796_pp0_iter6_reg == 1'd1) & (fifo_C_drain_out_full_n == 1'b0));
end
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_enable_reg_pp0_iter0 = ap_start_int;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
assign c5_2_fu_421_p2 = (c5_fu_214 + 2'd1);
assign cmp_i_i192_fu_489_p2 = ((select_ln266_1_fu_451_p3 == 2'd0) ? 1'b1 : 1'b0);
assign cmp_i_i244_fu_495_p2 = ((select_ln266_1_fu_451_p3 == 2'd1) ? 1'b1 : 1'b0);
assign empty_fu_513_p2 = (tmp_fu_505_p3 + select_ln268_1_cast_fu_501_p1);
assign f0_1_fu_521_p1 = fifo_A_in_s_dout[15:0];
assign f0_fu_837_p1 = fifo_B_in_s_dout[15:0];
assign fifo_A_out_din = trunc_ln151_1_fu_1292_p1;
assign fifo_B_out_din = trunc_ln151_fu_1279_p1;
assign fifo_C_drain_out_din = add_ln297_31_fu_1579_p2;
assign grp_fu_1601_p0 = {{fifo_B_in_s_dout[31:16]}};
assign grp_fu_1601_p1 = {{fifo_A_in_s_dout[31:16]}};
assign grp_fu_1609_p0 = {{fifo_B_in_s_dout[47:32]}};
assign grp_fu_1609_p1 = {{fifo_A_in_s_dout[47:32]}};
assign grp_fu_1617_p0 = {{fifo_B_in_s_dout[79:64]}};
assign grp_fu_1617_p1 = {{fifo_A_in_s_dout[79:64]}};
assign grp_fu_1625_p0 = {{fifo_B_in_s_dout[111:96]}};
assign grp_fu_1625_p1 = {{fifo_A_in_s_dout[111:96]}};
assign grp_fu_1633_p0 = {{fifo_B_in_s_dout[143:128]}};
assign grp_fu_1633_p1 = {{fifo_A_in_s_dout[143:128]}};
assign grp_fu_1640_p0 = {{fifo_B_in_s_dout[175:160]}};
assign grp_fu_1640_p1 = {{fifo_A_in_s_dout[175:160]}};
assign grp_fu_1647_p0 = {{fifo_B_in_s_dout[207:192]}};
assign grp_fu_1647_p1 = {{fifo_A_in_s_dout[207:192]}};
assign grp_fu_1654_p0 = {{fifo_B_in_s_dout[239:224]}};
assign grp_fu_1654_p1 = {{fifo_A_in_s_dout[239:224]}};
assign grp_fu_1654_p2 = ((cmp_i_i192_reg_1791_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : local_C_q0);
assign grp_fu_1662_p0 = {{fifo_B_in_s_dout[271:256]}};
assign grp_fu_1662_p1 = {{fifo_A_in_s_dout[271:256]}};
assign grp_fu_1669_p0 = {{fifo_B_in_s_dout[303:288]}};
assign grp_fu_1669_p1 = {{fifo_A_in_s_dout[303:288]}};
assign grp_fu_1676_p0 = {{fifo_B_in_s_dout[335:320]}};
assign grp_fu_1676_p1 = {{fifo_A_in_s_dout[335:320]}};
assign grp_fu_1684_p0 = {{fifo_B_in_s_dout[367:352]}};
assign grp_fu_1684_p1 = {{fifo_A_in_s_dout[367:352]}};
assign grp_fu_1692_p0 = {{fifo_B_in_s_dout[399:384]}};
assign grp_fu_1692_p1 = {{fifo_A_in_s_dout[399:384]}};
assign grp_fu_1700_p0 = {{fifo_B_in_s_dout[431:416]}};
assign grp_fu_1700_p1 = {{fifo_A_in_s_dout[431:416]}};
assign grp_fu_1708_p0 = {{fifo_B_in_s_dout[463:448]}};
assign grp_fu_1708_p1 = {{fifo_A_in_s_dout[463:448]}};
assign grp_fu_1715_p0 = {{fifo_B_in_s_dout[511:496]}};
assign grp_fu_1715_p1 = {{fifo_A_in_s_dout[511:496]}};
assign icmp_ln266_fu_353_p2 = ((ap_sig_allocacmp_indvar_flatten12_load == 8'd128) ? 1'b1 : 1'b0);
assign icmp_ln268_fu_359_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd64) ? 1'b1 : 1'b0);
assign icmp_ln270_fu_439_p2 = ((c7_fu_202 == 4'd8) ? 1'b1 : 1'b0);
assign local_C_address0 = p_cast27_fu_1347_p1;
assign or_ln268_fu_464_p2 = (icmp_ln268_reg_1783 | and_ln266_fu_445_p2);
assign p_cast27_fu_1347_p1 = empty_reg_1800;
assign select_ln266_1_fu_451_p3 = ((icmp_ln268_reg_1783[0:0] == 1'b1) ? c5_2_fu_421_p2 : c5_fu_214);
assign select_ln266_fu_427_p3 = ((icmp_ln268_reg_1783[0:0] == 1'b1) ? 4'd0 : c6_fu_206);
assign select_ln268_1_cast_fu_501_p1 = select_ln268_1_fu_481_p3;
assign select_ln268_1_fu_481_p3 = ((and_ln266_fu_445_p2[0:0] == 1'b1) ? add_ln268_fu_458_p2 : select_ln266_fu_427_p3);
assign select_ln268_2_fu_371_p3 = ((icmp_ln268_fu_359_p2[0:0] == 1'b1) ? 8'd1 : add_ln268_1_fu_365_p2);
assign select_ln268_fu_469_p3 = ((or_ln268_fu_464_p2[0:0] == 1'b1) ? 4'd0 : c7_fu_202);
assign tmp_fu_505_p3 = {{trunc_ln268_fu_477_p1}, {3'd0}};
assign trunc_ln151_1_fu_1292_p1 = fifo_A_in_s_dout[511:0];
assign trunc_ln151_fu_1279_p1 = fifo_B_in_s_dout[511:0];
assign trunc_ln268_fu_477_p1 = select_ln268_fu_469_p3[2:0];
assign xor_ln266_fu_434_p2 = (icmp_ln268_reg_1783 ^ 1'd1);
endmodule