`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module A_IO_L2_in_A_IO_L2_in_intra_trans_Pipeline_VITIS_LOOP_48_1_VITIS_LOOP_50_2_VITIS_LOOP_52_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_local_out_din,
        fifo_A_local_out_full_n,
        fifo_A_local_out_write,
        local_A_0_address0,
        local_A_0_ce0,
        local_A_0_q0,
        local_A_1_address0,
        local_A_1_ce0,
        local_A_1_q0,
        local_A_2_address0,
        local_A_2_ce0,
        local_A_2_q0,
        local_A_3_address0,
        local_A_3_ce0,
        local_A_3_q0,
        local_A_4_address0,
        local_A_4_ce0,
        local_A_4_q0,
        local_A_5_address0,
        local_A_5_ce0,
        local_A_5_q0,
        local_A_6_address0,
        local_A_6_ce0,
        local_A_6_q0,
        local_A_7_address0,
        local_A_7_ce0,
        local_A_7_q0,
        local_A_8_address0,
        local_A_8_ce0,
        local_A_8_q0,
        local_A_9_address0,
        local_A_9_ce0,
        local_A_9_q0,
        local_A_10_address0,
        local_A_10_ce0,
        local_A_10_q0,
        local_A_11_address0,
        local_A_11_ce0,
        local_A_11_q0,
        local_A_12_address0,
        local_A_12_ce0,
        local_A_12_q0,
        local_A_13_address0,
        local_A_13_ce0,
        local_A_13_q0,
        local_A_14_address0,
        local_A_14_ce0,
        local_A_14_q0,
        local_A_15_address0,
        local_A_15_ce0,
        local_A_15_q0,
        local_A_16_address0,
        local_A_16_ce0,
        local_A_16_q0,
        local_A_17_address0,
        local_A_17_ce0,
        local_A_17_q0,
        local_A_18_address0,
        local_A_18_ce0,
        local_A_18_q0,
        local_A_19_address0,
        local_A_19_ce0,
        local_A_19_q0,
        local_A_20_address0,
        local_A_20_ce0,
        local_A_20_q0,
        local_A_21_address0,
        local_A_21_ce0,
        local_A_21_q0,
        local_A_22_address0,
        local_A_22_ce0,
        local_A_22_q0,
        local_A_23_address0,
        local_A_23_ce0,
        local_A_23_q0,
        local_A_24_address0,
        local_A_24_ce0,
        local_A_24_q0,
        local_A_25_address0,
        local_A_25_ce0,
        local_A_25_q0,
        local_A_26_address0,
        local_A_26_ce0,
        local_A_26_q0,
        local_A_27_address0,
        local_A_27_ce0,
        local_A_27_q0,
        local_A_28_address0,
        local_A_28_ce0,
        local_A_28_q0,
        local_A_29_address0,
        local_A_29_ce0,
        local_A_29_q0,
        local_A_30_address0,
        local_A_30_ce0,
        local_A_30_q0,
        local_A_31_address0,
        local_A_31_ce0,
        local_A_31_q0
);
parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [512:0] fifo_A_local_out_din;
input   fifo_A_local_out_full_n;
output   fifo_A_local_out_write;
output  [3:0] local_A_0_address0;
output   local_A_0_ce0;
input  [15:0] local_A_0_q0;
output  [3:0] local_A_1_address0;
output   local_A_1_ce0;
input  [15:0] local_A_1_q0;
output  [3:0] local_A_2_address0;
output   local_A_2_ce0;
input  [15:0] local_A_2_q0;
output  [3:0] local_A_3_address0;
output   local_A_3_ce0;
input  [15:0] local_A_3_q0;
output  [3:0] local_A_4_address0;
output   local_A_4_ce0;
input  [15:0] local_A_4_q0;
output  [3:0] local_A_5_address0;
output   local_A_5_ce0;
input  [15:0] local_A_5_q0;
output  [3:0] local_A_6_address0;
output   local_A_6_ce0;
input  [15:0] local_A_6_q0;
output  [3:0] local_A_7_address0;
output   local_A_7_ce0;
input  [15:0] local_A_7_q0;
output  [3:0] local_A_8_address0;
output   local_A_8_ce0;
input  [15:0] local_A_8_q0;
output  [3:0] local_A_9_address0;
output   local_A_9_ce0;
input  [15:0] local_A_9_q0;
output  [3:0] local_A_10_address0;
output   local_A_10_ce0;
input  [15:0] local_A_10_q0;
output  [3:0] local_A_11_address0;
output   local_A_11_ce0;
input  [15:0] local_A_11_q0;
output  [3:0] local_A_12_address0;
output   local_A_12_ce0;
input  [15:0] local_A_12_q0;
output  [3:0] local_A_13_address0;
output   local_A_13_ce0;
input  [15:0] local_A_13_q0;
output  [3:0] local_A_14_address0;
output   local_A_14_ce0;
input  [15:0] local_A_14_q0;
output  [3:0] local_A_15_address0;
output   local_A_15_ce0;
input  [15:0] local_A_15_q0;
output  [3:0] local_A_16_address0;
output   local_A_16_ce0;
input  [15:0] local_A_16_q0;
output  [3:0] local_A_17_address0;
output   local_A_17_ce0;
input  [15:0] local_A_17_q0;
output  [3:0] local_A_18_address0;
output   local_A_18_ce0;
input  [15:0] local_A_18_q0;
output  [3:0] local_A_19_address0;
output   local_A_19_ce0;
input  [15:0] local_A_19_q0;
output  [3:0] local_A_20_address0;
output   local_A_20_ce0;
input  [15:0] local_A_20_q0;
output  [3:0] local_A_21_address0;
output   local_A_21_ce0;
input  [15:0] local_A_21_q0;
output  [3:0] local_A_22_address0;
output   local_A_22_ce0;
input  [15:0] local_A_22_q0;
output  [3:0] local_A_23_address0;
output   local_A_23_ce0;
input  [15:0] local_A_23_q0;
output  [3:0] local_A_24_address0;
output   local_A_24_ce0;
input  [15:0] local_A_24_q0;
output  [3:0] local_A_25_address0;
output   local_A_25_ce0;
input  [15:0] local_A_25_q0;
output  [3:0] local_A_26_address0;
output   local_A_26_ce0;
input  [15:0] local_A_26_q0;
output  [3:0] local_A_27_address0;
output   local_A_27_ce0;
input  [15:0] local_A_27_q0;
output  [3:0] local_A_28_address0;
output   local_A_28_ce0;
input  [15:0] local_A_28_q0;
output  [3:0] local_A_29_address0;
output   local_A_29_ce0;
input  [15:0] local_A_29_q0;
output  [3:0] local_A_30_address0;
output   local_A_30_ce0;
input  [15:0] local_A_30_q0;
output  [3:0] local_A_31_address0;
output   local_A_31_ce0;
input  [15:0] local_A_31_q0;
reg ap_idle;
reg fifo_A_local_out_write;
reg local_A_0_ce0;
reg local_A_1_ce0;
reg local_A_2_ce0;
reg local_A_3_ce0;
reg local_A_4_ce0;
reg local_A_5_ce0;
reg local_A_6_ce0;
reg local_A_7_ce0;
reg local_A_8_ce0;
reg local_A_9_ce0;
reg local_A_10_ce0;
reg local_A_11_ce0;
reg local_A_12_ce0;
reg local_A_13_ce0;
reg local_A_14_ce0;
reg local_A_15_ce0;
reg local_A_16_ce0;
reg local_A_17_ce0;
reg local_A_18_ce0;
reg local_A_19_ce0;
reg local_A_20_ce0;
reg local_A_21_ce0;
reg local_A_22_ce0;
reg local_A_23_ce0;
reg local_A_24_ce0;
reg local_A_25_ce0;
reg local_A_26_ce0;
reg local_A_27_ce0;
reg local_A_28_ce0;
reg local_A_29_ce0;
reg local_A_30_ce0;
reg local_A_31_ce0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln48_fu_621_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_A_local_out_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln50_fu_633_p2;
reg   [0:0] icmp_ln50_reg_1063;
wire   [63:0] zext_ln151_1_fu_748_p1;
reg   [3:0] c7_fu_122;
wire   [3:0] add_ln52_fu_912_p2;
wire    ap_loop_init;
reg   [7:0] indvar_flatten_fu_126;
wire   [7:0] select_ln50_1_fu_645_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] c5_fu_130;
wire   [1:0] select_ln48_fu_712_p3;
reg   [7:0] indvar_flatten12_fu_134;
wire   [7:0] add_ln48_1_fu_615_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten12_load;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] add_ln50_fu_639_p2;
wire   [0:0] icmp_ln52_fu_700_p2;
wire   [0:0] xor_ln48_fu_695_p2;
wire   [1:0] add_ln48_fu_689_p2;
wire   [0:0] and_ln48_fu_706_p2;
wire   [0:0] or_ln50_fu_719_p2;
wire   [3:0] select_ln50_fu_724_p3;
wire   [3:0] shl_ln151_fu_736_p2;
wire   [3:0] zext_ln151_fu_732_p1;
wire   [3:0] add_ln151_fu_742_p2;
wire   [511:0] or_ln151_s_fu_942_p33;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 c7_fu_122 = 4'd0;
#0 indvar_flatten_fu_126 = 8'd0;
#0 c5_fu_130 = 2'd0;
#0 indvar_flatten12_fu_134 = 8'd0;
#0 ap_done_reg = 1'b0;
end
A_IO_L2_in_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_fu_130 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c5_fu_130 <= select_ln48_fu_712_p3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c7_fu_122 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c7_fu_122 <= add_ln52_fu_912_p2;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln48_fu_621_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten12_fu_134 <= add_ln48_1_fu_615_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten12_fu_134 <= 8'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln48_fu_621_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_126 <= select_ln50_1_fu_645_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_126 <= 8'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln50_reg_1063 <= icmp_ln50_fu_633_p2;
    end
end
always @ (*) begin
    if (((icmp_ln48_fu_621_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten12_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten12_load = indvar_flatten12_fu_134;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_126;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_A_local_out_blk_n = fifo_A_local_out_full_n;
    end else begin
        fifo_A_local_out_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_A_local_out_write = 1'b1;
    end else begin
        fifo_A_local_out_write = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_0_ce0 = 1'b1;
    end else begin
        local_A_0_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_10_ce0 = 1'b1;
    end else begin
        local_A_10_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_11_ce0 = 1'b1;
    end else begin
        local_A_11_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_12_ce0 = 1'b1;
    end else begin
        local_A_12_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_13_ce0 = 1'b1;
    end else begin
        local_A_13_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_14_ce0 = 1'b1;
    end else begin
        local_A_14_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_15_ce0 = 1'b1;
    end else begin
        local_A_15_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_16_ce0 = 1'b1;
    end else begin
        local_A_16_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_17_ce0 = 1'b1;
    end else begin
        local_A_17_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_18_ce0 = 1'b1;
    end else begin
        local_A_18_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_19_ce0 = 1'b1;
    end else begin
        local_A_19_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_1_ce0 = 1'b1;
    end else begin
        local_A_1_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_20_ce0 = 1'b1;
    end else begin
        local_A_20_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_21_ce0 = 1'b1;
    end else begin
        local_A_21_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_22_ce0 = 1'b1;
    end else begin
        local_A_22_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_23_ce0 = 1'b1;
    end else begin
        local_A_23_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_24_ce0 = 1'b1;
    end else begin
        local_A_24_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_25_ce0 = 1'b1;
    end else begin
        local_A_25_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_26_ce0 = 1'b1;
    end else begin
        local_A_26_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_27_ce0 = 1'b1;
    end else begin
        local_A_27_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_28_ce0 = 1'b1;
    end else begin
        local_A_28_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_29_ce0 = 1'b1;
    end else begin
        local_A_29_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_2_ce0 = 1'b1;
    end else begin
        local_A_2_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_30_ce0 = 1'b1;
    end else begin
        local_A_30_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_31_ce0 = 1'b1;
    end else begin
        local_A_31_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_3_ce0 = 1'b1;
    end else begin
        local_A_3_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_4_ce0 = 1'b1;
    end else begin
        local_A_4_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_5_ce0 = 1'b1;
    end else begin
        local_A_5_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_6_ce0 = 1'b1;
    end else begin
        local_A_6_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_7_ce0 = 1'b1;
    end else begin
        local_A_7_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_8_ce0 = 1'b1;
    end else begin
        local_A_8_ce0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_9_ce0 = 1'b1;
    end else begin
        local_A_9_ce0 = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln151_fu_742_p2 = (shl_ln151_fu_736_p2 + zext_ln151_fu_732_p1);
assign add_ln48_1_fu_615_p2 = (ap_sig_allocacmp_indvar_flatten12_load + 8'd1);
assign add_ln48_fu_689_p2 = (c5_fu_130 + 2'd1);
assign add_ln50_fu_639_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);
assign add_ln52_fu_912_p2 = (select_ln50_fu_724_p3 + 4'd1);
assign and_ln48_fu_706_p2 = (xor_ln48_fu_695_p2 & icmp_ln52_fu_700_p2);
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2));
end
always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2));
end
always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2));
end
always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (fifo_A_local_out_full_n == 1'b0);
end
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_enable_reg_pp0_iter0 = ap_start_int;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
assign fifo_A_local_out_din = or_ln151_s_fu_942_p33;
assign icmp_ln48_fu_621_p2 = ((ap_sig_allocacmp_indvar_flatten12_load == 8'd128) ? 1'b1 : 1'b0);
assign icmp_ln50_fu_633_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd64) ? 1'b1 : 1'b0);
assign icmp_ln52_fu_700_p2 = ((c7_fu_122 == 4'd8) ? 1'b1 : 1'b0);
assign local_A_0_address0 = zext_ln151_1_fu_748_p1;
assign local_A_10_address0 = zext_ln151_1_fu_748_p1;
assign local_A_11_address0 = zext_ln151_1_fu_748_p1;
assign local_A_12_address0 = zext_ln151_1_fu_748_p1;
assign local_A_13_address0 = zext_ln151_1_fu_748_p1;
assign local_A_14_address0 = zext_ln151_1_fu_748_p1;
assign local_A_15_address0 = zext_ln151_1_fu_748_p1;
assign local_A_16_address0 = zext_ln151_1_fu_748_p1;
assign local_A_17_address0 = zext_ln151_1_fu_748_p1;
assign local_A_18_address0 = zext_ln151_1_fu_748_p1;
assign local_A_19_address0 = zext_ln151_1_fu_748_p1;
assign local_A_1_address0 = zext_ln151_1_fu_748_p1;
assign local_A_20_address0 = zext_ln151_1_fu_748_p1;
assign local_A_21_address0 = zext_ln151_1_fu_748_p1;
assign local_A_22_address0 = zext_ln151_1_fu_748_p1;
assign local_A_23_address0 = zext_ln151_1_fu_748_p1;
assign local_A_24_address0 = zext_ln151_1_fu_748_p1;
assign local_A_25_address0 = zext_ln151_1_fu_748_p1;
assign local_A_26_address0 = zext_ln151_1_fu_748_p1;
assign local_A_27_address0 = zext_ln151_1_fu_748_p1;
assign local_A_28_address0 = zext_ln151_1_fu_748_p1;
assign local_A_29_address0 = zext_ln151_1_fu_748_p1;
assign local_A_2_address0 = zext_ln151_1_fu_748_p1;
assign local_A_30_address0 = zext_ln151_1_fu_748_p1;
assign local_A_31_address0 = zext_ln151_1_fu_748_p1;
assign local_A_3_address0 = zext_ln151_1_fu_748_p1;
assign local_A_4_address0 = zext_ln151_1_fu_748_p1;
assign local_A_5_address0 = zext_ln151_1_fu_748_p1;
assign local_A_6_address0 = zext_ln151_1_fu_748_p1;
assign local_A_7_address0 = zext_ln151_1_fu_748_p1;
assign local_A_8_address0 = zext_ln151_1_fu_748_p1;
assign local_A_9_address0 = zext_ln151_1_fu_748_p1;
assign or_ln151_s_fu_942_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{local_A_31_q0}, {local_A_30_q0}}, {local_A_29_q0}}, {local_A_28_q0}}, {local_A_27_q0}}, {local_A_26_q0}}, {local_A_25_q0}}, {local_A_24_q0}}, {local_A_23_q0}}, {local_A_22_q0}}, {local_A_21_q0}}, {local_A_20_q0}}, {local_A_19_q0}}, {local_A_18_q0}}, {local_A_17_q0}}, {local_A_16_q0}}, {local_A_15_q0}}, {local_A_14_q0}}, {local_A_13_q0}}, {local_A_12_q0}}, {local_A_11_q0}}, {local_A_10_q0}}, {local_A_9_q0}}, {local_A_8_q0}}, {local_A_7_q0}}, {local_A_6_q0}}, {local_A_5_q0}}, {local_A_4_q0}}, {local_A_3_q0}}, {local_A_2_q0}}, {local_A_1_q0}}, {local_A_0_q0}};
assign or_ln50_fu_719_p2 = (icmp_ln50_reg_1063 | and_ln48_fu_706_p2);
assign select_ln48_fu_712_p3 = ((icmp_ln50_reg_1063[0:0] == 1'b1) ? add_ln48_fu_689_p2 : c5_fu_130);
assign select_ln50_1_fu_645_p3 = ((icmp_ln50_fu_633_p2[0:0] == 1'b1) ? 8'd1 : add_ln50_fu_639_p2);
assign select_ln50_fu_724_p3 = ((or_ln50_fu_719_p2[0:0] == 1'b1) ? 4'd0 : c7_fu_122);
assign shl_ln151_fu_736_p2 = select_ln50_fu_724_p3 << 4'd1;
assign xor_ln48_fu_695_p2 = (icmp_ln50_reg_1063 ^ 1'd1);
assign zext_ln151_1_fu_748_p1 = add_ln151_fu_742_p2;
assign zext_ln151_fu_732_p1 = select_ln48_fu_712_p3;
endmodule