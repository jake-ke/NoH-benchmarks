// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="A_IO_L3_in_serialize_A_IO_L3_in_serialize,hls_ip_2023_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvp1802-lsvc4072-2MP-e-S,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.430900,HLS_SYN_LAT=591,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=7940,HLS_SYN_LUT=5984,HLS_VERSION=2023_2_2}" *)

module A_IO_L3_in_serialize (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_A_AWVALID,
        m_axi_A_AWREADY,
        m_axi_A_AWADDR,
        m_axi_A_AWID,
        m_axi_A_AWLEN,
        m_axi_A_AWSIZE,
        m_axi_A_AWBURST,
        m_axi_A_AWLOCK,
        m_axi_A_AWCACHE,
        m_axi_A_AWPROT,
        m_axi_A_AWQOS,
        m_axi_A_AWREGION,
        m_axi_A_AWUSER,
        m_axi_A_WVALID,
        m_axi_A_WREADY,
        m_axi_A_WDATA,
        m_axi_A_WSTRB,
        m_axi_A_WLAST,
        m_axi_A_WID,
        m_axi_A_WUSER,
        m_axi_A_ARVALID,
        m_axi_A_ARREADY,
        m_axi_A_ARADDR,
        m_axi_A_ARID,
        m_axi_A_ARLEN,
        m_axi_A_ARSIZE,
        m_axi_A_ARBURST,
        m_axi_A_ARLOCK,
        m_axi_A_ARCACHE,
        m_axi_A_ARPROT,
        m_axi_A_ARQOS,
        m_axi_A_ARREGION,
        m_axi_A_ARUSER,
        m_axi_A_RVALID,
        m_axi_A_RREADY,
        m_axi_A_RDATA,
        m_axi_A_RLAST,
        m_axi_A_RID,
        m_axi_A_RUSER,
        m_axi_A_RRESP,
        m_axi_A_BVALID,
        m_axi_A_BREADY,
        m_axi_A_BRESP,
        m_axi_A_BID,
        m_axi_A_BUSER,
        A_offset,
        fifo_A_local_out_din,
        fifo_A_local_out_full_n,
        fifo_A_local_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;
parameter    C_M_AXI_A_ID_WIDTH = 1;
parameter    C_M_AXI_A_ADDR_WIDTH = 64;
parameter    C_M_AXI_A_DATA_WIDTH = 512;
parameter    C_M_AXI_A_AWUSER_WIDTH = 1;
parameter    C_M_AXI_A_ARUSER_WIDTH = 1;
parameter    C_M_AXI_A_WUSER_WIDTH = 1;
parameter    C_M_AXI_A_RUSER_WIDTH = 1;
parameter    C_M_AXI_A_BUSER_WIDTH = 1;
parameter    C_M_AXI_A_USER_VALUE = 0;
parameter    C_M_AXI_A_PROT_VALUE = 0;
parameter    C_M_AXI_A_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_M_AXI_A_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_A_AWVALID;
input   m_axi_A_AWREADY;
output  [C_M_AXI_A_ADDR_WIDTH - 1:0] m_axi_A_AWADDR;
output  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_AWID;
output  [7:0] m_axi_A_AWLEN;
output  [2:0] m_axi_A_AWSIZE;
output  [1:0] m_axi_A_AWBURST;
output  [1:0] m_axi_A_AWLOCK;
output  [3:0] m_axi_A_AWCACHE;
output  [2:0] m_axi_A_AWPROT;
output  [3:0] m_axi_A_AWQOS;
output  [3:0] m_axi_A_AWREGION;
output  [C_M_AXI_A_AWUSER_WIDTH - 1:0] m_axi_A_AWUSER;
output   m_axi_A_WVALID;
input   m_axi_A_WREADY;
output  [C_M_AXI_A_DATA_WIDTH - 1:0] m_axi_A_WDATA;
output  [C_M_AXI_A_WSTRB_WIDTH - 1:0] m_axi_A_WSTRB;
output   m_axi_A_WLAST;
output  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_WID;
output  [C_M_AXI_A_WUSER_WIDTH - 1:0] m_axi_A_WUSER;
output   m_axi_A_ARVALID;
input   m_axi_A_ARREADY;
output  [C_M_AXI_A_ADDR_WIDTH - 1:0] m_axi_A_ARADDR;
output  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_ARID;
output  [7:0] m_axi_A_ARLEN;
output  [2:0] m_axi_A_ARSIZE;
output  [1:0] m_axi_A_ARBURST;
output  [1:0] m_axi_A_ARLOCK;
output  [3:0] m_axi_A_ARCACHE;
output  [2:0] m_axi_A_ARPROT;
output  [3:0] m_axi_A_ARQOS;
output  [3:0] m_axi_A_ARREGION;
output  [C_M_AXI_A_ARUSER_WIDTH - 1:0] m_axi_A_ARUSER;
input   m_axi_A_RVALID;
output   m_axi_A_RREADY;
input  [C_M_AXI_A_DATA_WIDTH - 1:0] m_axi_A_RDATA;
input   m_axi_A_RLAST;
input  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_RID;
input  [C_M_AXI_A_RUSER_WIDTH - 1:0] m_axi_A_RUSER;
input  [1:0] m_axi_A_RRESP;
input   m_axi_A_BVALID;
output   m_axi_A_BREADY;
input  [1:0] m_axi_A_BRESP;
input  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_BID;
input  [C_M_AXI_A_BUSER_WIDTH - 1:0] m_axi_A_BUSER;
input  [63:0] A_offset;
output  [512:0] fifo_A_local_out_din;
input   fifo_A_local_out_full_n;
output   fifo_A_local_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_local_out_write;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] trunc_ln45_fu_70_p1;
reg   [5:0] trunc_ln45_reg_79;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_done;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_idle;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_ready;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWVALID;
wire   [63:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWADDR;
wire   [0:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWID;
wire   [31:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWLEN;
wire   [2:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWSIZE;
wire   [1:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWBURST;
wire   [1:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWLOCK;
wire   [3:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWCACHE;
wire   [2:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWPROT;
wire   [3:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWQOS;
wire   [3:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWREGION;
wire   [0:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWUSER;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WVALID;
wire   [511:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WDATA;
wire   [63:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WSTRB;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WLAST;
wire   [0:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WID;
wire   [0:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WUSER;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARVALID;
wire   [63:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARADDR;
wire   [0:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARID;
wire   [31:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARLEN;
wire   [2:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARSIZE;
wire   [1:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARBURST;
wire   [1:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARLOCK;
wire   [3:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARCACHE;
wire   [2:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARPROT;
wire   [3:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARQOS;
wire   [3:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARREGION;
wire   [0:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARUSER;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_RREADY;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_BREADY;
wire   [512:0] grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_fifo_A_local_out_din;
wire    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_fifo_A_local_out_write;
wire    A_AWREADY;
wire    A_WREADY;
reg    A_ARVALID;
wire    A_ARREADY;
wire    A_RVALID;
reg    A_RREADY;
wire   [511:0] A_RDATA;
wire   [8:0] A_RFIFONUM;
wire    A_BVALID;
reg    grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start_reg = 1'b0;
end

A_IO_L3_in_serialize_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1 grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start),
    .ap_done(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_done),
    .ap_idle(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_idle),
    .ap_ready(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_ready),
    .m_axi_A_AWVALID(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWVALID),
    .m_axi_A_AWREADY(1'b0),
    .m_axi_A_AWADDR(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWADDR),
    .m_axi_A_AWID(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWID),
    .m_axi_A_AWLEN(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWLEN),
    .m_axi_A_AWSIZE(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWSIZE),
    .m_axi_A_AWBURST(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWBURST),
    .m_axi_A_AWLOCK(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWLOCK),
    .m_axi_A_AWCACHE(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWCACHE),
    .m_axi_A_AWPROT(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWPROT),
    .m_axi_A_AWQOS(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWQOS),
    .m_axi_A_AWREGION(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWREGION),
    .m_axi_A_AWUSER(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_AWUSER),
    .m_axi_A_WVALID(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WVALID),
    .m_axi_A_WREADY(1'b0),
    .m_axi_A_WDATA(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WDATA),
    .m_axi_A_WSTRB(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WSTRB),
    .m_axi_A_WLAST(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WLAST),
    .m_axi_A_WID(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WID),
    .m_axi_A_WUSER(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_WUSER),
    .m_axi_A_ARVALID(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARVALID),
    .m_axi_A_ARREADY(A_ARREADY),
    .m_axi_A_ARADDR(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARADDR),
    .m_axi_A_ARID(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARID),
    .m_axi_A_ARLEN(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARLEN),
    .m_axi_A_ARSIZE(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARSIZE),
    .m_axi_A_ARBURST(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARBURST),
    .m_axi_A_ARLOCK(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARLOCK),
    .m_axi_A_ARCACHE(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARCACHE),
    .m_axi_A_ARPROT(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARPROT),
    .m_axi_A_ARQOS(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARQOS),
    .m_axi_A_ARREGION(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARREGION),
    .m_axi_A_ARUSER(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARUSER),
    .m_axi_A_RVALID(A_RVALID),
    .m_axi_A_RREADY(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_RREADY),
    .m_axi_A_RDATA(A_RDATA),
    .m_axi_A_RLAST(1'b0),
    .m_axi_A_RID(1'd0),
    .m_axi_A_RFIFONUM(A_RFIFONUM),
    .m_axi_A_RUSER(1'd0),
    .m_axi_A_RRESP(2'd0),
    .m_axi_A_BVALID(1'b0),
    .m_axi_A_BREADY(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_BREADY),
    .m_axi_A_BRESP(2'd0),
    .m_axi_A_BID(1'd0),
    .m_axi_A_BUSER(1'd0),
    .fifo_A_local_out_din(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_fifo_A_local_out_din),
    .fifo_A_local_out_full_n(fifo_A_local_out_full_n),
    .fifo_A_local_out_write(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_fifo_A_local_out_write),
    .empty(trunc_ln45_reg_79),
    .A_offset(A_offset)
);

A_IO_L3_in_serialize_A_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_A_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_A_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_A_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_A_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_A_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_A_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_A_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_A_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_A_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_A_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_A_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
A_m_axi_U(
    .AWVALID(m_axi_A_AWVALID),
    .AWREADY(m_axi_A_AWREADY),
    .AWADDR(m_axi_A_AWADDR),
    .AWID(m_axi_A_AWID),
    .AWLEN(m_axi_A_AWLEN),
    .AWSIZE(m_axi_A_AWSIZE),
    .AWBURST(m_axi_A_AWBURST),
    .AWLOCK(m_axi_A_AWLOCK),
    .AWCACHE(m_axi_A_AWCACHE),
    .AWPROT(m_axi_A_AWPROT),
    .AWQOS(m_axi_A_AWQOS),
    .AWREGION(m_axi_A_AWREGION),
    .AWUSER(m_axi_A_AWUSER),
    .WVALID(m_axi_A_WVALID),
    .WREADY(m_axi_A_WREADY),
    .WDATA(m_axi_A_WDATA),
    .WSTRB(m_axi_A_WSTRB),
    .WLAST(m_axi_A_WLAST),
    .WID(m_axi_A_WID),
    .WUSER(m_axi_A_WUSER),
    .ARVALID(m_axi_A_ARVALID),
    .ARREADY(m_axi_A_ARREADY),
    .ARADDR(m_axi_A_ARADDR),
    .ARID(m_axi_A_ARID),
    .ARLEN(m_axi_A_ARLEN),
    .ARSIZE(m_axi_A_ARSIZE),
    .ARBURST(m_axi_A_ARBURST),
    .ARLOCK(m_axi_A_ARLOCK),
    .ARCACHE(m_axi_A_ARCACHE),
    .ARPROT(m_axi_A_ARPROT),
    .ARQOS(m_axi_A_ARQOS),
    .ARREGION(m_axi_A_ARREGION),
    .ARUSER(m_axi_A_ARUSER),
    .RVALID(m_axi_A_RVALID),
    .RREADY(m_axi_A_RREADY),
    .RDATA(m_axi_A_RDATA),
    .RLAST(m_axi_A_RLAST),
    .RID(m_axi_A_RID),
    .RUSER(m_axi_A_RUSER),
    .RRESP(m_axi_A_RRESP),
    .BVALID(m_axi_A_BVALID),
    .BREADY(m_axi_A_BREADY),
    .BRESP(m_axi_A_BRESP),
    .BID(m_axi_A_BID),
    .BUSER(m_axi_A_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(A_ARVALID),
    .I_ARREADY(A_ARREADY),
    .I_ARADDR(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARADDR),
    .I_ARLEN(grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARLEN),
    .I_RVALID(A_RVALID),
    .I_RREADY(A_RREADY),
    .I_RDATA(A_RDATA),
    .I_RFIFONUM(A_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(A_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(A_WREADY),
    .I_WDATA(512'd0),
    .I_WSTRB(64'd0),
    .I_BVALID(A_BVALID),
    .I_BREADY(1'b0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start_reg <= 1'b1;
        end else if ((grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_ready == 1'b1)) begin
            grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln45_reg_79 <= trunc_ln45_fu_70_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        A_ARVALID = grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_ARVALID;
    end else begin
        A_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        A_RREADY = grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_m_axi_A_RREADY;
    end else begin
        A_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_A_local_out_write = grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_fifo_A_local_out_write;
    end else begin
        fifo_A_local_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign fifo_A_local_out_din = grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_fifo_A_local_out_din;

assign grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start = grp_A_IO_L3_in_serialize_Pipeline_VITIS_LOOP_45_1_fu_58_ap_start_reg;

assign trunc_ln45_fu_70_p1 = A_offset[5:0];

endmodule //A_IO_L3_in_serialize
