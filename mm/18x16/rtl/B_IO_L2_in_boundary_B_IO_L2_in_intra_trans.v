// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module B_IO_L2_in_boundary_B_IO_L2_in_intra_trans (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_B_local_out_din,
        fifo_B_local_out_full_n,
        fifo_B_local_out_write,
        local_B_0_address0,
        local_B_0_ce0,
        local_B_0_q0,
        local_B_1_address0,
        local_B_1_ce0,
        local_B_1_q0,
        local_B_2_address0,
        local_B_2_ce0,
        local_B_2_q0,
        local_B_3_address0,
        local_B_3_ce0,
        local_B_3_q0,
        local_B_4_address0,
        local_B_4_ce0,
        local_B_4_q0,
        local_B_5_address0,
        local_B_5_ce0,
        local_B_5_q0,
        local_B_6_address0,
        local_B_6_ce0,
        local_B_6_q0,
        local_B_7_address0,
        local_B_7_ce0,
        local_B_7_q0,
        local_B_8_address0,
        local_B_8_ce0,
        local_B_8_q0,
        local_B_9_address0,
        local_B_9_ce0,
        local_B_9_q0,
        local_B_10_address0,
        local_B_10_ce0,
        local_B_10_q0,
        local_B_11_address0,
        local_B_11_ce0,
        local_B_11_q0,
        local_B_12_address0,
        local_B_12_ce0,
        local_B_12_q0,
        local_B_13_address0,
        local_B_13_ce0,
        local_B_13_q0,
        local_B_14_address0,
        local_B_14_ce0,
        local_B_14_q0,
        local_B_15_address0,
        local_B_15_ce0,
        local_B_15_q0,
        local_B_16_address0,
        local_B_16_ce0,
        local_B_16_q0,
        local_B_17_address0,
        local_B_17_ce0,
        local_B_17_q0,
        local_B_18_address0,
        local_B_18_ce0,
        local_B_18_q0,
        local_B_19_address0,
        local_B_19_ce0,
        local_B_19_q0,
        local_B_20_address0,
        local_B_20_ce0,
        local_B_20_q0,
        local_B_21_address0,
        local_B_21_ce0,
        local_B_21_q0,
        local_B_22_address0,
        local_B_22_ce0,
        local_B_22_q0,
        local_B_23_address0,
        local_B_23_ce0,
        local_B_23_q0,
        local_B_24_address0,
        local_B_24_ce0,
        local_B_24_q0,
        local_B_25_address0,
        local_B_25_ce0,
        local_B_25_q0,
        local_B_26_address0,
        local_B_26_ce0,
        local_B_26_q0,
        local_B_27_address0,
        local_B_27_ce0,
        local_B_27_q0,
        local_B_28_address0,
        local_B_28_ce0,
        local_B_28_q0,
        local_B_29_address0,
        local_B_29_ce0,
        local_B_29_q0,
        local_B_30_address0,
        local_B_30_ce0,
        local_B_30_q0,
        local_B_31_address0,
        local_B_31_ce0,
        local_B_31_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [512:0] fifo_B_local_out_din;
input   fifo_B_local_out_full_n;
output   fifo_B_local_out_write;
output  [3:0] local_B_0_address0;
output   local_B_0_ce0;
input  [15:0] local_B_0_q0;
output  [3:0] local_B_1_address0;
output   local_B_1_ce0;
input  [15:0] local_B_1_q0;
output  [3:0] local_B_2_address0;
output   local_B_2_ce0;
input  [15:0] local_B_2_q0;
output  [3:0] local_B_3_address0;
output   local_B_3_ce0;
input  [15:0] local_B_3_q0;
output  [3:0] local_B_4_address0;
output   local_B_4_ce0;
input  [15:0] local_B_4_q0;
output  [3:0] local_B_5_address0;
output   local_B_5_ce0;
input  [15:0] local_B_5_q0;
output  [3:0] local_B_6_address0;
output   local_B_6_ce0;
input  [15:0] local_B_6_q0;
output  [3:0] local_B_7_address0;
output   local_B_7_ce0;
input  [15:0] local_B_7_q0;
output  [3:0] local_B_8_address0;
output   local_B_8_ce0;
input  [15:0] local_B_8_q0;
output  [3:0] local_B_9_address0;
output   local_B_9_ce0;
input  [15:0] local_B_9_q0;
output  [3:0] local_B_10_address0;
output   local_B_10_ce0;
input  [15:0] local_B_10_q0;
output  [3:0] local_B_11_address0;
output   local_B_11_ce0;
input  [15:0] local_B_11_q0;
output  [3:0] local_B_12_address0;
output   local_B_12_ce0;
input  [15:0] local_B_12_q0;
output  [3:0] local_B_13_address0;
output   local_B_13_ce0;
input  [15:0] local_B_13_q0;
output  [3:0] local_B_14_address0;
output   local_B_14_ce0;
input  [15:0] local_B_14_q0;
output  [3:0] local_B_15_address0;
output   local_B_15_ce0;
input  [15:0] local_B_15_q0;
output  [3:0] local_B_16_address0;
output   local_B_16_ce0;
input  [15:0] local_B_16_q0;
output  [3:0] local_B_17_address0;
output   local_B_17_ce0;
input  [15:0] local_B_17_q0;
output  [3:0] local_B_18_address0;
output   local_B_18_ce0;
input  [15:0] local_B_18_q0;
output  [3:0] local_B_19_address0;
output   local_B_19_ce0;
input  [15:0] local_B_19_q0;
output  [3:0] local_B_20_address0;
output   local_B_20_ce0;
input  [15:0] local_B_20_q0;
output  [3:0] local_B_21_address0;
output   local_B_21_ce0;
input  [15:0] local_B_21_q0;
output  [3:0] local_B_22_address0;
output   local_B_22_ce0;
input  [15:0] local_B_22_q0;
output  [3:0] local_B_23_address0;
output   local_B_23_ce0;
input  [15:0] local_B_23_q0;
output  [3:0] local_B_24_address0;
output   local_B_24_ce0;
input  [15:0] local_B_24_q0;
output  [3:0] local_B_25_address0;
output   local_B_25_ce0;
input  [15:0] local_B_25_q0;
output  [3:0] local_B_26_address0;
output   local_B_26_ce0;
input  [15:0] local_B_26_q0;
output  [3:0] local_B_27_address0;
output   local_B_27_ce0;
input  [15:0] local_B_27_q0;
output  [3:0] local_B_28_address0;
output   local_B_28_ce0;
input  [15:0] local_B_28_q0;
output  [3:0] local_B_29_address0;
output   local_B_29_ce0;
input  [15:0] local_B_29_q0;
output  [3:0] local_B_30_address0;
output   local_B_30_ce0;
input  [15:0] local_B_30_q0;
output  [3:0] local_B_31_address0;
output   local_B_31_ce0;
input  [15:0] local_B_31_q0;

reg ap_idle;
reg fifo_B_local_out_write;
reg local_B_0_ce0;
reg local_B_1_ce0;
reg local_B_2_ce0;
reg local_B_3_ce0;
reg local_B_4_ce0;
reg local_B_5_ce0;
reg local_B_6_ce0;
reg local_B_7_ce0;
reg local_B_8_ce0;
reg local_B_9_ce0;
reg local_B_10_ce0;
reg local_B_11_ce0;
reg local_B_12_ce0;
reg local_B_13_ce0;
reg local_B_14_ce0;
reg local_B_15_ce0;
reg local_B_16_ce0;
reg local_B_17_ce0;
reg local_B_18_ce0;
reg local_B_19_ce0;
reg local_B_20_ce0;
reg local_B_21_ce0;
reg local_B_22_ce0;
reg local_B_23_ce0;
reg local_B_24_ce0;
reg local_B_25_ce0;
reg local_B_26_ce0;
reg local_B_27_ce0;
reg local_B_28_ce0;
reg local_B_29_ce0;
reg local_B_30_ce0;
reg local_B_31_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln158_reg_2111;
reg   [0:0] icmp_ln158_reg_2111_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln158_fu_790_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_B_local_out_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln158_reg_2111_pp0_iter1_reg;
wire   [0:0] icmp_ln160_fu_802_p2;
reg   [0:0] icmp_ln160_reg_2115;
wire   [0:0] or_ln160_fu_846_p2;
reg   [0:0] or_ln160_reg_2120;
reg   [0:0] or_ln160_reg_2120_pp0_iter1_reg;
wire   [3:0] select_ln160_fu_852_p3;
reg   [3:0] select_ln160_reg_2124;
reg   [0:0] ap_phi_mux_first_iter_0_phi_fu_698_p4;
wire    ap_loop_init;
wire   [63:0] p_cast_fu_976_p1;
reg   [3:0] c7_fu_124;
wire   [3:0] c7_3_fu_872_p3;
reg   [3:0] ap_sig_allocacmp_c7_2;
reg   [3:0] c6_fu_128;
reg   [3:0] ap_sig_allocacmp_c6_load;
reg   [7:0] indvar_flatten_fu_132;
wire   [7:0] select_ln160_1_fu_886_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] c5_fu_136;
wire   [1:0] select_ln158_1_fu_954_p3;
reg   [7:0] indvar_flatten108_fu_140;
wire   [7:0] add_ln158_1_fu_784_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten108_load;
reg   [15:0] local_B_31_load1_fu_144;
reg   [15:0] local_B_30_load3_fu_148;
reg   [15:0] local_B_29_load5_fu_152;
reg   [15:0] local_B_28_load7_fu_156;
reg   [15:0] local_B_27_load9_fu_160;
reg   [15:0] local_B_26_load11_fu_164;
reg   [15:0] local_B_25_load13_fu_168;
reg   [15:0] local_B_24_load15_fu_172;
reg   [15:0] local_B_23_load17_fu_176;
reg   [15:0] local_B_22_load19_fu_180;
reg   [15:0] local_B_21_load21_fu_184;
reg   [15:0] local_B_20_load23_fu_188;
reg   [15:0] local_B_19_load25_fu_192;
reg   [15:0] local_B_18_load27_fu_196;
reg   [15:0] local_B_17_load29_fu_200;
reg   [15:0] local_B_16_load31_fu_204;
reg   [15:0] local_B_15_load33_fu_208;
reg   [15:0] local_B_14_load35_fu_212;
reg   [15:0] local_B_13_load37_fu_216;
reg   [15:0] local_B_12_load39_fu_220;
reg   [15:0] local_B_11_load41_fu_224;
reg   [15:0] local_B_10_load43_fu_228;
reg   [15:0] local_B_9_load45_fu_232;
reg   [15:0] local_B_8_load47_fu_236;
reg   [15:0] local_B_7_load49_fu_240;
reg   [15:0] local_B_6_load51_fu_244;
reg   [15:0] local_B_5_load53_fu_248;
reg   [15:0] local_B_4_load55_fu_252;
reg   [15:0] local_B_3_load57_fu_256;
reg   [15:0] local_B_2_load59_fu_260;
reg   [15:0] local_B_1_load61_fu_264;
reg   [15:0] local_B_0_load63_fu_268;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln162_fu_828_p2;
wire   [0:0] xor_ln158_fu_822_p2;
wire   [3:0] select_ln158_fu_808_p3;
wire   [0:0] and_ln158_fu_834_p2;
wire   [0:0] or_ln158_fu_816_p2;
wire   [3:0] add_ln160_fu_840_p2;
wire   [0:0] or_ln162_fu_866_p2;
wire   [3:0] add_ln162_fu_860_p2;
wire   [7:0] add_ln160_1_fu_880_p2;
wire   [1:0] add_ln158_fu_948_p2;
wire   [3:0] empty_fu_965_p2;
wire   [3:0] select_ln158_1_cast_fu_961_p1;
wire   [3:0] empty_137_fu_970_p2;
wire   [511:0] or_ln151_s_fu_1728_p33;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_820;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 c7_fu_124 = 4'd0;
#0 c6_fu_128 = 4'd0;
#0 indvar_flatten_fu_132 = 8'd0;
#0 c5_fu_136 = 2'd0;
#0 indvar_flatten108_fu_140 = 8'd0;
#0 local_B_31_load1_fu_144 = 16'd0;
#0 local_B_30_load3_fu_148 = 16'd0;
#0 local_B_29_load5_fu_152 = 16'd0;
#0 local_B_28_load7_fu_156 = 16'd0;
#0 local_B_27_load9_fu_160 = 16'd0;
#0 local_B_26_load11_fu_164 = 16'd0;
#0 local_B_25_load13_fu_168 = 16'd0;
#0 local_B_24_load15_fu_172 = 16'd0;
#0 local_B_23_load17_fu_176 = 16'd0;
#0 local_B_22_load19_fu_180 = 16'd0;
#0 local_B_21_load21_fu_184 = 16'd0;
#0 local_B_20_load23_fu_188 = 16'd0;
#0 local_B_19_load25_fu_192 = 16'd0;
#0 local_B_18_load27_fu_196 = 16'd0;
#0 local_B_17_load29_fu_200 = 16'd0;
#0 local_B_16_load31_fu_204 = 16'd0;
#0 local_B_15_load33_fu_208 = 16'd0;
#0 local_B_14_load35_fu_212 = 16'd0;
#0 local_B_13_load37_fu_216 = 16'd0;
#0 local_B_12_load39_fu_220 = 16'd0;
#0 local_B_11_load41_fu_224 = 16'd0;
#0 local_B_10_load43_fu_228 = 16'd0;
#0 local_B_9_load45_fu_232 = 16'd0;
#0 local_B_8_load47_fu_236 = 16'd0;
#0 local_B_7_load49_fu_240 = 16'd0;
#0 local_B_6_load51_fu_244 = 16'd0;
#0 local_B_5_load53_fu_248 = 16'd0;
#0 local_B_4_load55_fu_252 = 16'd0;
#0 local_B_3_load57_fu_256 = 16'd0;
#0 local_B_2_load59_fu_260 = 16'd0;
#0 local_B_1_load61_fu_264 = 16'd0;
#0 local_B_0_load63_fu_268 = 16'd0;
#0 ap_done_reg = 1'b0;
end

B_IO_L2_in_boundary_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_fu_136 <= 2'd0;
        end else if (((icmp_ln158_reg_2111 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c5_fu_136 <= select_ln158_1_fu_954_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln158_fu_790_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c6_fu_128 <= select_ln160_fu_852_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c6_fu_128 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln158_fu_790_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c7_fu_124 <= c7_3_fu_872_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c7_fu_124 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln158_fu_790_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten108_fu_140 <= add_ln158_1_fu_784_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten108_fu_140 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln158_fu_790_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_132 <= select_ln160_1_fu_886_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_132 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln158_reg_2111 <= icmp_ln158_fu_790_p2;
        icmp_ln158_reg_2111_pp0_iter1_reg <= icmp_ln158_reg_2111;
        icmp_ln160_reg_2115 <= icmp_ln160_fu_802_p2;
        or_ln160_reg_2120 <= or_ln160_fu_846_p2;
        or_ln160_reg_2120_pp0_iter1_reg <= or_ln160_reg_2120;
        select_ln160_reg_2124 <= select_ln160_fu_852_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln158_reg_2111_pp0_iter2_reg <= icmp_ln158_reg_2111_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln160_reg_2120_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_B_0_load63_fu_268 <= local_B_0_q0;
        local_B_10_load43_fu_228 <= local_B_10_q0;
        local_B_11_load41_fu_224 <= local_B_11_q0;
        local_B_12_load39_fu_220 <= local_B_12_q0;
        local_B_13_load37_fu_216 <= local_B_13_q0;
        local_B_14_load35_fu_212 <= local_B_14_q0;
        local_B_15_load33_fu_208 <= local_B_15_q0;
        local_B_16_load31_fu_204 <= local_B_16_q0;
        local_B_17_load29_fu_200 <= local_B_17_q0;
        local_B_18_load27_fu_196 <= local_B_18_q0;
        local_B_19_load25_fu_192 <= local_B_19_q0;
        local_B_1_load61_fu_264 <= local_B_1_q0;
        local_B_20_load23_fu_188 <= local_B_20_q0;
        local_B_21_load21_fu_184 <= local_B_21_q0;
        local_B_22_load19_fu_180 <= local_B_22_q0;
        local_B_23_load17_fu_176 <= local_B_23_q0;
        local_B_24_load15_fu_172 <= local_B_24_q0;
        local_B_25_load13_fu_168 <= local_B_25_q0;
        local_B_26_load11_fu_164 <= local_B_26_q0;
        local_B_27_load9_fu_160 <= local_B_27_q0;
        local_B_28_load7_fu_156 <= local_B_28_q0;
        local_B_29_load5_fu_152 <= local_B_29_q0;
        local_B_2_load59_fu_260 <= local_B_2_q0;
        local_B_30_load3_fu_148 <= local_B_30_q0;
        local_B_31_load1_fu_144 <= local_B_31_q0;
        local_B_3_load57_fu_256 <= local_B_3_q0;
        local_B_4_load55_fu_252 <= local_B_4_q0;
        local_B_5_load53_fu_248 <= local_B_5_q0;
        local_B_6_load51_fu_244 <= local_B_6_q0;
        local_B_7_load49_fu_240 <= local_B_7_q0;
        local_B_8_load47_fu_236 <= local_B_8_q0;
        local_B_9_load45_fu_232 <= local_B_9_q0;
    end
end

always @ (*) begin
    if (((icmp_ln158_fu_790_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_820)) begin
            ap_phi_mux_first_iter_0_phi_fu_698_p4 = 1'd0;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_first_iter_0_phi_fu_698_p4 = 1'd1;
        end else begin
            ap_phi_mux_first_iter_0_phi_fu_698_p4 = 1'd0;
        end
    end else begin
        ap_phi_mux_first_iter_0_phi_fu_698_p4 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c6_load = 4'd0;
    end else begin
        ap_sig_allocacmp_c6_load = c6_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c7_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_c7_2 = c7_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten108_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten108_load = indvar_flatten108_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln158_reg_2111_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fifo_B_local_out_blk_n = fifo_B_local_out_full_n;
    end else begin
        fifo_B_local_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln158_reg_2111_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fifo_B_local_out_write = 1'b1;
    end else begin
        fifo_B_local_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_0_ce0 = 1'b1;
    end else begin
        local_B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_10_ce0 = 1'b1;
    end else begin
        local_B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_11_ce0 = 1'b1;
    end else begin
        local_B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_12_ce0 = 1'b1;
    end else begin
        local_B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_13_ce0 = 1'b1;
    end else begin
        local_B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_14_ce0 = 1'b1;
    end else begin
        local_B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_15_ce0 = 1'b1;
    end else begin
        local_B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_16_ce0 = 1'b1;
    end else begin
        local_B_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_17_ce0 = 1'b1;
    end else begin
        local_B_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_18_ce0 = 1'b1;
    end else begin
        local_B_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_19_ce0 = 1'b1;
    end else begin
        local_B_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_1_ce0 = 1'b1;
    end else begin
        local_B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_20_ce0 = 1'b1;
    end else begin
        local_B_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_21_ce0 = 1'b1;
    end else begin
        local_B_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_22_ce0 = 1'b1;
    end else begin
        local_B_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_23_ce0 = 1'b1;
    end else begin
        local_B_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_24_ce0 = 1'b1;
    end else begin
        local_B_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_25_ce0 = 1'b1;
    end else begin
        local_B_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_26_ce0 = 1'b1;
    end else begin
        local_B_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_27_ce0 = 1'b1;
    end else begin
        local_B_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_28_ce0 = 1'b1;
    end else begin
        local_B_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_29_ce0 = 1'b1;
    end else begin
        local_B_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_2_ce0 = 1'b1;
    end else begin
        local_B_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_30_ce0 = 1'b1;
    end else begin
        local_B_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_31_ce0 = 1'b1;
    end else begin
        local_B_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_3_ce0 = 1'b1;
    end else begin
        local_B_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_4_ce0 = 1'b1;
    end else begin
        local_B_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_5_ce0 = 1'b1;
    end else begin
        local_B_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_6_ce0 = 1'b1;
    end else begin
        local_B_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_7_ce0 = 1'b1;
    end else begin
        local_B_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_8_ce0 = 1'b1;
    end else begin
        local_B_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_9_ce0 = 1'b1;
    end else begin
        local_B_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln158_1_fu_784_p2 = (ap_sig_allocacmp_indvar_flatten108_load + 8'd1);

assign add_ln158_fu_948_p2 = (c5_fu_136 + 2'd1);

assign add_ln160_1_fu_880_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln160_fu_840_p2 = (select_ln158_fu_808_p3 + 4'd1);

assign add_ln162_fu_860_p2 = (ap_sig_allocacmp_c7_2 + 4'd1);

assign and_ln158_fu_834_p2 = (xor_ln158_fu_822_p2 & icmp_ln162_fu_828_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln158_reg_2111_pp0_iter2_reg == 1'd0) & (fifo_B_local_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_820 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln158_reg_2111 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign c7_3_fu_872_p3 = ((or_ln162_fu_866_p2[0:0] == 1'b1) ? 4'd1 : add_ln162_fu_860_p2);

assign empty_137_fu_970_p2 = (empty_fu_965_p2 + select_ln158_1_cast_fu_961_p1);

assign empty_fu_965_p2 = select_ln160_reg_2124 << 4'd1;

assign fifo_B_local_out_din = or_ln151_s_fu_1728_p33;

assign icmp_ln158_fu_790_p2 = ((ap_sig_allocacmp_indvar_flatten108_load == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_802_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln162_fu_828_p2 = ((ap_sig_allocacmp_c7_2 == 4'd8) ? 1'b1 : 1'b0);

assign local_B_0_address0 = p_cast_fu_976_p1;

assign local_B_10_address0 = p_cast_fu_976_p1;

assign local_B_11_address0 = p_cast_fu_976_p1;

assign local_B_12_address0 = p_cast_fu_976_p1;

assign local_B_13_address0 = p_cast_fu_976_p1;

assign local_B_14_address0 = p_cast_fu_976_p1;

assign local_B_15_address0 = p_cast_fu_976_p1;

assign local_B_16_address0 = p_cast_fu_976_p1;

assign local_B_17_address0 = p_cast_fu_976_p1;

assign local_B_18_address0 = p_cast_fu_976_p1;

assign local_B_19_address0 = p_cast_fu_976_p1;

assign local_B_1_address0 = p_cast_fu_976_p1;

assign local_B_20_address0 = p_cast_fu_976_p1;

assign local_B_21_address0 = p_cast_fu_976_p1;

assign local_B_22_address0 = p_cast_fu_976_p1;

assign local_B_23_address0 = p_cast_fu_976_p1;

assign local_B_24_address0 = p_cast_fu_976_p1;

assign local_B_25_address0 = p_cast_fu_976_p1;

assign local_B_26_address0 = p_cast_fu_976_p1;

assign local_B_27_address0 = p_cast_fu_976_p1;

assign local_B_28_address0 = p_cast_fu_976_p1;

assign local_B_29_address0 = p_cast_fu_976_p1;

assign local_B_2_address0 = p_cast_fu_976_p1;

assign local_B_30_address0 = p_cast_fu_976_p1;

assign local_B_31_address0 = p_cast_fu_976_p1;

assign local_B_3_address0 = p_cast_fu_976_p1;

assign local_B_4_address0 = p_cast_fu_976_p1;

assign local_B_5_address0 = p_cast_fu_976_p1;

assign local_B_6_address0 = p_cast_fu_976_p1;

assign local_B_7_address0 = p_cast_fu_976_p1;

assign local_B_8_address0 = p_cast_fu_976_p1;

assign local_B_9_address0 = p_cast_fu_976_p1;

assign or_ln151_s_fu_1728_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{local_B_31_load1_fu_144}, {local_B_30_load3_fu_148}}, {local_B_29_load5_fu_152}}, {local_B_28_load7_fu_156}}, {local_B_27_load9_fu_160}}, {local_B_26_load11_fu_164}}, {local_B_25_load13_fu_168}}, {local_B_24_load15_fu_172}}, {local_B_23_load17_fu_176}}, {local_B_22_load19_fu_180}}, {local_B_21_load21_fu_184}}, {local_B_20_load23_fu_188}}, {local_B_19_load25_fu_192}}, {local_B_18_load27_fu_196}}, {local_B_17_load29_fu_200}}, {local_B_16_load31_fu_204}}, {local_B_15_load33_fu_208}}, {local_B_14_load35_fu_212}}, {local_B_13_load37_fu_216}}, {local_B_12_load39_fu_220}}, {local_B_11_load41_fu_224}}, {local_B_10_load43_fu_228}}, {local_B_9_load45_fu_232}}, {local_B_8_load47_fu_236}}, {local_B_7_load49_fu_240}}, {local_B_6_load51_fu_244}}, {local_B_5_load53_fu_248}}, {local_B_4_load55_fu_252}}, {local_B_3_load57_fu_256}}, {local_B_2_load59_fu_260}}, {local_B_1_load61_fu_264}}, {local_B_0_load63_fu_268}};

assign or_ln158_fu_816_p2 = (icmp_ln160_fu_802_p2 | ap_phi_mux_first_iter_0_phi_fu_698_p4);

assign or_ln160_fu_846_p2 = (or_ln158_fu_816_p2 | and_ln158_fu_834_p2);

assign or_ln162_fu_866_p2 = (icmp_ln160_fu_802_p2 | and_ln158_fu_834_p2);

assign p_cast_fu_976_p1 = empty_137_fu_970_p2;

assign select_ln158_1_cast_fu_961_p1 = select_ln158_1_fu_954_p3;

assign select_ln158_1_fu_954_p3 = ((icmp_ln160_reg_2115[0:0] == 1'b1) ? add_ln158_fu_948_p2 : c5_fu_136);

assign select_ln158_fu_808_p3 = ((icmp_ln160_fu_802_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_c6_load);

assign select_ln160_1_fu_886_p3 = ((icmp_ln160_fu_802_p2[0:0] == 1'b1) ? 8'd1 : add_ln160_1_fu_880_p2);

assign select_ln160_fu_852_p3 = ((and_ln158_fu_834_p2[0:0] == 1'b1) ? add_ln160_fu_840_p2 : select_ln158_fu_808_p3);

assign xor_ln158_fu_822_p2 = (icmp_ln160_fu_802_p2 ^ 1'd1);

endmodule //B_IO_L2_in_boundary_B_IO_L2_in_intra_trans
