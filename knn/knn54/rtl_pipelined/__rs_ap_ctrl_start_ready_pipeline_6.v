// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
module __rs_ap_ctrl_start_ready_pipeline_6 #(
    parameter HEAD_LEVEL      = 0,
    parameter BODY_LEVEL      = 6,
    parameter TAIL_LEVEL      = 0,
    parameter __HEAD_REGION   = "",
    parameter __BODY_0_REGION = "",
    parameter __BODY_1_REGION = "",
    parameter __BODY_2_REGION = "",
    parameter __BODY_3_REGION = "",
    parameter __BODY_4_REGION = "",
    parameter __BODY_5_REGION = "",
    parameter __TAIL_REGION   = "",
    parameter GRACE_PERIOD    = ( BODY_LEVEL + HEAD_LEVEL + TAIL_LEVEL ) * 2
) (
    input wire  clk,
    output wire if_empty_n,
    output wire if_full_n,
    input wire  if_read,
    input wire  if_write,
    input wire  reset
);

wire        RS_AP_PP_BODY_0_clk;
wire [ 0:0] RS_AP_PP_BODY_0_if_din;
wire [ 0:0] RS_AP_PP_BODY_0_if_dout;
wire        RS_AP_PP_BODY_0_if_empty_n;
wire        RS_AP_PP_BODY_0_if_full_n;
wire        RS_AP_PP_BODY_0_if_read;
wire        RS_AP_PP_BODY_0_if_write;
wire        RS_AP_PP_BODY_0_reset;
wire        RS_AP_PP_BODY_1_clk;
wire [ 0:0] RS_AP_PP_BODY_1_if_din;
wire [ 0:0] RS_AP_PP_BODY_1_if_dout;
wire        RS_AP_PP_BODY_1_if_empty_n;
wire        RS_AP_PP_BODY_1_if_full_n;
wire        RS_AP_PP_BODY_1_if_read;
wire        RS_AP_PP_BODY_1_if_write;
wire        RS_AP_PP_BODY_1_reset;
wire        RS_AP_PP_BODY_2_clk;
wire [ 0:0] RS_AP_PP_BODY_2_if_din;
wire [ 0:0] RS_AP_PP_BODY_2_if_dout;
wire        RS_AP_PP_BODY_2_if_empty_n;
wire        RS_AP_PP_BODY_2_if_full_n;
wire        RS_AP_PP_BODY_2_if_read;
wire        RS_AP_PP_BODY_2_if_write;
wire        RS_AP_PP_BODY_2_reset;
wire        RS_AP_PP_BODY_3_clk;
wire [ 0:0] RS_AP_PP_BODY_3_if_din;
wire [ 0:0] RS_AP_PP_BODY_3_if_dout;
wire        RS_AP_PP_BODY_3_if_empty_n;
wire        RS_AP_PP_BODY_3_if_full_n;
wire        RS_AP_PP_BODY_3_if_read;
wire        RS_AP_PP_BODY_3_if_write;
wire        RS_AP_PP_BODY_3_reset;
wire        RS_AP_PP_BODY_4_clk;
wire [ 0:0] RS_AP_PP_BODY_4_if_din;
wire [ 0:0] RS_AP_PP_BODY_4_if_dout;
wire        RS_AP_PP_BODY_4_if_empty_n;
wire        RS_AP_PP_BODY_4_if_full_n;
wire        RS_AP_PP_BODY_4_if_read;
wire        RS_AP_PP_BODY_4_if_write;
wire        RS_AP_PP_BODY_4_reset;
wire        RS_AP_PP_BODY_5_clk;
wire [ 0:0] RS_AP_PP_BODY_5_if_din;
wire [ 0:0] RS_AP_PP_BODY_5_if_dout;
wire        RS_AP_PP_BODY_5_if_empty_n;
wire        RS_AP_PP_BODY_5_if_full_n;
wire        RS_AP_PP_BODY_5_if_read;
wire        RS_AP_PP_BODY_5_if_write;
wire        RS_AP_PP_BODY_5_reset;
wire        RS_AP_PP_HEAD_clk;
wire [ 0:0] RS_AP_PP_HEAD_if_din;
wire [ 0:0] RS_AP_PP_HEAD_if_dout;
wire        RS_AP_PP_HEAD_if_empty_n;
wire        RS_AP_PP_HEAD_if_full_n;
wire        RS_AP_PP_HEAD_if_read;
wire        RS_AP_PP_HEAD_if_write;
wire        RS_AP_PP_HEAD_reset;
wire        RS_AP_PP_TAIL_GATE_clk;
wire [ 0:0] RS_AP_PP_TAIL_GATE_if_din;
wire [ 0:0] RS_AP_PP_TAIL_GATE_if_dout;
wire        RS_AP_PP_TAIL_GATE_if_empty_n;
wire        RS_AP_PP_TAIL_GATE_if_full_n;
wire        RS_AP_PP_TAIL_GATE_if_read;
wire        RS_AP_PP_TAIL_GATE_if_write;
wire        RS_AP_PP_TAIL_GATE_reset;
wire        RS_AP_PP_TAIL_clk;
wire        RS_AP_PP_TAIL_if_empty_n;
wire        RS_AP_PP_TAIL_if_full_n;
wire        RS_AP_PP_TAIL_if_read;
wire        RS_AP_PP_TAIL_if_write;
wire        RS_AP_PP_TAIL_reset;


(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH    (1),
    .ENABLE_REG    (BODY_LEVEL - 0),
    .__NEXT_REGION (__BODY_1_REGION),
    .__PREV_REGION (__HEAD_REGION),
    .__REGION      (__BODY_0_REGION)
) RS_AP_PP_BODY_0 (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_BODY_0_if_empty_n),
    .if_full_n  (RS_AP_PP_BODY_0_if_full_n),
    .if_read    (RS_AP_PP_BODY_1_if_full_n),
    .if_write   (RS_AP_PP_HEAD_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH    (1),
    .ENABLE_REG    (BODY_LEVEL - 1),
    .__NEXT_REGION (__BODY_2_REGION),
    .__PREV_REGION (__BODY_0_REGION),
    .__REGION      (__BODY_1_REGION)
) RS_AP_PP_BODY_1 (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_BODY_1_if_empty_n),
    .if_full_n  (RS_AP_PP_BODY_1_if_full_n),
    .if_read    (RS_AP_PP_BODY_2_if_full_n),
    .if_write   (RS_AP_PP_BODY_0_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH    (1),
    .ENABLE_REG    (BODY_LEVEL - 2),
    .__NEXT_REGION (__BODY_3_REGION),
    .__PREV_REGION (__BODY_1_REGION),
    .__REGION      (__BODY_2_REGION)
) RS_AP_PP_BODY_2 (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_BODY_2_if_empty_n),
    .if_full_n  (RS_AP_PP_BODY_2_if_full_n),
    .if_read    (RS_AP_PP_BODY_3_if_full_n),
    .if_write   (RS_AP_PP_BODY_1_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH    (1),
    .ENABLE_REG    (BODY_LEVEL - 3),
    .__NEXT_REGION (__BODY_4_REGION),
    .__PREV_REGION (__BODY_2_REGION),
    .__REGION      (__BODY_3_REGION)
) RS_AP_PP_BODY_3 (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_BODY_3_if_empty_n),
    .if_full_n  (RS_AP_PP_BODY_3_if_full_n),
    .if_read    (RS_AP_PP_BODY_4_if_full_n),
    .if_write   (RS_AP_PP_BODY_2_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH    (1),
    .ENABLE_REG    (BODY_LEVEL - 4),
    .__NEXT_REGION (__BODY_5_REGION),
    .__PREV_REGION (__BODY_3_REGION),
    .__REGION      (__BODY_4_REGION)
) RS_AP_PP_BODY_4 (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_BODY_4_if_empty_n),
    .if_full_n  (RS_AP_PP_BODY_4_if_full_n),
    .if_read    (RS_AP_PP_BODY_5_if_full_n),
    .if_write   (RS_AP_PP_BODY_3_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH    (1),
    .ENABLE_REG    (BODY_LEVEL - 5),
    .__NEXT_REGION (__TAIL_REGION),
    .__PREV_REGION (__BODY_4_REGION),
    .__REGION      (__BODY_5_REGION)
) RS_AP_PP_BODY_5 (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_BODY_5_if_empty_n),
    .if_full_n  (RS_AP_PP_BODY_5_if_full_n),
    .if_read    (RS_AP_PP_TAIL_GATE_if_full_n),
    .if_write   (RS_AP_PP_BODY_4_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (HEAD_LEVEL),
    .__REGION   (__HEAD_REGION)
) RS_AP_PP_HEAD (
    .clk        (clk),
    .if_empty_n (RS_AP_PP_HEAD_if_empty_n),
    .if_full_n  (if_full_n),
    .if_read    (RS_AP_PP_BODY_0_if_full_n),
    .if_write   (if_write),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_ap_ctrl_pipeline_tail #(
    .GRACE_PERIOD (GRACE_PERIOD),
    .TAIL_LEVEL   (0),
    .__REGION     (__TAIL_REGION)
) RS_AP_PP_TAIL (
    .clk        (clk),
    .if_empty_n (if_empty_n),
    .if_full_n  (RS_AP_PP_TAIL_if_full_n),
    .if_read    (if_read),
    .if_write   (RS_AP_PP_TAIL_GATE_if_empty_n),
    .reset      (reset)
);

(* KEEP_HIERARCHY="TRUE" *)
__rs_fifo_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (TAIL_LEVEL),
    .__REGION   (__TAIL_REGION)
) RS_AP_PP_TAIL_GATE (
    .clk        (clk),
    .if_din     ( 1'b0),
    .if_empty_n (RS_AP_PP_TAIL_GATE_if_empty_n),
    .if_full_n  (RS_AP_PP_TAIL_GATE_if_full_n),
    .if_read    (RS_AP_PP_TAIL_if_full_n),
    .if_write   (RS_AP_PP_BODY_5_if_empty_n),
    .reset      (reset)
);

endmodule  // __rs_ap_ctrl_start_ready_pipeline_6