// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module krnl_partialKnn_wrapper_0_load (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        flag,
        tile_idx,
        local_SP_address0,
        local_SP_ce0,
        local_SP_we0,
        local_SP_d0,
        searchSpace_0_read_addr_s_din,
        searchSpace_0_read_addr_s_full_n,
        searchSpace_0_read_addr_s_write,
        searchSpace_read_addr_offset_val,
        searchSpace_0_read_data_s_dout,
        searchSpace_0_read_data_s_empty_n,
        searchSpace_0_read_data_s_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] flag;
input  [1:0] tile_idx;
output  [10:0] local_SP_address0;
output   local_SP_ce0;
output   local_SP_we0;
output  [255:0] local_SP_d0;
output  [63:0] searchSpace_0_read_addr_s_din;
input   searchSpace_0_read_addr_s_full_n;
output   searchSpace_0_read_addr_s_write;
input  [63:0] searchSpace_read_addr_offset_val;
input  [256:0] searchSpace_0_read_data_s_dout;
input   searchSpace_0_read_data_s_empty_n;
output   searchSpace_0_read_data_s_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg searchSpace_0_read_addr_s_write;
reg searchSpace_0_read_data_s_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [12:0] add2_fu_91_p2;
reg   [12:0] add2_reg_107;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_done;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_idle;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_ready;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_data_s_read;
wire   [63:0] grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_addr_s_din;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_addr_s_write;
wire   [10:0] grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_address0;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_ce0;
wire    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_we0;
wire   [255:0] grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_d0;
reg    grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [12:0] mul_fu_83_p3;
reg    ap_block_state2_on_subcall_done;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start_reg = 1'b0;
end

krnl_partialKnn_wrapper_0_load_Pipeline_VITIS_LOOP_55_1 grp_load_Pipeline_VITIS_LOOP_55_1_fu_64(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start),
    .ap_done(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_done),
    .ap_idle(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_idle),
    .ap_ready(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_ready),
    .searchSpace_0_read_data_s_dout(searchSpace_0_read_data_s_dout),
    .searchSpace_0_read_data_s_empty_n(searchSpace_0_read_data_s_empty_n),
    .searchSpace_0_read_data_s_read(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_data_s_read),
    .zext_ln55(add2_reg_107),
    .searchSpace_read_addr_offset_val(searchSpace_read_addr_offset_val),
    .searchSpace_0_read_addr_s_din(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_addr_s_din),
    .searchSpace_0_read_addr_s_full_n(searchSpace_0_read_addr_s_full_n),
    .searchSpace_0_read_addr_s_write(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_addr_s_write),
    .local_SP_address0(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_address0),
    .local_SP_ce0(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_ce0),
    .local_SP_we0(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_we0),
    .local_SP_d0(grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (flag == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start_reg <= 1'b1;
        end else if ((grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_ready == 1'b1)) begin
            grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add2_reg_107[12 : 11] <= add2_fu_91_p2[12 : 11];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((flag == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        searchSpace_0_read_addr_s_write = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_addr_s_write;
    end else begin
        searchSpace_0_read_addr_s_write = 1'b0;
    end
end

always @ (*) begin
    if (((flag == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        searchSpace_0_read_data_s_read = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_data_s_read;
    end else begin
        searchSpace_0_read_data_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_fu_91_p2 = (mul_fu_83_p3 | 13'd16);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_done == 1'b0) & (flag == 1'd1));
end

assign grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_ap_start_reg;

assign local_SP_address0 = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_address0;

assign local_SP_ce0 = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_ce0;

assign local_SP_d0 = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_d0;

assign local_SP_we0 = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_local_SP_we0;

assign mul_fu_83_p3 = {{tile_idx}, {11'd0}};

assign searchSpace_0_read_addr_s_din = grp_load_Pipeline_VITIS_LOOP_55_1_fu_64_searchSpace_0_read_addr_s_din;

always @ (posedge ap_clk) begin
    add2_reg_107[10:0] <= 11'b00000010000;
end

endmodule //krnl_partialKnn_wrapper_0_load
