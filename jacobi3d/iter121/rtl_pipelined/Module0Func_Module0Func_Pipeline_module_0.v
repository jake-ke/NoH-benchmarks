`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module Module0Func_Module0Func_Pipeline_module_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dram_t1_bank_0_fifo_s_dout,
        dram_t1_bank_0_fifo_s_empty_n,
        dram_t1_bank_0_fifo_s_read,
        fifo_st_0_din,
        fifo_st_0_full_n,
        fifo_st_0_write
);
parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [512:0] dram_t1_bank_0_fifo_s_dout;
input   dram_t1_bank_0_fifo_s_empty_n;
output   dram_t1_bank_0_fifo_s_read;
output  [512:0] fifo_st_0_din;
input   fifo_st_0_full_n;
output   fifo_st_0_write;
reg ap_done;
reg ap_idle;
reg dram_t1_bank_0_fifo_s_read;
reg fifo_st_0_write;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_st_0_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_reg_302;
wire   [0:0] tmp_nbreadreq_fu_92_p3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] elem_val_fu_119_p1;
reg   [31:0] elem_val_reg_306;
reg   [31:0] trunc_ln_reg_311;
reg   [31:0] tmp_1_reg_316;
reg   [31:0] tmp_2_reg_321;
reg   [31:0] tmp_3_reg_326;
reg   [31:0] tmp_4_reg_331;
reg   [31:0] tmp_5_reg_336;
reg   [31:0] tmp_6_reg_341;
reg   [31:0] tmp_8_reg_346;
reg   [31:0] trunc_ln151_7_reg_351;
reg   [31:0] trunc_ln151_9_reg_356;
reg   [31:0] tmp_9_reg_361;
reg   [31:0] trunc_ln151_s_reg_366;
reg   [31:0] trunc_ln151_1_reg_371;
reg   [31:0] tmp_7_reg_376;
reg   [31:0] tmp_s_reg_381;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [511:0] or_ln151_s_fu_273_p17;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        elem_val_reg_306 <= elem_val_fu_119_p1;
        tmp_1_reg_316 <= {{dram_t1_bank_0_fifo_s_dout[479:448]}};
        tmp_2_reg_321 <= {{dram_t1_bank_0_fifo_s_dout[447:416]}};
        tmp_3_reg_326 <= {{dram_t1_bank_0_fifo_s_dout[415:384]}};
        tmp_4_reg_331 <= {{dram_t1_bank_0_fifo_s_dout[383:352]}};
        tmp_5_reg_336 <= {{dram_t1_bank_0_fifo_s_dout[351:320]}};
        tmp_6_reg_341 <= {{dram_t1_bank_0_fifo_s_dout[319:288]}};
        tmp_7_reg_376 <= {{dram_t1_bank_0_fifo_s_dout[223:192]}};
        tmp_8_reg_346 <= {{dram_t1_bank_0_fifo_s_dout[287:256]}};
        tmp_9_reg_361 <= {{dram_t1_bank_0_fifo_s_dout[159:128]}};
        tmp_reg_302 <= tmp_nbreadreq_fu_92_p3;
        tmp_s_reg_381 <= {{dram_t1_bank_0_fifo_s_dout[95:64]}};
        trunc_ln151_1_reg_371 <= {{dram_t1_bank_0_fifo_s_dout[63:32]}};
        trunc_ln151_7_reg_351 <= {{dram_t1_bank_0_fifo_s_dout[255:224]}};
        trunc_ln151_9_reg_356 <= {{dram_t1_bank_0_fifo_s_dout[191:160]}};
        trunc_ln151_s_reg_366 <= {{dram_t1_bank_0_fifo_s_dout[127:96]}};
        trunc_ln_reg_311 <= {{dram_t1_bank_0_fifo_s_dout[511:480]}};
    end
end
always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end
always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_nbreadreq_fu_92_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (dram_t1_bank_0_fifo_s_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dram_t1_bank_0_fifo_s_read = 1'b1;
    end else begin
        dram_t1_bank_0_fifo_s_read = 1'b0;
    end
end
always @ (*) begin
    if (((tmp_reg_302 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_st_0_blk_n = fifo_st_0_full_n;
    end else begin
        fifo_st_0_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((tmp_reg_302 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_st_0_write = 1'b1;
    end else begin
        fifo_st_0_write = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter1));
end
always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter1));
end
always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tmp_reg_302 == 1'd1) & (fifo_st_0_full_n == 1'b0));
end
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_ready = 1'b0;
assign elem_val_fu_119_p1 = dram_t1_bank_0_fifo_s_dout[31:0];
assign fifo_st_0_din = or_ln151_s_fu_273_p17;
assign or_ln151_s_fu_273_p17 = {{{{{{{{{{{{{{{{elem_val_reg_306}, {trunc_ln151_1_reg_371}}, {tmp_s_reg_381}}, {trunc_ln151_s_reg_366}}, {tmp_9_reg_361}}, {trunc_ln151_9_reg_356}}, {tmp_7_reg_376}}, {trunc_ln151_7_reg_351}}, {tmp_8_reg_346}}, {tmp_6_reg_341}}, {tmp_5_reg_336}}, {tmp_4_reg_331}}, {tmp_3_reg_326}}, {tmp_2_reg_321}}, {tmp_1_reg_316}}, {trunc_ln_reg_311}};
assign tmp_nbreadreq_fu_92_p3 = dram_t1_bank_0_fifo_s_empty_n;
endmodule